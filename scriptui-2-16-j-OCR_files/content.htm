<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" lang="en-gb">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>scriptui-2-16-j-OCR</title>
    <style type="text/css">
      * {
        margin: 0;
        padding: 0;
        text-indent: 0;
      }

      h1 {
        color: #cd1719;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 17pt;
      }

      .p,
      p {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
        margin: 0pt;
      }

      .s1 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: italic;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      .s2 {
        color: #0080c7;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      .a,
      a {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      h2 {
        color: #cd1719;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 13pt;
      }

      .h4,
      h4 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 11pt;
      }

      .s3 {
        color: #0b4697;
        font-family: Monaco, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s4 {
        color: #0b4697;
        font-family: "Lucida Grande", sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s5 {
        color: #0b4697;
        font-family: "Times New Roman", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s6 {
        color: #0080c7;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 10pt;
      }

      .s7 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s8 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 10pt;
      }

      .s9 {
        color: #cd1719;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s10 {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s11 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 9pt;
      }

      h3 {
        color: #cd1719;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 12pt;
      }

      .s12 {
        color: #007e2f;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s14 {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 11pt;
      }

      .s16 {
        color: #007e2f;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 10pt;
      }

      .s17 {
        color: #cd1719;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      .s18 {
        color: #007e2f;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 10pt;
      }

      .s19 {
        color: black;
        font-family: "Times New Roman", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
        vertical-align: -2pt;
      }

      .s20 {
        color: #0080c7;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      .s21 {
        color: black;
        font-family: "Times New Roman", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
        vertical-align: -5pt;
      }

      .s22 {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s23 {
        color: black;
        font-family: Arial-BoldItalicMT, sans-serif;
        font-style: italic;
        font-weight: bold;
        text-decoration: none;
        font-size: 11pt;
      }

      .s25 {
        color: #0080c7;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 9pt;
      }

      .s26 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s27 {
        color: #cd1719;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s28 {
        color: black;
        font-family: "Times New Roman", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
        vertical-align: -4pt;
      }

      .s29 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 10pt;
      }

      .s30 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s32 {
        color: #007e2f;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s33 {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s34 {
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 20pt;
      }

      .s35 {
        color: black;
        font-family: "Times New Roman", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 20pt;
        vertical-align: -15pt;
      }

      .s36 {
        color: #007e2f;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      .s37 {
        color: #cd1719;
        font-family: Arial, sans-serif;
        font-style: normal;
        font-weight: bold;
        text-decoration: none;
        font-size: 11pt;
      }

      .s38 {
        color: black;
        font-family: Arial, sans-serif;
        font-style: italic;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s39 {
        color: #0b4697;
        font-family: Monaco, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 8.5pt;
      }

      .s40 {
        color: #0b4697;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      .s41 {
        color: #0b4697;
        font-family: "Lucida Grande", sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 8.5pt;
      }

      li {
        display: block;
      }

      #l1 {
        padding-left: 0pt;
        counter-reset: c1 1;
      }

      #l1 > li > *:first-child:before {
        counter-increment: c1;
        content: counter(c1, decimal) "- ";
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 10pt;
      }

      #l1 > li:first-child > *:first-child:before {
        counter-increment: c1 0;
      }

      #l2 {
        padding-left: 0pt;
        counter-reset: c2 1;
      }

      #l2 > li > *:first-child:before {
        counter-increment: c2;
        content: "(" counter(c2, lower-latin) ") ";
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 9pt;
      }

      #l2 > li:first-child > *:first-child:before {
        counter-increment: c2 0;
      }

      li {
        display: block;
      }

      #l3 {
        padding-left: 0pt;
        counter-reset: d1 1;
      }

      #l3 > li > *:first-child:before {
        counter-increment: d1;
        content: counter(d1, decimal) ". ";
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      #l3 > li:first-child > *:first-child:before {
        counter-increment: d1 0;
      }

      li {
        display: block;
      }

      #l4 {
        padding-left: 0pt;
      }

      #l4 > li > *:first-child:before {
        content: "– ";
        color: black;
        font-family: "Myriad Pro", serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: none;
        font-size: 11pt;
      }

      table,
      tbody {
        vertical-align: top;
        overflow: visible;
      }
    </style>
  </head>

  <body>
    <h2
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a7">Hello world</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Inevitably, the simplest window is one that prints a message on the
      screen. Here is an example that shows the bare basics of a ScriptUI
      window:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myMessage </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;statictext&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">myMessage.text </span>=
      <span class="s9">&quot;Hello, world!&quot;</span>;
      <span class="s7">myWindow.show </span>( );
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="71" alt="image" src="Image_002.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The first line defines a new window of type
      <span class="h4">dialog</span>; the second line adds
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a <span class="h4">control </span>to the window, here a
      <span class="h4">statictext </span>item; the third line sets the content
      of the statictext control; the last line displays the window. To dismiss
      the dialog, press the exit cross in the top right of the dialog. Later
      we’ll see how to dismiss dialogs more elegantly.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 6pt; text-indent: 0pt; text-align: left">
      <a name="a8">Types of window</a>
    </h2>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      In fact, scriptUI has a third window type,
      <span class="s11">window</span>, which appears to behave like a palette in
      many ways. Windows, unlike palettes, have minimise and maximise buttons.
      You don’t see it used much and I won’t deal with them in this guide.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are two types of window: dialog and palette. You’re already familiar
      with the difference between the two because they reflect the way that
      windows behave in InDesign. A <span class="h4">dialog </span>remains
      visible as long as you interact with
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      it, and while it is visible you can’t do anything else. Examples are the
      Text Frame Options and the Paragraph Rules dialogs: only after dismissing
      these dialogs can you continue to work in InDesign. On the other hand, if
      a <span class="h4">palette </span>is displayed on the screen you can
      continue to work in InDesign. For instance, in InDesign’s UI you have the
      Paragraph and Character palettes (called ‘panels’ since CS4): you can work
      while these palettes are displayed. In other words, dialogs are modal,
      palettes are not.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      InDesign’s UI dialogs and palettes are visually distinct in that dialogs
      have OK and Cancel buttons, while palettes do not. But this difference
      doesn’t
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      necessarily hold in ScriptUI: you can do a palette with OK and Cancel
      buttons if you feel like it, and you could do a dialog without them
      (though that wouldn’t be a very useful dialog).
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a9">Dialog</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The Hello World script creates a dialog-type window.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a10">Palette</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To create a palette-style window you need to specify the window as a
      palette and you need to target a custom engine. The Hello World example
      can be turned into a palette as follows:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
   <div 
      class="code"
      style="
        background-color:#92c4df;
        padding-left: 0px;
        "
      >
      <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      #targetengine &quot;session&quot;; // not needed in
      Illustrator/AfterEffects
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;palette&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myMessage </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;statictext&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">myMessage.text </span>=
      <span class="s9">&quot;Hello, world!&quot;</span>;
      <span class="s7">myWindow.show </span>( );
    </p>
    </div>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      In CS3 and CS4 you can use palettes only if you run the script from the
      scripts panel. Once run from there, you can run the script from the
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      ESTK. In CS5 and later, palettes can be run from the ESTK from the first
      run. These limitations are Windows only (I think).
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      The <span style="color: #007e2f">#targetengine </span>directive is not
      needed in Illustrator and AfterEffects.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      Palettes cannet be used in Photoshop.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The window displayed by this script looks exactly the same as the
      dialog-type window. When you try both scripts, you’ll see that while the
      palette is displayed you can work in InDesign; but with the dialog
      displayed you can’t do anything until you dismiss it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There is a small cosmetic difference between dialogs and palettes (in
      Windows, anyway): dialogs have round corners and a larger close button,
      palettes
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      have straight corners and a smaller close button. This reflects the
      distinction in InDesign’s own windows: InDesign’s dialog-type windows have
      rounded
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      corners but have no close button (Textframe Options, Paragraph Style
      Options, etc.), while its palette-style windows have straight corners and
      do have a close button (Find/Change, Convert URLs to Hyperlinks, etc.).
      Windows 10 makes
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: justify;
      "
    >
      a similar difference though the close buttons look a bit different.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: justify"
    >
      <a name="a11">Palettes inside functions</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Palettes cannot be defined in a function. For example, the following code
      does nothing:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="padding-left: 30pt; text-indent: 0pt; text-align: left">
      <span
        ><img width="190" height="48" alt="image" src="Image_003.jpg"
      /></span>
    </p>
    <p
      class="s10"
      style="
        padding-top: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Dialog Palette
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <div
      class="code"
      style="
      background-color:#92c4df;
      padding-left: 0px;
      "
      >><p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      main<b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">main </span><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        style="color: #cd1719"
        >&#39;</span
      ><span class="s9">palette</span
      ><span style="color: #cd1719">&#39;</span>); <span class="s6">var </span
      ><span class="s7">m </span>= <span class="s7">w.add </span>(<span
        style="color: #cd1719"
        >&#39;</span
      ><span class="s9">statictext</span
      ><span style="color: #cd1719">&#39;</span>);
      <span class="s7">m.text </span>= <span style="color: #cd1719">&#39;</span
      ><span class="s9">Hello, world!</span
      ><span style="color: #cd1719">&#39;</span>;
      <span class="s7">w.show</span>();
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Instead, the window variable must be set at the script’s top level. The
      rest of the window can be defined inside a function:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>win <b>= </b>createWindow<b>(); </b>win.show<b
        >();</b
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">createWindow </span><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        style="color: #cd1719"
        >&#39;</span
      ><span class="s9">palette</span
      ><span style="color: #cd1719">&#39;</span>); <span class="s6">var </span
      ><span class="s7">m </span>= <span class="s7">w.add </span>(<span
        style="color: #cd1719"
        >&#39;</span
      ><span class="s9">statictext</span
      ><span style="color: #cd1719">&#39;</span>);
      <span class="s7">m.text </span>= <span style="color: #cd1719">&#39;</span
      ><span class="s9">Hello, world!</span
      ><span style="color: #cd1719">&#39;</span>;
    </p>
    <p
      class="s6"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      return <span class="s7">w</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      It is possible to define a palette inside an anonymous function:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      (<span class="s6">function </span>() {
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">createWindow </span><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;palette&#39;</span
      >); <span class="s6">var </span><span class="s7">m </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;statictext&#39;</span
      >); <span class="s7">m.text </span>=
      <span class="s9">&#39;Hello, world!&#39;</span>;
    </p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      return <span class="s7">w</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>win <b>= </b>createWindow<b>(); </b>win.show<b
        >();</b
      >
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }());
    </p> </div>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a12">Differences across applications</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are some differences in the behaviour and appearance of ScriptUI
      windows in the different CS/CC applications. A substantial difference is
      that palettes can’t be used in Photoshop (but see Davide Barranca’s blog
      for
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a workaround; for links, see the resources on p. 112). There are
      considerable cosmetic differences between the appearance of Photoshop CS6
      dialogs and ScriptUI dialogs when run in Photoshop CS6. In earlier
      versions, ScriptUI dialogs were much closer to Photoshop’s native dialogs.
      In contrast, ScriptUI dialogs in InDesign are look much the same as
      InDesign’s native dialogs.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are also considerable differences in appearance in applications of
      the same CS/CC version, but they are just cosmetic differences: the
      scripts behave the same in every respect.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a13">Differences accross operating systems</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are some differences in behaviour and appearance between ScriptUI
      windows on Macs and Windows. These differences are relatively benign and
      are
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      pointed out throughout the text. And there are differences between Windows
      7 and Windows 10 (I don’t know about Windows 8, never used it.)
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 6pt; text-indent: 0pt; text-align: left">
      <a name="a14">Adding controls</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In the Hello World example we encountered our first control:
      <span class="h4">statictext</span>. This type of control, as we saw
      earlier, just adds some text to a window. Though the two-line method we
      used there (adding the control, then use a separate line to add the text)
      is fine, it could also have been stated as follows:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>myMessage <b>= </b>myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Hello, world!&quot;</span><b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      that is, writing the text’s contents as a parameter of the
      <span class="h4">.add( ) </span>method.
      <span class="h4">undefined </span>in this line is a placeholder for a
      parameter that we won’t deal with here, namely, the size and position of
      the text within the window or other type of container (later we’ll return
      to containers within a window).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Another way of formulating this is as follows:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myMessage </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;statictext {text: &#39;Hello, world!&#39;}&quot;</span
      >);
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      using a so-called resource string (resource strings are dealt with more
      extensively in the section &quot;Resource string&quot; on page 106). In
      what follows I’ll use any of the three methods.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a15">Getting started: An example</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Before going into the details of all other controls, we’ll first construct
      a simple script to illustrate the main elements of ScriptUI’s window
      features. In discussing this simple example you also see how you often go
      about constructing
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      a window, which in effect is like constructing most things: you first add
      the basic things, then refine these to make it more manageable and to make
      it look better. We’ll create a script that asks a user for some input.
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="136" height="99" alt="image" src="Image_004.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Text entry is done using the <span class="h4">edittext </span>control. To
      make sense of an edit field, you need to add a prompt separately using a
      <span class="h4">statictext </span>control. Here’s the first attempt:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;statictext&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Name:&quot;</span>); <span class="s6">var </span
      ><span class="s7">myText </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;edittext&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      myWindow.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 5pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      For control titles, see also p. 71
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Note first that we added a title to the window (&#39;Form&#39;). (Titles
      are centred on the Mac.) Also note that the edit field appears below its
      title Name, which is not
    </p>
    <p
      style="
        padding-top: 4pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      what we want. A window’s default orientation is
      <span class="h4">column</span>. To change that to
      <span class="h4">row</span>, we need to include a statement to that
      effect:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">myWindow.</span><span class="s12">orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myText </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;edittext&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myWindow.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="76" alt="image" src="Image_005.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The second line in the script sets the window’s orientation. This looks a
      bit better, but the edit field is too small. In addition, we would like to
      add some default text:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">myWindow.orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span><b>); </b>myText.<span
        style="color: #007e2f"
        >characters </span
      ><b>= </b>30<b>;</b>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      myWindow.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="200" height="76" alt="image" src="Image_006.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You can set the width of an edittext control using its
      <span class="h4">characters </span>property. Later we’ll see other ways to
      size controls.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The dialog looks better now, but it would be useful if the edit field were
      activated when the window is displayed so that the user needn’t place the
      cursor there. This is done by including a line
      <span class="h4">myText.active = true;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">myWindow.orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>myText.characters <b>= </b>30<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">myText.</span><span class="s12">active </span>=
      <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myWindow.show <b>();</b>
    </p>
    <p class="s7" style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <span
        ><img width="200" height="76" alt="image" src="Image_007.jpg"
      /></span>
    </p>
    <h4
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p">: If </span>active
      <span class="p"
        >appears not to work as expected, you try setting it in a so-called
        callback:</span
      >
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">myWindow.orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>myText.characters <b>= </b>30<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">myWindow.onShow </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">myText.active </span>= <span class="s6">true</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myWindow.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Now we want to add some buttons, in this case the usual OK and Cancel
      buttons. We do this using the <span class="h4">button </span>control:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myWindow </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">myWindow.orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>myText.characters <b>= </b>20<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">myText.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      myWindow.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;OK&quot;</span><b>); </b>myWindow.add
      <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Cancel&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      myWindow.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="352" height="78" alt="image" src="Image_008.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      But this doesn’t look right, we want the buttons laid out in a different
      way. We do this by grouping controls in groups and panels, to which we now
      turn.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a16">Groups and panels</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Because we set the window’s orientation to row, all items we add are
      placed on the same row, but that’s not what we want. To change this, we
      can <span class="h4">group </span>items together using the ScriptUI items
      <span class="h4">group </span>and <span class="h4">panel</span>. These two
      function the same in that they group items together, but differ in two
      ways: panels have a border, groups don’t; and the default orientation of a
      group is row, that of
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a panel, column (panel borders can be changed in some applications; see
      &quot;Panel border styles&quot; on page 9).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      So what we want to do now is to create two groups: one with the statictext
      and the edittext controls, the other with the two buttons. This can be
      done as follows:
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>myWindow <b>= </b
      ><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Form&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s12">myInputGroup </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myInputGroup.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myInputGroup.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>myText.characters <b>= </b>20<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">myText.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s12">myButtonGroup </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >); <span class="s7">myButtonGroup.</span
      ><span class="s12">alignment </span>=
      <span class="s9">&quot;right&quot;</span>;
      <span class="s7">myButtonGroup.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;OK&quot;</span>);
      <span class="s7">myButtonGroup.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Cancel&quot;</span>);
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      myWindow.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="196" height="106" alt="image" src="Image_009.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      We defined two groups, <span class="h4">myInputGroup </span>and
      <span class="h4">myButtonGroup</span>. Note that we deleted the line that
      sets the window’s orientation because it’s not needed anymore: the window
      has just two items (the two groups), and since the Window’s default
      orientation is column, there’s no need to state it. Similarly, since the
      default orientation of groups is row, there’s no need to set the
      orientation in the groups. Note that we aligned the button group to the
      right of the window using <span class="h4">alignment </span>– a small
      detail but I need it later on.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Groups (and panels) are good layout tools when you script windows. If used
      well, your windows are easily adaptable. For instance, if you want the
      buttons vertically aligned and to the right of the input group, all you
      need to do is add two orientation statements – these are marked green in
      the following example:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myWindow <b>= </b
      ><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Form&quot;</span><b>); </b
      ><span style="color: #007e2f">myWindow.orientation </span
      ><span class="s16">= </span
      ><span style="color: #007e2f">&quot;row&quot;</span
      ><span class="s16">;</span>
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">myInputGroup </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myInputGroup.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myInputGroup.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>myText.characters <b>= </b>20<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">myText.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myButtonGroup </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >); <span class="s12">myButtonGroup.orientation </span
      ><span style="color: #007e2f">= </span
      ><span class="s12">&quot;column&quot;</span
      ><span style="color: #007e2f">; </span
      ><span class="s7">myButtonGroup.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;OK&quot;</span>);
      <span class="s7">myButtonGroup.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Cancel&quot;</span>);
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      myWindow.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="272" height="103" alt="image" src="Image_010.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="272" height="103" alt="image" src="Image_011.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A final tweak might be to align the two groups vertically. To do this, add
      this line to the script; just before or after the second line makes sense:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">myWindow.alignChildren </span>=
      <span class="s9">&quot;top&quot;</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The script’s window is now displayed as shown on the right.
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      We’ll decide that the window is good enough for our purposes, and now we
      turn to the question of how to deal with the user’s input and how to use
      that input in the rest of the script. In this example, two things can
      happen: the user clicks OK (which in this script corresponds to pressing
      Enter) or they can click Cancel (the equivalent of pressing Escape). The
      window’s behaviour is this: if the user presses OK, the line
      <span class="h4">myWindow.show( ) </span>returns 1, if they press Esc,
      that line returns 2. We capture this as follows:
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">if </span>(<span class="s7">myWindow.show </span>() ==
      <span class="s7">1</span>) {
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>myName <b>= </b>myText.text<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      exit <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In this case we needn’t check for Escape because there are just two
      options, namely, OK and Cancel. So if the user didn’t press OK they must
      have pressed Cancel. Anyway, if OK was pressed we want to return to the
      script the contents of the edittext control, which is
      <span class="h4">myText.text</span>. In conclusion, here is the whole
      script, packed in a function as you would probably do:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>myName <b>= </b>myInput <b>();</b>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 23pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // rest of the script
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">myInput </span><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>myWindow <b>= </b
      ><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Form&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">myInputGroup </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myInputGroup.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myText <b>= </b>myInputGroup.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>myText.characters <b>= </b>20<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 56pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">myText.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myButtonGroup </span>=
      <span class="s7">myWindow.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >); <span class="s7">myButtonGroup.alignment </span>=
      <span class="s9">&quot;right&quot;</span>;
      <span class="s7">myButtonGroup.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;OK&quot;</span>);
      <span class="s7">myButtonGroup.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Cancel&quot;</span>);
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">if </span>(<span class="s7">myWindow.show </span>() ==
      <span class="s7">1</span>) {
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">myText.text</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      exit <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a17">Formatting the window frame</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are some properties that determine the look of palettes and dialogs.
      You can opt to suppress the close button on the frame (from now on I’ll
      use <span class="s17">w </span>for the Window variable instead of
      myWindow):
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w <b>= </b><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Example&quot;</span>, undefined,
      <b>{</b>closeButton<b>: </b><span class="s6">false</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;statictext&quot;</span>,
      undefined,
      <span style="color: #cd1719">&quot;closebutton: false&quot;</span
      ><b>); </b>w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="70" alt="image" src="Image_012.gif"
      /></span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      You can do borderless frames, too:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w </span>= <span class="s6">new </span
      ><span class="s7">Window </span>(<span class="s9">&quot;dialog&quot;</span
      ><span class="s7">, undefined, undefined, </span>{<span class="s7"
        >borderless</span
      >: <span class="s6">true</span>});
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;statictext&quot;</span>,
      undefined, <span style="color: #cd1719">&quot;borderless: true&quot;</span
      ><b>); </b>w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="93" height="35" alt="image" src="Image_013.gif"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      But these borderless frames are pretty minimalistic in that they are in
      fact just grey panels. You can make them look better by adding a thin
      frame to them, as follows:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w </span>= <span class="s6">new </span
      ><span class="s7">Window </span>(<span class="s9">&quot;dialog&quot;</span
      ><span class="s7">, undefined, undefined, </span>{<span class="s7"
        >borderless</span
      >: <span class="s6">true</span>});
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.margins <b>= [</b>0,0,0,0<b>];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">myPanel </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;panel&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      myPanel.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;borderless: not quite true&quot;</span
      ><b>); </b>w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="140" height="30" alt="image" src="Image_014.gif"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You’ll notice, naturally, that the frame is not a border on the window but
      of the panel.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a18">Panel border styles</a>
    </h3>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="386" height="234" alt="image" src="Image_015.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Panels are drawn with a black frame rule by default. In Photoshop and
      After Effects (not in InDesign and Illustrator) the appearance of the
      frame rule can be changed using the creation property
      <span class="h4">borderStyle</span>:
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w </span>= <span class="s6">new </span
      ><span class="s7">Window </span>(<span class="s9">&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.grp1 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp1.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;None&#39;</span>, <b>{</b>borderStyle<b
        >:</b
      ><span style="color: #cd1719">&#39;none&#39;</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp1.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;Gray&#39;</span>, <b>{</b>borderStyle<b
        >:</b
      ><span style="color: #cd1719">&#39;gray&#39;</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp1.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;Black&#39;</span>, <b>{</b>borderStyle<b
        >:</b
      ><span style="color: #cd1719">&#39;black&#39;</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp1.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;White&#39;</span>, <b>{</b>borderStyle<b
        >:</b
      ><span style="color: #cd1719">&#39;white&#39;</span><b>});</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.grp2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp2.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;Etched&#39;</span>,
      <b>{</b>borderStyle<b>:</b
      ><span style="color: #cd1719">&#39;etched&#39;</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp2.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;Sunken&#39;</span>,
      <b>{</b>borderStyle<b>:</b><span style="color: #cd1719">’sunken&#39;</span
      ><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.grp2.add<b>(</b><span style="color: #cd1719">&#39;panel&#39;</span>,
      <b>[</b>0,0,100,100<b>]</b>,
      <span style="color: #cd1719">&#39;Raised&#39;</span>,
      <b>{</b>borderStyle<b>:</b
      ><span style="color: #cd1719">&#39;raised&#39;</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Now that we’ve seen the basics of windows, panels, and groups, we’ll turn
      to the building blocks in some detail.
    </p>
    <h2
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a19">Creation properties and other properties</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Windows and their controls can be modified by two types of property:
      creation properties and normal properties. Creation properties are so
      called because they must be specified when the control is created; normal
      properties can be set after a control was created.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are numerous examples in this guide of both types. For instance, in
      the example that prints &quot;borderless: not quite true&quot;, above,
      <span class="h4">{borderless: true} </span>is
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a creation property: the window’s frame is set as borderless in the same
      line that creates the window. It’s not possible to set that property later
      on in the script.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In contrast, <span class="h4">margins </span>is not a creation property. A
      control’s margins can be set at any time. In the script,
      <span class="h4">w.margins = [0,0,0,0] </span>immediately follows the line
      at which the window is created, but that’s not necessary: the margins can
      be set anywhere in the script after the line that creates the control.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Creation properties are listed separately in the Tools Guide, but can be
      found in the object-model viewer as well. A control’s creation properties
      are shown if you click its properties property. The screenshot shows the
      creation properties of the edittext control.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a20">Controls</a>
    </h2>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a21">statictext</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      We’ve already seen several examples of statictext and there will be many
      more because this control is used a lot in ScriptUI windows.
      <span class="h4">statictext </span>controls are
    </p>
    <ol id="l1">
      <li data-list-text="1-">
        <p
          style="
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          line controls by default, but multi-line texts are possible when the
          control is created using the
          <span class="h4">multiline </span>creation property:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window</span>(<span
            class="s9"
            >&#39;dialog&#39;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.add <b>(</b
          ><span style="color: #cd1719">&#39;statictext&#39;</span>,
          <b>[</b>0,0,200,50<b>]</b>,
          <span style="color: #cd1719">&#39;One\rTwo&#39;</span>,
          <b>{</b>multiline<b>: </b><span class="s6">true</span><b>});</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show<b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="200" height="123" alt="image" src="Image_016.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Static text can be aligned left, right, or centre. This too must be
          set as a creation property, but there has always been something wrong
          with that. The only way you can get that to work (on Windows, anyway)
          is to use a so-called resource string for the control:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left">
          <span
            ><img width="459" height="394" alt="image" src="Image_017.jpg"
          /></span>
        </p>
        <p
          class="s10"
          style="
            padding-top: 5pt;
            padding-left: 7pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          Displaying creation properties
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p style="padding-left: 9pt; text-indent: 0pt; text-align: left">
          <span
            ><img width="200" height="85" alt="image" src="Image_018.jpg"
          /></span>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window</span>(<span
            class="s9"
            >&#39;dialog&#39;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 3pt;
            line-height: 122%;
            text-align: left;
          "
        >
          <span class="s7">w.add </span>(<span class="s9"
            >&#39;statictext {text: &quot;Left&quot;, characters: 20, justify:
            &quot;left&quot;}&#39;</span
          >); <span class="s7">w.add </span>(<span class="s9"
            >&#39;statictext {text: &quot;Centre&quot;, characters: 20, justify:
            &quot;center&quot;}&#39;</span
          >); <span class="s7">w.add </span>(<span class="s9"
            >&#39;statictext {text: &quot;Right&quot;, characters: 20, justify:
            &quot;right&quot;}&#39;</span
          >); <span class="s7">w.show</span>();
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The <span class="h4">characters </span>property is used to set the
          control’s width, and <span class="h4">justify </span>to set its
          alignment.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The contents of statictext controls can be changed dynamically; see
          pp. 15 and 15 for an example.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
          <a name="a22">edittext</a>
        </h3>
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="158" height="116" alt="image" src="Image_019.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 9pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          This control, too, we’ve seen in the example given above. It is used
          to get input from the user. By default, the control is just one line
          high and you can enter just one line of text. A useful creation
          property is <span class="h4">multiline</span>, which allows you to add
          more than one line:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>w <b>= </b
          ><span class="s6">new </span>Window <b>(</b
          ><span style="color: #cd1719">&quot;dialog&quot;</span>,
          <span style="color: #cd1719">&quot;Multiline&quot;</span><b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 119%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">myText </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;edittext&quot;</span
          ><span class="s7">, </span>[<span class="s7">0, 0, 150, 70</span
          >]<span class="s7">, </span><span class="s9">&quot;&quot;</span
          ><span class="s7">, </span>{<span class="s7">multiline</span>:
          <span class="s6">true</span>}); <span class="s7">myText.text </span>=
          <span class="s9"
            >&quot;Line 1\rLine 2\rLine 3\rLine 4\rLine 5\rLine 6\r&quot;</span
          >; <span class="s7">myText.active </span>=
          <span class="s6">true</span>;
        </p>
        <p
          class="s7"
          style="
            padding-left: 24pt;
            text-indent: 0pt;
            line-height: 11pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="158" height="116" alt="image" src="Image_020.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 30pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          In the screenshot we’ve added a few lines. As you can see, we
          specified the size of the control in the second argument position ([0,
          0, 150, 70]) – these dimensions are left, top, width, and height.
          (Note that these coordinates differ from those of InDesign’s
          geometricBounds, which are top, left, bottom, right.) When more text
          is entered than fits the control, a scrollbar is added by default. To
          disable the scrollbar, use the creation property
          <span class="h4">scrolling</span>:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myText <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;edittext&quot;</span>, <b>[</b>0,
          0, 150, 70<b>]</b>, <span style="color: #cd1719">&quot;&quot;</span>,
          <b>{</b>multiline<b>: </b><span class="s6">true</span>,
          <span style="color: #007e2f">scrolling</span><b>: </b
          ><span class="s6">false</span><b>});</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Although the control is called <span class="h4">edittext</span>, its
          edit possibilities are limited when you target InDesign (Photoshop and
          the ESTK itself don’t have this problem). You can’t cut and paste
          using keyboard shortcuts (Ctrl+C and Ctrl+V on Windows) though you can
          right-click in the edit window and use Copy and Paste from the context
          menu.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The Enter/Return key works as expected only in CS6 and later but you
          have to enable it using the creation property
          <span class="h4">wantReturn</span>, as in the following example:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myText <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;edittext&quot;</span>, <b>[</b>0,
          0, 150, 70<b>]</b>, <span style="color: #cd1719">&quot;&quot;</span>,
          <b>{</b>multiline<b>: </b><span class="s6">true</span>, wantReturn<b
            >: </b
          ><span class="s6">true</span><b>})</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          A <span class="h4">problem in Windows </span>is that if the script
          preselects some text, sometimes that text is not displayed correctly.
          Take this script:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">e </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;edittext&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>);
          <span class="s7">e.active </span>= <span class="s6">true</span>;
        </p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show<b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="173" height="76" alt="image" src="Image_021.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          As you can see, the text field is sized correctly but the text is not
          fitted to the box. To remedy this, add the line highlighted in green:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w </span>= <span class="s6">new </span
          ><span class="s7">Window </span>(<span class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          e <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
          <span style="color: #cd1719"
            >&quot;abcdefghijklmnopqrstuvwxyz&quot;</span
          ><b>); </b><span style="color: #007e2f">w.layout.layout</span
          ><span class="s16">();</span>
        </p>
        <p
          class="s8"
          style="
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s7">e.active </span>= <span class="s6">true</span>;
          <span class="s12">// this line must follow w.layout.layout() </span
          ><span class="s7">w.show</span>();
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="173" height="76" alt="image" src="Image_022.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          We’ll not go into the details of
          <span class="h4">layout() </span>here, but will return to it later.
          Another way to get the text to display correctly is to use an onShow
          call-back:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span>e <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
          <span style="color: #cd1719"
            >&quot;abcdefghijklmnopqrstuvwxyz&quot;</span
          ><b>); </b><span style="color: #007e2f">w.onShow </span
          ><span class="s16">= </span><span class="s18">function </span
          ><span class="s16">() {</span>
        </p>
        <p
          class="s16"
          style="
            padding-left: 39pt;
            text-indent: 0pt;
            line-height: 12pt;
            text-align: left;
          "
        >
          <span class="s12">e.active </span>= <span class="s18">true</span>;
        </p>
        <p
          class="s16"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show<b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The alignment/justification of edittext controls can be set in the
          same way (and with the same quirks) as that of statictext controls.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a23">Read-only</a>
        </p>
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="127" height="143" alt="image" src="Image_023.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          An edittext’s <span class="h4">readonly </span>property can be set so
          that you can’t enter text in it. You can however copy the text and the
          control’s content is accessible to the rest of the script. This is a
          creation property and must applied as shown in the script below.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a24">No-echo</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Setting an edittext’s noecho property makes the text unreadable by
          replacing it with dots. This type of field is often used to mask what
          a user enters, for example, when asking for a password. Though you
          can’t read the text, it is accessible to the script via the control’s
          <span class="h4">text </span>property.
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: -7pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&#39;dialog {alignChildren: &quot;fill&quot;}&#39;</span
          >); <span class="s7">w.add </span>(<span class="s9"
            >&#39;edittext&#39;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&#39;Normal&#39;</span>);
        </p>
        <p
          class="s8"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">w.add </span>(<span class="s9"
            >&#39;edittext&#39;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&#39;Read only&#39;</span
          ><span class="s7">, </span>{<span class="s12">readonly</span>:
          <span class="s6">true</span>});
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.add </span>(<span class="s9"
            >&#39;edittext&#39;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&#39;No echo&#39;</span
          ><span class="s7">, </span>{<span class="s12">noecho</span>:
          <span class="s6">true</span>});
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show<b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a25">Example: scrollable alert</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          You can have a script display text, but InDesign’s native
          <span class="h4">alert() </span>is limited in that it’s not good at
          handling large amounts of text. It’s not so difficult, however,
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          to write your own display method so that you get a scrollable window.
          An additional advantage is that you can copy text out of that window.
          Here is the script, which I use a lot myself.
        </p>
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="526" height="344" alt="image" src="Image_024.png"
          /></span>
        </p>
        <p
          class="s12"
          style="text-indent: 0pt; line-height: 122%; text-align: left"
        >
          // create an example array <span style="color: #000">lines </span
          ><span class="s8">= [];</span>
        </p>
        <p
          class="s8"
          style="
            padding-left: 8pt;
            text-indent: -7pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s7">i </span>=
          <span class="s7">0</span>; <span class="s7">i </span>&lt;
          <span class="s7">150</span>; <span class="s7">i</span>++)
          <span class="s7">lines.push </span>(<span class="s9"
            >&quot;Line &quot; </span
          >+ <span class="s9">String </span>(<span class="s7">i</span>));
        </p>
        <p class="s7" style="text-indent: 0pt; text-align: left">
          alert_scroll <b>(</b
          ><span style="color: #cd1719">&quot;Example&quot;</span>, lines<b
            >);</b
          >
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p class="s7" style="text-indent: 0pt; text-align: left">
          <span class="s6">function </span>alert_scroll <b>(</b>title, input<b
            >) {</b
          >
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p class="s12" style="text-indent: 0pt; text-align: left">
          // string, string/list
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p class="s12" style="text-indent: 0pt; text-align: left">
          // if input is an array, convert it to a string
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 8pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">input </span
          ><span class="s6">instanceof </span><span class="s7">Array</span>)
          <span class="s7">input </span>=
          <span class="s7">input.join </span>(<span class="s9"
            >&quot;\r&quot;</span
          >);
        </p>
        <p class="s7" style="text-indent: 0pt; text-align: left">
          <span class="s6">var </span>w <b>= </b
          ><span class="s6">new </span>Window <b>(</b
          ><span style="color: #cd1719">&quot;dialog&quot;</span>, title<b
            >);</b
          >
        </p>
        <p
          class="s8"
          style="padding-top: 2pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">var </span><span class="s7">list </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;edittext&quot;</span
          ><span class="s7">, undefined, input, </span>{<span class="s7"
            >multiline</span
          >: <span class="s6">true</span><span class="s7">, scrolling</span>:
          <span class="s6">true</span>});
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          <span style="color: #007e2f"
            >// the list should not be taller than the maximum possible height
            of the window </span
          >list.maximumSize.height <b>= </b>w.maximumSize.height <b>- </b>100<b
            >; </b
          >list.minimumSize.width <b>= </b>150<b>;</b>
        </p>
        <p
          class="s7"
          style="text-indent: 0pt; line-height: 11pt; text-align: left"
        >
          w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Close&quot;</span>,
          <b>{</b>name<b>: </b><span style="color: #cd1719">&quot;ok&quot;</span
          ><b>});</b>
        </p>
        <p
          class="s7"
          style="padding-top: 2pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p class="s8" style="text-indent: 0pt; text-align: left">}</p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          This function has one drawback: when you input large amounts of text
          or a big
          <span
            ><img
              width="158"
              height="364"
              alt="image"
              src="Image_025.png" /></span
          ><span class="s19"> </span>array, it takes a while to display it.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a26">Controlling edit fields</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Controls of type edittext are the only type of input in ScriptUI.
          There are no special controls for numbers, measurement units, etc. If
          you want input controls for numbers and measurements, you’ll have to
          write them yourself (see p. 67 for an example of a script for a
          measurement control). But though the edit field is text only, ScriptUI
          provides several tools to make the edittext control more flexible so
          that you can create your own numerical and measurement controls.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          <a
            href="http://www.creativescripting.net/freeStuff/ScriptUI_Validation.zip)"
            class="a"
            target="_blank"
            >The section on event listeners gives an example of how to increment
            and decrement numerical values using the up and down arrow keys. Bob
            Stucky’s scripts (see </a
          ><a
            href="http://www.creativescripting.net/freeStuff/ScriptUI_Validation.zip)"
            class="s20"
            target="_blank"
            >http://www.creativescripting.net/freeStuff/ScriptUI_Validation.zip</a
          >) provide more examples of measurement input and field validation.
          See also the section on validation (p. 92), which borrows from those
          scripts.
        </p>
        <h3
          style="
            padding-top: 4pt;
            padding-left: 19pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a27">button</a>
        </h3>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a28">Push buttons</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          There are various types of button. Earlier we saw the standard push
          buttons OK and Cancel, which are often used in windows:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;OK&quot;</span
          ><b>); </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Cancel&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-left: 24pt;
            text-indent: 0pt;
            line-height: 11pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          By default, an OK button responds to pressing the Enter key, a Cancel
          button to
          <span
            ><img
              width="136"
              height="107"
              alt="image"
              src="Image_026.jpg" /></span
          ><span class="s21"> </span>the Escape key. But these buttons show this
          behaviour only when the button’s
        </p>
        <p
          style="
            padding-top: 1pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          text is OK or Cancel. The Tools Guide therefore recommends to include
          the creation property <span class="h4">name: &quot;ok&quot; </span>to
          ensure that OK buttons behave appropriately in localised versions of
          InDesign or when you want to use some text for a button other than OK:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Yes&quot;</span>,
          <b>{</b>name<b>: </b><span style="color: #cd1719">&quot;ok&quot;</span
          ><b>});</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 122%;
            text-align: left;
          "
        >
          w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;No&quot;</span>,
          <b>{</b>name<b>: </b
          ><span style="color: #cd1719">&quot;cancel&quot;</span
          ><b>}); </b>w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          In this example, the Yes button behaves like an OK button and the No
          button like a Cancel button. (The
          <span class="h4">name </span>property can also be used for finding
          buttons and other controls in windows; see &quot;Finding
          controls&quot; on page 76 for examples.)
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To create more than one line of text in a button, use \n as a
          separator (\r doesn’t work here on Windows):
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
          undefined,
          <span style="color: #cd1719">&quot;Line 1\nLine 2&quot;</span
          ><b>);</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a29">Responding to button presses</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 30pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The behaviour of buttons other than OK and Cancel must be coded
          explicitely. You do this with a so-called
          <span class="h4">callback</span>, in this case
          <span class="h4">onClick</span>. Here is an example:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>e <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Abcdefg&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">var </span>convert_button <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Convert to upper case&quot;</span
          ><b>); </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;OK&quot;</span><b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-left: 24pt;
            text-indent: 15pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s7">convert_button.</span
          ><span class="s12">onClick </span>=
          <span class="s6">function </span>() {<span class="s7">e.text </span>=
          <span class="s7">e.text.toUpperCase</span>();}
          <span class="s7">w.show </span>();
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left">
          <span
            style="
              color: black;
              font-family: 'Myriad Pro', serif;
              font-style: normal;
              font-weight: normal;
              text-decoration: none;
              font-size: 10pt;
              vertical-align: 12pt;
            "
          >
          </span
          ><span
            ><img width="159" height="135" alt="image" src="Image_027.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Clicking <span class="h4">Convert to upper case </span>converts the
          text in the edit field to upper case. This is a simple example, but
          the functions called by onClick can be of any complexity. (There are
          several other types of callback, which we will deal with later.)
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Callbacks such as onClick can be combined with other callbacks in one
          statement. The following script displays a small panel that we can use
          to check the status of the state of the No break attribute.
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          #targetengine miscellaneous;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&#39;palette&#39;</span
          >)
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          <span class="s7">w.nobreak </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&#39;statictext {text: &quot;No break: &quot;, characters: 10,
            justify: &quot;center&quot;}&#39;</span
          >); <span class="s7">w.button </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&#39;button {text: &quot;Update&quot;}&#39;</span
          >);
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s6"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          function <span class="s7">updateStatus</span
          ><span class="s8">() {</span>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">state </span>=
          <span class="s9">&#39;&#39;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7"
            >app.selection.length </span
          >&gt; <span class="s7">0</span>) {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>str
          <b>= </b
          >app.selection<b>[</b>0<b>]</b>.insertionPoints.everyItem<b>()</b>.noBreak.join<b
            >();</b
          >
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">str.indexOf </span>(<span
            class="s9"
            >&#39;false&#39;</span
          >) &gt; -<span class="s7">1 </span>&amp;&amp;
          <span class="s7">str.indexOf </span>(<span class="s9"
            >&#39;true&#39;</span
          >) &gt; -<span class="s7">1</span>) {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">state </span>= <span class="s9">&#39;0/1&#39;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          } <span class="s6">else if </span>(<span class="s7">str.indexOf </span
          >(<span class="s9">&#39;false&#39;</span>) &gt; -<span class="s7"
            >1</span
          >) {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">state </span>= <span class="s9">&#39;0&#39;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          } <span class="s6">else </span>{
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">state </span>= <span class="s9">&#39;1&#39;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.nobreak.text </span>=
          <span class="s9">&#39;No break: &#39; </span>+
          <span class="s7">state</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s7"
          style="
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 28pt;
            text-align: left;
          "
        >
          w.onShow <b>= </b>w.button.onClick <b>= </b>updateStatus<b>; </b
          >w.show<b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img
              width="119"
              height="104"
              alt="image"
              src="Image_028.jpg" /></span
          ><span
            style="
              color: black;
              font-family: 'Myriad Pro', serif;
              font-style: normal;
              font-weight: normal;
              text-decoration: none;
              font-size: 10pt;
              vertical-align: 249pt;
            "
          >
          </span
          ><span
            ><img
              width="119"
              height="104"
              alt="image"
              src="Image_029.jpg" /></span
          ><span
            style="
              color: black;
              font-family: 'Myriad Pro', serif;
              font-style: normal;
              font-weight: normal;
              text-decoration: none;
              font-size: 10pt;
              vertical-align: 249pt;
            "
          >
          </span
          ><span
            ><img width="119" height="104" alt="image" src="Image_030.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The state of <span class="h4">No break </span>is checked by the
          function updateStatus(), which is invoked when the window is first
          drawn (w.onShow) and when the Update button is pressed
          (w.button.onClick). Note how the onShow and onClick callbacks are
          stacked.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The script uses just one statictext control which is updated every
          time the Update button is clicked. (Later, in the section on finding
          windows, we’ll redo this script as a version that updates
          automatically; see pp. 75 and 93.)
        </p>
        <p
          class="s14"
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a30">Icon buttons</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Apart from these standard push buttons you can use icon buttons. These
          display not text such as OK but an image. The image should be in PNG,
          IDRC, or JPEG format. The following format is used:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, <span class="s6">File </span><b>(</b>myFile<b>));</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="526" height="176" alt="image" src="Image_031.png"
          /></span>
        </p>
        <p class="s8" style="text-indent: 0pt; text-align: left">
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 8pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.orientation </span>=
          <span class="s9">&quot;row&quot;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 8pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">f </span>=
          <span class="s6">File </span>(<span class="s9"
            >&quot;/d/test/icon.png&quot;</span
          >)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 8pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, f <b>); </b><span style="color: #007e2f">// a</span>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 8pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, f, </span>{<span class="s7">style</span
          >: <span class="s9">&quot;toolbutton&quot;</span>});
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p class="s12" style="text-indent: 0pt; text-align: left">// b</p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          class="s8"
          style="
            padding-left: 7pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: justify;
          "
        >
          <span class="s6">var </span><span class="s7">t1 </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, f, </span>{<span class="s7">style</span
          >: <span class="s9">&quot;toolbutton&quot;</span
          ><span class="s7">, toggle</span>: <span class="s6">true</span>});
          <span class="s12">// c </span><span class="s6">var </span
          ><span class="s7">t2 </span>= <span class="s7">w.add </span>(<span
            class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, f, </span>{<span class="s7">style</span
          >: <span class="s9">&quot;toolbutton&quot;</span
          ><span class="s7">, toggle</span>: <span class="s6">true</span>});
          <span class="s12">// d </span><span class="s7">t2.value </span>=
          <span class="s6">true</span>;
        </p>
        <p class="s7" style="text-indent: 0pt; text-align: justify">
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 30pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          This adds a button which is like a pushbutton with an image instead of
          text (button <span class="h4">a </span>in the screenshot). Buttons can
          be added as toolbuttons too, so that only the image is shown, not the
          button itself (button <span class="h4">b</span>). Finally, buttons can
          be made to toggle; buttons <span class="h4">c </span>and
          <span class="h4">d </span>in the screenshot are toggling toolbuttons:
          <span class="h4">c </span>is not pressed,
          <span class="h4">d </span>is. Here is the code:
        </p>
        <p style="padding-left: 427pt; text-indent: 0pt; text-align: left">
          <span
            ><img width="202" height="91" alt="image" src="Image_032.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 4pt;
            padding-left: 365pt;
            text-indent: 0pt;
            text-align: center;
          "
        >
          a b c d
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          style="
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Examples of toggling toolbuttons in InDesign’s interface can be found
          in the Text and GREP tabs of the Find/Change dialog: the buttons to
          determine
        </p>
        <p
          style="
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          whether or not to include footnotes, master pages, etc. in the search.
          The state of a toggle button is off by default, but can be enabled by
          setting its <span class="h4">value </span>property to true, as in the
          example, above. This property is used when you test the state of a
          toggling icon button: <span class="s17">if (t1.value == true)</span>.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The creation properties <span class="h4">style </span>and
          <span class="h4">toggle </span>are meaningful only if used for icon
          buttons; they have no effect when included with normal buttons.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          It’s good practice to allow for the possibility that an icon file
          can’t be found, e.g by adding a fallback:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">f </span>=
          <span class="s6">File </span>(<span class="s9"
            >&quot;/d/test/icon.idrc&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          try <b>{</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>b <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, f <b>)</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          } <span class="s7">catch </span>(<span class="s7">_</span>) {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>b <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;@&quot;</span><b>)</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          This code tries to create an icon button using &quot;icon.idrc&quot;,
          and if the icon can’t be found, a normal button is added with the text
          @.
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The best way to deal with icons is to embed them in the script.
          Appendix 1 outlines this method.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a31">State-sensitive icon buttons</a>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">dir </span>=
          <span class="s9">&quot;/d/scriptui/fig/&quot;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 64pt;
            text-indent: -39pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">icons </span>= {<span
            class="s7"
            >a</span
          >: <span class="s6">File</span>(<span class="s7">dir</span>+<span
            class="s9"
            >&quot;icon-a.png&quot;</span
          >)<span class="s7">, b</span>: <span class="s6">File</span>(<span
            class="s7"
            >dir</span
          >+<span class="s9">&quot;icon-b.png&quot;</span>)<span class="s7"
            >, c</span
          >: <span class="s6">File</span>(<span class="s7">dir</span>+<span
            class="s9"
            >&quot;icon-c.png&quot;</span
          >)<span class="s7">, d</span>: <span class="s6">File</span>(<span
            class="s7"
            >dir</span
          >+<span class="s9">&quot;icon-d.png&quot;</span>)}
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window</span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 122%;
            text-align: left;
          "
        >
          b <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, ScriptUI.newImage <b>(</b>icons.a, icons.b, icons.c,
          icons.d<b>)); </b>w.show<b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Icon buttons can be made mouse-sensitive by defining a list of images
          rather than a single one. They must be defined as a parameter of
          ScriptUI’s image object. Here is an example:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          style="
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The first icon in the list (here, <span class="h4">icon.a</span>) is
          the default and is shown when the window is drawn. The third one, (c),
          becomes visible when you click the button; the last one, (d), is
          activated on mouse over. The second button, (b), is displayed when you
          disable it with a line such as b.enabled = false.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a32">Using application icons</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          A tantalising feature of ScriptUI is its ability to use application
          icons in its windows. I say ‘tantalising’ because this feature is
          hopelessly undocumented: just one remark in the Tools Guide, no
          further examples or overviews of the resource names. This is a shame,
          because access to system resources means that you don’t have to worry
          about the presence of icons: they must be there since the application
          is there.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          Here is an example from Photoshop:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s22"
          style="padding-left: 29pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="136" height="89" alt="image" src="Image_033.jpg"
          /></span>
          <span
            ><img width="136" height="89" alt="image" src="Image_034.jpg"
          /></span>
          <span
            ><img width="136" height="89" alt="image" src="Image_035.jpg"
          /></span>
        </p>
        <p
          class="s10"
          style="
            padding-top: 2pt;
            padding-left: 29pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          Default Click Roll over
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p style="padding-left: 29pt; text-indent: 0pt; text-align: left">
          <span
            ><img width="136" height="89" alt="image" src="Image_036.jpg"
          /></span>
        </p>
        <p
          class="s10"
          style="
            padding-top: 3pt;
            padding-left: 29pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          b.enabled = false;
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: justify;
          "
        >
          #target photoshop;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: justify;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: justify;
          "
        >
          <span class="s7">w.orientation </span>=
          <span class="s9">&quot;row&quot;</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: justify;
          "
        >
          w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Step1Icon&quot;</span
          ><b>); </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Step2Icon&quot;</span
          ><b>); </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Step3Icon&quot;</span
          ><b>); </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Step4Icon&quot;</span
          ><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: justify;
          "
        >
          w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined,
          <span style="color: #cd1719">&quot;SourceFolderIcon&quot;</span
          ><b>); </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
          undefined,
          <span style="color: #cd1719">&quot;DestinationFolderIcon&quot;</span
          ><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-left: 24pt;
            text-indent: 0pt;
            line-height: 11pt;
            text-align: left;
          "
        >
          w.show<b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="303" height="111" alt="image" src="Image_037.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          There must be many more, but thus far the names of the resource icons
          remain a well-guarded secret. More luck with the ESTK’s icons. The
          following script shows a few icons (a longer list is in the appendix):
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          #target estoolkit;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: -7pt;
            line-height: 121%;
            text-align: left;
          "
        >
          <span class="s7">w </span>= <span class="s6">new </span
          ><span class="s7">Window </span>(<span class="s9"
            >&quot;dialog&quot;</span
          >); <span class="s7">w.orientation </span>=
          <span class="s9">&quot;row&quot;</span>;
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;#Enumeration&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;#Class&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;#Method&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;#PropertyRO&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;#PropertyRW&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;SystemQueryIcon&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;SystemStopIcon&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;SystemExpand&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;SystemCollapse&quot;</span>);
          <span class="s7">w.add</span>(<span class="s9"
            >&quot;iconbutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;#FolderOpened&quot;</span>);
        </p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show<b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="388" height="95" alt="image" src="Image_038.jpg"
          /></span>
        </p>
        <p
          class="s14"
          style="
            padding-top: 10pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a33">Using InDesign’s icons</a>
        </p>
        <h4
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          <span class="p"
            >From CS5, InDesign takes a different approach in that it stores its
            icons as graphic files. They are stored in InDesign’s subfolders
            under </span
          >Adobe InDesign CS<span class="s23">n</span>/Plug-Ins
          <span class="p">(or CC, CC 2014, etc.) (PC) and </span
          >Applications/Adobe InDesign CS<span class="s23">n</span>/Adobe
          InDesign CS6.app
          <span class="p"
            >(Mac), which contains several subfolders, which in turn contain
            subfolders. The subfolders called </span
          >idrc_PNGA <span class="p">and </span>idrc_PNGR
          <span class="p"
            >contain several icons. (Thanks to Dirk Becker for pointing this
            out.) These two folders contain the same icons but their colour is a
            bit different: InDesign uses these two versions of each icon to show
            the difference when you mouse over them.</span
          >
        </h4>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The icon files have the file extension
          <span class="h4">.idrc </span>but they’re standard PNG files which
          ScriptUI has no difficulty reading (but Photoshop can’t read them).
          You could
        </p>
        <p
          style="
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          in principle write a script that uses InDesign’s icons from InDesign’s
          icon folders, but unfortunately InDesign’s folder structures on Mac
          and PC are different and it’s a bit of a hassle reliably to find the
          icons. It’s easiest and safest to find the icon, create a resource
          folder on your (or your client’s) computer, and keep
        </p>
        <p
          style="
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          the icons there; better yet, embed the icons in the scripts (see
          &quot;Appendix 1: Embedding graphic files in a script&quot;). You can
          create a catalogue of InDesign’s icons using
          <span style="color: #0080c7">this script</span>.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          But a simpler method for using InDesign’s icons is simply to make a
          screenshot of that an icon and cut it to the correct size. This is
          possible if you’re not interested in the transparency that InDesign’s
          icons offers or the different
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          colours that you can use for the different states of icons (default,
          mouse over, click). And naturally, from CC, you can set the interface
          colour of CC applications.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Finally, it may be useful to add here that a window, group, or panel
          can be populated with buttons in a loop. See &quot;Adding callbacks in
          loops&quot; on page 84 for an example.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
          <a name="a34">checkbox</a>
        </h3>
        <p
          style="
            padding-top: 9pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Here is an example of a window with some checkboxes. Optionally you
          can tick any of the boxes when the window is displayed by setting the
          their <span class="h4">value </span>property to
          <span class="h4">true</span>:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>check1 <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Prefer white&quot;</span><b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">check2 </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;checkbox&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;Prefer black and white&quot;</span>);
          <span class="s7">check1.value </span>= <span class="s6">true</span>;
        </p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="151" height="98" alt="image" src="Image_039.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Here we see another window layout default: within a container, items
          are centred horizontally. This can be changed with the
          <span class="h4">alignChildren </span>property:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.</span><span class="s12">alignChildren </span>=
          <span class="s9">&quot;left&quot;</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>check1 <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Prefer white&quot;</span><b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">check2 </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;checkbox&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;Prefer black and white&quot;</span>);
          <span class="s7">check1.value </span>= <span class="s6">true</span>;
        </p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="154" height="98" alt="image" src="Image_040.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 30pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          You check whether a checkbox was ticked by comparing its value
          property:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">check1.value </span>==
          <span class="s6">true</span>)
        </p>
        <p
          class="s6"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          return <span class="s7">whatever</span>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: justify;
          "
        >
          ScriptUI knows only two-state checkboxes. For three-state checkboxes,
          see p. 93.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
          <a name="a35">radiobutton</a>
        </h3>
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="154" height="98" alt="image" src="Image_041.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 9pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: justify;
          "
        >
          Radio buttons are like checkboxes, but whereas you can tick all
          checkboxes in a container (a window, panel, group, or tabbed panel),
          in a container with radiobuttons only one of the buttons can be
          selected. Here is an example of a window with some radio buttons.
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.alignChildren </span>=
          <span class="s9">&quot;left&quot;</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>radio1 <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;radiobutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Prefer white&quot;</span
          ><b>);</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">radio2 </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;radiobutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;Prefer black and white&quot;</span>);
          <span class="s7">radio1.value </span>= <span class="s6">true</span>;
        </p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To determine which item in a radiobutton group is selected, you have
          to check all buttons until you hit on one whose value is true. If you
          have just two buttons, as in the example, that’s easy:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">radio1.value </span>==
          <span class="s6">true</span>)
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          // radio1 selected
        </p>
        <p
          class="s6"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          else
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          // radio2 selected
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          But radio buttons will typically be grouped together in a group or a
          panel, in which case you can cycle through the panel’s children, which
          is an array:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">radio_group </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;panel&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">radio_group.alignChildren </span>=
          <span class="s9">&quot;left&quot;</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          radio_group.add <b>(</b
          ><span style="color: #cd1719">&quot;radiobutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;InDesign&quot;</span
          ><b>); </b>radio_group.add <b>(</b
          ><span style="color: #cd1719">&quot;radiobutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;PDF&quot;</span
          ><b>); </b>radio_group.add <b>(</b
          ><span style="color: #cd1719">&quot;radiobutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;IDML&quot;</span
          ><b>); </b>radio_group.add <b>(</b
          ><span style="color: #cd1719">&quot;radiobutton&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;Text&quot;</span
          ><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 11pt;
            text-align: left;
          "
        >
          w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
          undefined, <span style="color: #cd1719">&quot;OK&quot;</span><b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 121%;
            text-align: left;
          "
        >
          <span class="s12">// set dialog defaults </span
          ><span class="s7">radio_group.children</span>[<span class="s7">0</span
          >]<span class="s7">.value </span>= <span class="s6">true</span>;
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">function </span>selected_rbutton <b>(</b>rbuttons<b
            >) {</b
          >
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt;
          <span class="s7">rbuttons.children.length</span>;
          <span class="s7">i</span>++) {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">rbuttons.children</span
          >[<span class="s7">i</span>]<span class="s7">.value </span>==
          <span class="s6">true</span>) {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">return </span
          >rbuttons.children<b>[</b>i<b>]</b>.text<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">if </span>(<span class="s7">w.show </span>() ==
          <span class="s7">1</span>) {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">alert </span>(<span class="s9"
            >&quot;You picked &quot; </span
          >+ <span class="s7">selected_rbutton </span>(<span class="s7"
            >radio_group</span
          >));
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="136" height="184" alt="image" src="Image_042.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          It is wise to set a default so that the dialog always returns a valid
          choice. If you don’t, you should take precautions against the
          possibility of returning an undefined object.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The example script returns the text of the selected button, but you
          could also return the button’s index. In that case you could use that
          digit to pick an item
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          from an array. For instance, to return a file extension rather than
          the button’s text, you could replace the last four lines of the script
          with these:
        </p>
        <p
          class="s6"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          return <span class="s7">i</span><span class="s8">;</span>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">if </span>(<span class="s7">w.show </span>() ==
          <span class="s7">1</span>) {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          alert <b>(</b
          ><span style="color: #cd1719">&quot;You picked &quot; </span><b>+ [</b
          ><span style="color: #cd1719">&quot;indd&quot;</span>,
          <span style="color: #cd1719">&quot;pdf&quot;</span>,
          <span style="color: #cd1719">&quot;idml&quot;</span>,
          <span style="color: #cd1719">&quot;txt&quot;</span
          ><b>][</b>selected_rbutton <b>(</b>radio_group<b>)]);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          Now, if you select the first item, instead of returning
          <span class="h4">InDesign</span>, the script returns
        </p>
        <h4
          style="
            padding-top: 1pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a36">indd</a><span class="p">.</span>
        </h4>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The scope of a group of radiobuttons is the group or panel in which
          they&#39;re defined. That means that if you want to use more than one
          group of radio buttons, you should place them in different groups
          and/or panels.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a37">Make multiple groups act as one group</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The scope of radiobuttons is their container, usually a group or a
          panel. This means that all radiobuttons are either laid out as a
          column or as a row. To achieve a more flexible layout, you can create
          two groups, say, group A and group B, add radiobuttons to them, and
          add an event listener to each group so that if you click a button in
          A, all buttons in B are unmarked and the other way around.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The following script adds two panels to a window, and adds five radio
          buttons to each panel. The event listeners respond to mouse clicks. If
          you click something in panel1, any button in panel2 is unmarked; and
          when you click something in panel2, the marked button in panel1 is
          unmarked.
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">w.orientation </span>=
          <span class="s9">&quot;row&quot;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">panel1 </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;panel&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt; <span class="s7">5</span>;
          <span class="s7">i</span>++) {<span class="s7">panel1.add </span
          >(<span class="s9">&quot;radiobutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;Rb &quot;</span>+<span class="s7">i</span>);}
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">panel2 </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;panel&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 8pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt; <span class="s7">5</span>;
          <span class="s7">i</span>++) {<span class="s7">panel2.add </span
          >(<span class="s9">&quot;radiobutton&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;Rb &quot;</span>+<span class="s7">i</span>);}
          <span class="s7">panel1.children</span>[<span class="s7">0</span
          >]<span class="s7">.value </span>= <span class="s6">true</span>;
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          panel1.addEventListener <b>(</b
          ><span style="color: #cd1719">&quot;click&quot;</span>,
          <span class="s6">function </span><b>() {</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt;
          <span class="s7">panel2.children.length</span>;
          <span class="s7">i</span>++) {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">panel2.children</span>[<span class="s7">i</span
          >]<span class="s7">.value </span>= <span class="s6">false</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          }
        </p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          );
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img
              width="180"
              height="175"
              alt="image"
              src="Image_043.jpg" /></span
          ><span
            style="
              color: black;
              font-family: 'Myriad Pro', serif;
              font-style: normal;
              font-weight: normal;
              text-decoration: none;
              font-size: 10pt;
              vertical-align: 70pt;
            "
          >
          </span
          ><span
            ><img width="180" height="175" alt="image" src="Image_044.jpg"
          /></span>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          panel2.addEventListener <b>(</b
          ><span style="color: #cd1719">&quot;click&quot;</span>,
          <span class="s6">function </span><b>() {</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt;
          <span class="s7">panel1.children.length</span>;
          <span class="s7">i</span>++) {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">panel1.children</span>[<span class="s7">i</span
          >]<span class="s7">.value </span>= <span class="s6">false</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          }
        </p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          );
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show<b>();</b>
        </p>
        <p
          class="s10"
          style="
            padding-top: 2pt;
            padding-left: 6pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          From CC, .addEventListener() doesn’t work in AfterEffects and
          Illustrator. See
          <span style="color: #0080c7"
            >https://forums.adobe.com/ message/5449261#5449261#5449261 </span
          >and
          <span style="color: #0080c7"
            >https://forums. adobe.com/message/6173614#6173614</span
          >.
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        ></p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          You could combine the two panels in a group and define just one event
          listener for that group, but that just complicates the event listener
          and assumes some labels. We’ll give that example in the section on
          labels.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
          <a name="a38">listbox</a>
        </h3>
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="136" height="118" alt="image" src="Image_045.jpg"
          /></span>
        </p>
        <p
          class="s10"
          style="
            padding-top: 2pt;
            padding-left: 5pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          In InDesign CS6 on Windows 10 you have to place the listbox in a group
          or a panel, as follows:
        </p>
        <p
          class="s11"
          style="
            padding-top: 6pt;
            padding-left: 12pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s25">var </span><span class="s26">w </span>=
          <span class="s25">new </span><span class="s26">Window </span>(<span
            class="s27"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s11"
          style="
            padding-top: 1pt;
            padding-left: 21pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s25">var </span><span class="s26">gr </span>=
          <span class="s26">w.add </span>(<span class="s27"
            >&quot;group&quot;</span
          >);
        </p>
        <p
          class="s26"
          style="
            padding-top: 1pt;
            padding-left: 12pt;
            text-indent: 18pt;
            line-height: 112%;
            text-align: left;
          "
        >
          <span class="s25">var </span>myList <b>= </b>gr.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]); </b>w.show
          <b>();</b>
        </p>
        <p
          class="s10"
          style="
            padding-top: 4pt;
            padding-left: 5pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          Again, this is CS6 on Windows 10 only. This was noted by Werner
          Perplies on <span style="color: #0080c7">HilfDirSelbst</span>.
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 9pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: justify;
          "
        >
          A listbox adds a list to a window. The list can be created and filled
          with items when the window is created, or the items can be added
          later. To create a list when the window is created, include it as an
          array. Here is an example:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]); </b>w.show
          <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To create a list later, or to add items to an existing list, use the
          method illustrated here:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: -7pt;
            line-height: 117%;
            text-align: justify;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >); <span class="s6">var </span><span class="s7">myList </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;listbox&quot;</span
          >); <span class="s7">myList.add </span>(<span class="s9"
            >&quot;item&quot;</span
          ><span class="s7">, </span><span class="s9">&quot;one&quot;</span>);
        </p>
        <p
          class="s7"
          style="padding-left: 31pt; text-indent: 0pt; text-align: justify"
        >
          myList.add <b>(</b
          ><span style="color: #cd1719">&quot;item&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 122%;
            text-align: justify;
          "
        >
          myList.add <b>(</b
          ><span style="color: #cd1719">&quot;item&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>); </b>w.show
          <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Select an item in the list by clicking it. By default, you can select
          just one item in a listbox. To enable multiple selection, include a
          creation property:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">myList </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;listbox&quot;</span
          ><span class="s7">, undefined, </span>[<span class="s9"
            >&quot;one&quot;</span
          ><span class="s7">, </span><span class="s9">&quot;owo&quot;</span
          ><span class="s7">, </span
          ><span class="s9">&quot;three&quot;</span>]<span class="s7">, </span
          >{<span class="s12">multiselect</span>:
          <span class="s6">true</span>});
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          With multiselection enabled, you select items in the usual way:
          Ctrl/Cmd+click adds individual items to a selection; Shift+click adds
          ranges.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To let the script select an item in the list when the window is
          displayed, say, the first item, add this line:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]</b>,
          <b>{</b>multiselect<b>: </b><span class="s6">true</span><b>});</b>
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 122%;
            text-align: left;
          "
        >
          myList.selection <b>= </b>0<span class="s8">; </span
          ><span style="color: #000">w.show </span><span class="s8">();</span>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="136" height="118" alt="image" src="Image_046.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          In the screenshot you see white space after the highlight in the first
          item, and there looks to be an empty line at the foot of the the list.
          These spaces are reserved by ScriptUI for placing scrollbars if
          necessary; see the screenshots of later examples.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          In a multiselect list, to select two or more items, write the indexes
          of the items as an array:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.selection <b>= [</b>0,2<b>];</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          This selects items 0 and 2. To select a number of consecutive items
          you need to list them all:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.selection <b>= [</b>0,1,2<b>];</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          selects the first three items in myList.
        </p>
        <h4
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Note<span class="p"
            >: making selections in a list adds to any existing selection. For
            instance, these lines:</span
          >
        </h4>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.selection <b>= [</b>0,1<b>];</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.selection <b>= [</b>2<b>];</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          select three items in the list. To avoid adding to a list’s existing
          selection, start with making the selection null:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">myList.selection </span>=
          <span class="s6">null</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.selection <b>= [</b>2<b>];</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a39">Finding out which item is selected</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          In a single-select list, to determine which element was selected in a
          list, check the <span class="h4">selection </span>property of the
          list:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          mySelection <b>= </b>myList.selection<b>;</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To make visible what we do in our example script, we’ll use here
          another callback, onChange, which responds to changes to a window’s
          control. We’ll add a callback to our example script that monitors the
          listbox:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 12pt; text-indent: 0pt; text-align: center"
        >
          <span class="s7">myList.</span><span class="s12">onChange </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 9pt;
            text-indent: 0pt;
            text-align: center;
          "
        >
          $.writeln <b>(</b>myList.selection<b>);</b>
        </p>
        <p
          class="s8"
          style="padding-top: 2pt; text-indent: 0pt; text-align: center"
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Run the script, click e.g. &quot;two&quot;, and the script will print
          <span class="h4">two </span>in the console. This looks like text, but
          when you try to test this with a line such as this one:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">myList.selection </span
          >== <span class="s9">&quot;two&quot;</span>)
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          the result is <span class="h4">false</span>. The reason is that
          myList.selection is not text, but a <span class="h4">listItem</span>
        </p>
        <p
          style="
            padding-top: 1pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          object. Amend the script as follows:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span
          ><b>]); </b>myList.onChange <b>= </b><span class="s6">function </span
          ><b>() {</b>
        </p>
        <p
          class="s7"
          style="padding-left: 39pt; text-indent: 0pt; text-align: left"
        >
          $.writeln <b>(</b>myList.selection.<span style="color: #007e2f"
            >constructor.name</span
          ><b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Run the script again and click an item; the script now prints
          <span class="h4">ListItem </span>in the console. To get the contents
          of the list item, query the object’s
          <span class="h4">text </span>property:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7"
            >myList.selection.text </span
          >== <span class="s9">&quot;two&quot;</span>)
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Another useful property of list items is
          <span class="h4">index</span>, which – unsurprisingly – returns the
          item’s index within the list:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7"
            >myList.selection.index </span
          >== <span class="s7">2</span>)
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <h4
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Note<span class="p"
            >: before processing a list item, you should always check if
            anything is selected in the list:</span
          >
        </h4>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">myList.onChange </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">myList.selection </span
          >!= <span class="s6">null</span>)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 39pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          $.writeln <b>(</b>myList.selection.constructor.name<b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 30pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          This goes for the other types of list, too – dropdown and treeview,
          see below. (The example may look odd in that
          <span class="h4">onChange </span>is triggered if you make
        </p>
        <p
          style="
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          a selection in a list, but there are other situations where you access
          a list and then it’s necessary to check if any item is selected. It is
          therefore a good habit always to check the list’s selection status.)
        </p>
        <p
          class="s14"
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a40">Forcing a list selection</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Even if you select a list item when the dialog is drawn, a user can
          deselect the list. To make sure that there is always a selection in a
          list, you can monitor the list and select an item just in case the
          selection becomes null. My collegue Vlad Vladila suggested the
          following function:
        </p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">myList.onChange </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s8"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">if </span>(<span class="s7">myList.selection </span
          >=== <span class="s6">null</span>) {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 39pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.selection <b>= </b>myList.prevSel<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          } <span class="s6">else </span>{
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 39pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.prevSel <b>= </b>myList.selection.index<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a41"
            >Finding out which item is selected in multi-select lists</a
          >
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Selections in multi-select lists are a bit different in that
          they&#39;re arrays of list items. We’ll amend slightly a previous
          script:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]</b>,
          <b>{</b>multiselect<b>: </b><span class="s6">true</span><b>});</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">myList.onChange </span>=
          <span class="s6">function </span>(){
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 39pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          $.writeln <b>(</b>myList.selection.constructor.name<b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 30pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Run the script, select any two items, and the script prints
          <span class="h4">Array </span>in the console. This is the case even if
          the selection consists of one item.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a42">Processing lists</a>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>print <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Print&quot;</span><b>);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">print.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 39pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt;
          <span class="s7">myList.items.length</span>;
          <span class="s7">i</span>++)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 47pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          $.writeln <b>(</b>myList.items<b>[</b>i<b>]</b>.text<b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Lists are arrays of ListItems. They are processed a bit differently
          than standard arrays. The following script processes a list simply by
          printing the text attribute of each item:
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          As we saw earlier, in multi-select lists, selections are arrays. Lists
          themselves are arrays, so selections are sub-arrays of lists. This can
          be shown by the following script, which prints
          <span class="s1">one </span>and <span class="s1">three </span>in the
          console:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span>,
          <span style="color: #cd1719">&quot;four&quot;</span><b>]</b>,
          <b>{</b>multiselect<b>: </b><span class="s6">true</span><b>});</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>print <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Print selected items&quot;</span
          ><b>);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">print.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt;
          <span class="s7">myList.selection.length</span>;
          <span class="s7">i</span>++)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          $.writeln <b>(</b>myList.selection<b>[</b>i<b>]</b>.text<b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="147" height="161" alt="image" src="Image_047.jpg"
          /></span>
        </p>
        <p
          class="s14"
          style="
            padding-top: 10pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a43">Finding items in a list</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 30pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          To find an item in a list, use the
          <span class="h4">find </span>method:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">myItem </span>=
          <span class="s7">myList.find </span>(<span class="s9"
            >&quot;two&quot;</span
          >);
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          This returns an object of type <span class="h4">ListItem </span>if the
          item is found or <span class="h4">null </span>if the item is not in
          the list.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a44">Using find() to make selections in a list</a>
        </p>
        <h4
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          find()
          <span class="p"
            >is a useful method to select items in a list because you can simply
            look for the list items’ text:</span
          >
        </h4>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>numbers <b>= [</b
          ><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span>,
          <span style="color: #cd1719">&quot;four&quot;</span>,
          <span style="color: #cd1719">&quot;five&quot;</span><b>]</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">myList </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;listbox&quot;</span
          ><span class="s7">, undefined, numbers, </span>{<span class="s7"
            >multiselect</span
          >: <span class="s6">true</span>});
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          <span class="s7">myList.selection </span>=
          <span class="s7">myList.find</span>(<span class="s9"
            >&quot;two&quot;</span
          >); <span class="s7">myList.selection </span>=
          <span class="s7">myList.find</span>(<span class="s9"
            >&quot;four&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-left: 24pt;
            text-indent: 0pt;
            line-height: 11pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          Note that <span class="h4">find() </span>always returns just one item,
          even if there are more items with
          <span
            ><img
              width="136"
              height="144"
              alt="image"
              src="Image_048.jpg" /></span
          ><span class="s28"> </span>the same name. If the possibility exists
          that there are two or more list items with
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          the same name and you want to find them all, then you can’t use find()
          and you should iterate over the list and check each item’s name. The
          following script does that: it selects all items whose name is
          <span class="s1">cat</span>:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;cat&quot;</span>,
          <span style="color: #cd1719">&quot;dog&quot;</span>,
          <span style="color: #cd1719">&quot;cat&quot;</span>,
          <span style="color: #cd1719">&quot;mouse&quot;</span><b>]</b>,
          <b>{</b>multiselect<b>: </b><span class="s6">true</span><b>});</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>find <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Select cats&quot;</span><b>);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">find.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s6"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          var <span class="s7">found </span><span class="s8">= [];</span>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt;
          <span class="s7">myList.items.length</span>;
          <span class="s7">i</span>++)
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 56pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">myList.items</span>[<span
            class="s7"
            >i</span
          >]<span class="s7">.text </span>==
          <span class="s9">&quot;cat&quot;</span>)
          <span class="s7">found.push </span>(<span class="s7">i</span>);
        </p>
        <p
          class="s7"
          style="padding-left: 40pt; text-indent: 0pt; text-align: left"
        >
          myList.selection <b>= </b>found<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="136" height="161" alt="image" src="Image_049.jpg"
          /></span>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a45">Inserting items into a list</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          We saw earlier that items can be added to an existing list using the
          <span class="h4">.add (&quot;list&quot;) </span>method. This always
          adds items at the end of the list. To add an item at a particular
          place, include the target index. For instance, to add an item at the
          beginning of a list, use this line:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.add <b>(</b
          ><span style="color: #cd1719">&quot;item&quot;</span>,
          <span style="color: #cd1719">&quot;zero&quot;</span>, 0<b>);</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To avoid creating duplicate entries in a list, you can use the
          <span class="h4">find </span>method to check if the item is already in
          the list:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 17pt;
            text-indent: 0pt;
            text-align: center;
          "
        >
          <span class="s6">if </span>(<span class="s7">myList.find </span>(<span
            class="s7"
            >myNewItem</span
          >) == <span class="s6">null</span>)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 14pt;
            text-indent: 0pt;
            text-align: center;
          "
        >
          myList.add <b>(</b
          ><span style="color: #cd1719">&quot;item&quot;</span>, myNewItem<b
            >);</b
          >
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left">
          <span
            ><img width="286" height="148" alt="image" src="Image_050.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          If you add an item to a list, the window is updated automatically, as
          shown by this script:
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span><b>]);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>b <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Add&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 7pt;
            line-height: 118%;
            text-align: left;
          "
        >
          b.onClick <b>= </b><span class="s6">function </span
          ><b>() {</b>myList.<span style="color: #007e2f">add </span><b>(</b
          ><span style="color: #cd1719">&quot;item&quot;</span>,
          <span style="color: #cd1719">&quot;zero&quot;</span>, 0<b>)} </b
          >w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 30pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          (As you can see, when the list grows out of its box, ScriptUI adds a
          scrollbar.)
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a46">Keeping a list sorted</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Here is another example of list processing, this time inserting an
          item in a list and keeping the list in alphabetical order. The script
          activates the input prompt, so you can enter letters straight away.
          Notice that functions that process
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          a window control need not necessarily be defined within the block that
          defines the window (i.e. between
          <span class="h4">new Window </span>and
          <span class="h4">w.show()</span>).
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, <b>[</b>0,
          0, 50, 150<b>]</b>, <b>[</b
          ><span style="color: #cd1719">&quot;A&quot;</span>,
          <span style="color: #cd1719">&quot;K&quot;</span>,
          <span style="color: #cd1719">&quot;X&quot;</span><b>]);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">input </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;edittext&quot;</span
          >);
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">input.active </span>= <span class="s6">true</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">b </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;button&quot;</span
          ><span class="s7">, undefined, </span
          ><span class="s9">&quot;Insert&quot;</span
          ><span class="s7">, </span>{<span class="s7">name</span>:
          <span class="s9">&quot;ok&quot;</span>});
          <span class="s7">b.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s8"
          style="
            padding-left: 40pt;
            text-indent: 0pt;
            line-height: 122%;
            text-align: left;
          "
        >
          <span class="s7">insert_item </span>(<span class="s7"
            >myList, input.text</span
          >); <span class="s7">input.text </span>=
          <span class="s9">&quot;&quot;</span>;
        </p>
        <p
          class="s8"
          style="
            padding-left: 40pt;
            text-indent: 0pt;
            line-height: 12pt;
            text-align: left;
          "
        >
          <span class="s7">input.active </span>= <span class="s6">true</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">function </span>insert_item <b>(</b>list_obj,
          new_item<b>) {</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: -8pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">list_obj.find </span
          >(<span class="s7">new_item</span>) == <span class="s6">null</span>) {
          <span class="s6">var </span><span class="s7">stop </span>=
          <span class="s7">list_obj.items.length</span>;
          <span class="s6">var </span><span class="s7">i </span>=
          <span class="s7">0</span>;
        </p>
        <p
          class="s8"
          style="
            padding-left: 48pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">while </span>(<span class="s7">i </span>&lt;
          <span class="s7">stop </span>&amp;&amp;
          <span class="s7">new_item </span>&gt;
          <span class="s7">list_obj.items</span>[<span class="s7">i</span>]<span
            class="s7"
            >.text</span
          >) <span class="s7">i</span>++;
        </p>
        <p
          class="s7"
          style="padding-left: 40pt; text-indent: 0pt; text-align: left"
        >
          list_obj.add <b>(</b
          ><span style="color: #cd1719">&quot;item&quot;</span>, new_item, i<b
            >);</b
          >
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="136" height="238" alt="image" src="Image_051.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The script’s interface is a bit klunky, and as we named the Insert
          button <span class="h4">ok </span>it responds to the Enter key –
          triggering the onClick handler – so it sits there just catching Enter
          key presses. Later on we’ll handle such situations more elegantly by
          defining an event handler rather than using a button for this purpose.
        </p>
        <p
          class="s14"
          style="
            padding-top: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a47">Moving list items (single-selection lists)</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To move items around in a list, we need two buttons: one to move the
          selected list item up, the other to move it down. We also need a
          function to swap two adjacent list items. Here is a simple example:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>w <b>= </b
          ><span class="s6">new </span>Window <b>(</b
          ><span style="color: #cd1719">&quot;dialog&quot;</span>,
          <span style="color: #cd1719">&quot;Rearrange&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">var </span>list <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span>,
          <span style="color: #cd1719">&quot;four&quot;</span>,
          <span style="color: #cd1719">&quot;five&quot;</span
          ><b>]); </b>list.selection <b>= </b>1<b>;</b>
        </p>
        <p
          class="s7"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <span class="s6">var </span>up <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Up&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>down <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Down&quot;</span><b>);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-left: 40pt;
            text-indent: -8pt;
            line-height: 117%;
            text-align: left;
          "
        >
          <span class="s7">up.onClick </span>=
          <span class="s6">function </span>() { <span class="s6">var </span
          ><span class="s7">n </span>=
          <span class="s7">list.selection.index</span>;
          <span class="s6">if </span>(<span class="s7">n </span>&gt;
          <span class="s7">0</span>) {
        </p>
        <p
          class="s7"
          style="padding-left: 48pt; text-indent: 0pt; text-align: left"
        >
          swap <b>(</b>list.items <b>[</b>n<b>-</b>1<b>]</b>, list.items
          <b>[</b>n<b>]);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          list.selection <b>= </b>n<b>-</b>1<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-left: 40pt;
            text-indent: -8pt;
            line-height: 117%;
            text-align: justify;
          "
        >
          <span class="s7">down.onClick </span>=
          <span class="s6">function </span>() { <span class="s6">var </span
          ><span class="s7">n </span>=
          <span class="s7">list.selection.index</span>;
          <span class="s6">if </span>(<span class="s7">n </span>&lt;
          <span class="s7">list.items.length</span>-<span class="s7">1</span>) {
        </p>
        <p
          class="s7"
          style="padding-left: 48pt; text-indent: 0pt; text-align: justify"
        >
          swap <b>(</b>list.items <b>[</b>n<b>]</b>, list.items
          <b>[</b>n<b>+</b>1<b>]);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: justify;
          "
        >
          list.selection <b>= </b>n<b>+</b>1<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="
            padding-left: 40pt;
            text-indent: -8pt;
            line-height: 119%;
            text-align: left;
          "
        >
          <span class="s6">function </span>swap <b>(</b>x, y<b>) { </b
          ><span class="s6">var </span>temp <b>= </b>x.text<b>; </b>x.text
          <b>= </b>y.text<b>; </b>y.text <b>= </b>temp<b>;</b>
        </p>
        <p
          class="s8"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="136" height="203" alt="image" src="Image_052.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Actually, the list items themselves remain where they are: it’s their
          text properties that are swapped in the function
          <span class="h4">swap()</span>.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a48">Moving list items (multi-selection lists)</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Moving a multiple selection is a bit more involved. In the previous
          selection we saw that to move a list item is to swap its name with the
          preceding or following
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          item’s name. The same approach is used to move a multiple selection
          (see the script on the next page).
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          The <span class="h4">up </span>and
          <span class="h4">down </span>functions are almost the same. When we
          move selected items up, we first check that the first selected item is
          not the first item in the list. We then basically percolate the name
          of the item preceding the first selected item down through the list
          until it follows the last selected item. We then need to adjust the
          displayed selection. Moving items down follows the same principle.
        </p>
        <p
          style="
            padding-top: 6pt;
            padding-bottom: 4pt;
            padding-left: 30pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Note that this method works correctly only on non-interrupted
          selections. It could be made to work on any selection, but that’s a
          lot of extra coding. The check if the selected items are contiguous is
          performed by the function <span class="h4">contiguous()</span>, which
          is used together with the check if the selection can be moved.
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>w <b>= </b
          ><span class="s6">new </span>Window <b>(</b
          ><span style="color: #cd1719">&quot;dialog&quot;</span>,
          <span style="color: #cd1719">&quot;Rearrange&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>list <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span>,
          <span style="color: #cd1719">&quot;four&quot;</span>,
          <span style="color: #cd1719">&quot;five&quot;</span><b>]</b>,
          <b>{</b>multiselect<b>:</b>
        </p>
        <p
          class="s6"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          true<span class="s8">});</span>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>up <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Up&quot;</span><b>);</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>down <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Down&quot;</span><b>);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">up.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>first
          <b>= </b>list.selection<b>[</b>0<b>]</b>.index<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">first </span>==
          <span class="s7">0 </span>|| !<span class="s7">contiguous </span
          >(<span class="s7">list.selection</span>))
          <span class="s6">return</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>last
          <b>= </b>first<b>+</b>list.selection.length<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">first</span>;
          <span class="s7">i </span>&lt; <span class="s7">last</span>;
          <span class="s7">i</span>++)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          swap <b>(</b>list.items <b>[</b>i<b>-</b>1<b>]</b>, list.items
          <b>[</b>i<b>]);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">list.selection </span>= <span class="s6">null</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">first</span>-<span
            class="s7"
            >1</span
          >; <span class="s7">i </span>&lt; <span class="s7">last</span>-<span
            class="s7"
            >1</span
          >; <span class="s7">i</span>++)
          <span class="s7">list.selection </span>= <span class="s7">i</span>;
        </p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">down.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>last
          <b>= </b>list.selection.pop<b>()</b>.index<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">last </span>==
          <span class="s7">list.items.length</span>-<span class="s7">1 </span>||
          !<span class="s7">contiguous </span>(<span class="s7"
            >list.selection</span
          >)) <span class="s6">return</span>;
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>first
          <b>= </b>list.selection<b>[</b>0<b>]</b>.index<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">last</span>;
          <span class="s7">i </span>&gt;= <span class="s7">first</span>;
          <span class="s7">i</span>--)
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          swap <b>(</b>list.items <b>[</b>i<b>+</b>1<b>]</b>, list.items
          <b>[</b>i<b>]);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">list.selection </span>= <span class="s6">null</span>;
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">first</span>+<span
            class="s7"
            >1</span
          >; <span class="s7">i </span>&lt;= <span class="s7">last</span>+<span
            class="s7"
            >1</span
          >; <span class="s7">i</span>++)
          <span class="s7">list.selection </span>= <span class="s7">i</span>;
        </p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          }
        </p>
        <p
          class="s22"
          style="padding-left: 7pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img
              width="136"
              height="203"
              alt="image"
              src="Image_053.jpg" /></span
          ><span
            style="
              color: black;
              font-family: 'Myriad Pro', serif;
              font-style: normal;
              font-weight: normal;
              text-decoration: none;
              font-size: 10pt;
              vertical-align: 245pt;
            "
          >
          </span
          ><span
            ><img width="136" height="203" alt="image" src="Image_054.jpg"
          /></span>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">function </span>contiguous <b>(</b>sel<b>) {</b>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">return </span>sel.length
          <b>== (</b>sel<b>[</b>sel.length<b>-</b>1<b>]</b>.index
          <b>- </b>sel<b>[</b>0<b>]</b>.index <b>+ </b>1<b>);</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="
            padding-left: 40pt;
            text-indent: -8pt;
            line-height: 119%;
            text-align: left;
          "
        >
          <span class="s6">function </span>swap <b>(</b>x, y<b>) { </b
          ><span class="s6">var </span>temp <b>= </b>x.text<b>; </b>x.text
          <b>= </b>y.text<b>; </b>y.text <b>= </b>temp<b>;</b>
        </p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show <b>();</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a49">Removing items from a list</a>
        </p>
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: -1pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To remove an item from a list, use the
          <span class="h4">.remove() </span>method. For example, to remove the
          third item from a list, use this:
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          myList.remove <b>(</b>myList.items<b>[</b>2<b>]);</b>
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 2pt;
            padding-left: 30pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          To remove an item by its name, you can use this method:
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s7">myList.remove </span>(<span class="s7"
            >myList.find </span
          >(<span class="s9">&quot;two&quot;</span>));
        </p>
        <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="
            padding-top: 5pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <a name="a50">Removing items from a multi-selection list</a>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >);
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>list <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
          <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
          <span style="color: #cd1719">&quot;two&quot;</span>,
          <span style="color: #cd1719">&quot;three&quot;</span>,
          <span style="color: #cd1719">&quot;four&quot;</span>,
          <span style="color: #cd1719">&quot;five&quot;</span><b>]</b>,
          <b>{</b>multiselect<b>:</b>
        </p>
        <p
          class="s6"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          true<span class="s8">});</span>
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>del <b>= </b>w.add <b>(</b
          ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
          <span style="color: #cd1719">&quot;Delete selected items&quot;</span
          ><b>);</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">del.onClick </span>=
          <span class="s6">function </span>() {
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          // remember which line is selected
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          <span class="s6">var </span>sel
          <b>= </b>list.selection<b>[</b>0<b>]</b>.index<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>=
          <span class="s7">list.selection.length</span>-<span class="s7">1</span
          >; <span class="s7">i </span>&gt; -<span class="s7">1</span>;
          <span class="s7">i</span>--)
          <span class="s7">list.remove </span>(<span class="s7"
            >list.selection</span
          >[<span class="s7">i</span>]);
        </p>
        <p
          class="s12"
          style="padding-left: 40pt; text-indent: 0pt; text-align: left"
        >
          // select a line after deleting one or more items
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: -8pt;
            line-height: 118%;
            text-align: left;
          "
        >
          <span class="s6">if </span>(<span class="s7">sel </span>&gt;
          <span class="s7">list.items.length</span>-<span class="s7">1</span>)
          <span class="s7">list.selection </span>=
          <span class="s7">list.items.length</span>-<span class="s7">1</span>;
        </p>
        <p
          class="s6"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          else
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 48pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          list.selection <b>= </b>sel<b>;</b>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 24pt; text-indent: 0pt; text-align: left"
        >
          w.show<b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          To remove any selected items from a multi-selection list, delete the
          selected items back to front:
        </p>
        <p
          class="s22"
          style="padding-left: 427pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="156" height="174" alt="image" src="Image_055.jpg"
          /></span>
          <span
            ><img width="156" height="174" alt="image" src="Image_056.jpg"
          /></span>
        </p>
        <p
          style="
            padding-top: 3pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Working out which line to select after deleting the selecting list
          items takes more code than deleting the items themselves.
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s14"
          style="padding-left: 31pt; text-indent: 0pt; text-align: left"
        >
          <a name="a51">Selecting vs. revealing items</a>
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 32pt;
            text-indent: -8pt;
            line-height: 117%;
            text-align: justify;
          "
        >
          <span class="s6">var </span><span class="s7">w </span>=
          <span class="s6">new </span><span class="s7">Window </span>(<span
            class="s9"
            >&quot;dialog&quot;</span
          >); <span class="s6">var </span><span class="s7">myList </span>=
          <span class="s7">w.add </span>(<span class="s9"
            >&quot;listbox&quot;</span
          >); <span class="s6">for </span>(<span class="s6">var </span
          ><span class="s7">i </span>= <span class="s7">0</span>;
          <span class="s7">i </span>&lt; <span class="s7">100</span>;
          <span class="s7">i</span>++) {
        </p>
        <p
          class="s8"
          style="padding-left: 40pt; text-indent: 0pt; text-align: justify"
        >
          <span class="s7">myList.add </span>(<span class="s9"
            >&quot;item&quot;</span
          ><span class="s7">, </span><span class="s9">&quot;Line_&quot; </span>+
          <span class="s9">String </span>(<span class="s7">i</span>));
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s7"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          myList.preferredSize <b>= [</b>100,100<b>];</b>
        </p>
        <p style="text-indent: 0pt; text-align: left"><br /></p>
        <p
          class="s8"
          style="padding-left: 32pt; text-indent: 0pt; text-align: left"
        >
          <span class="s7">w.onShow </span>= <span class="s6">function </span>()
          {
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          //myList.selection = 50; // screenshot (b)
        </p>
        <p
          class="s12"
          style="
            padding-top: 2pt;
            padding-left: 40pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          //myList.revealItem (&quot;Line_50&quot;); // screenshot (c)
        </p>
        <p
          class="s8"
          style="
            padding-top: 2pt;
            padding-left: 31pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          }
        </p>
        <p
          class="s7"
          style="
            padding-top: 2pt;
            padding-left: 24pt;
            text-indent: 0pt;
            text-align: left;
          "
        >
          w.show <b>();</b>
        </p>
        <p style="text-indent: 0pt; text-align: left" />
        <p
          style="
            padding-top: 8pt;
            padding-bottom: 4pt;
            padding-left: 31pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          If a list is longer than its box, by default the beginning of that
          list is displayed, as shown in screenshot (a). If the script
          preselects an item, the list scrolls to make that selection visible,
          see (b). If you want to make a certain item visible without selecting
          it, use <span class="h4">revealItem()</span>; in screenshot (c) an
          item is displayed (Line_50) without selecting it. These three options
          are shown in the following script:
        </p>
        <p
          class="s22"
          style="padding-left: 427pt; text-indent: 0pt; text-align: left"
        >
          <span
            ><img width="136" height="140" alt="image" src="Image_057.jpg"
          /></span>
          <span
            ><img width="136" height="140" alt="image" src="Image_058.jpg"
          /></span>
          <span
            ><img width="136" height="140" alt="image" src="Image_059.jpg"
          /></span>
        </p>
        <ol id="l2">
          <li data-list-text="(a)">
            <p
              class="s10"
              style="
                padding-top: 5pt;
                padding-left: 544pt;
                text-indent: -118pt;
                text-align: left;
              "
            >
              (b) (c)
            </p>
          </li>
        </ol>
      </li>
    </ol>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s11"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note<span class="s10"
        >: In CC and later, selecting or revealing list items must be handled in
        an onShow callback. Another difference is that in CC the selected or
        revealed item appears at the top of the list box, not at bottom as in
        CS6.</span
      >
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As the script stands it displays window (a); uncomment
      <span class="h4">myList.selection = 50; </span>and the script shows window
      (b); comment out that line again and uncomment
      <span class="h4">list.revealItem (&quot;Item_50&quot;); </span>to show
      window (c).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There is a fourth possibility, but it’s just a cosmetic variant: if you
      reveal an item at the end of the list and then immediately reveal an
      earlier item, then that earlier item is shown at the beginning of the list
      box. For example, with these two lines:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myList.revealItem <b>(</b>list.items.length<b>-</b>1<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">myList.revealItem </span>(<span class="s9"
        >&quot;Line_50&quot;</span
      >);
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      the last item is selected (but you don’t get to see it) and the item
      <span class="h4">Line_50 </span>is shown at the beginning of the box.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Like most list functions, revealItem() can be used not only with a list
      item’s name, but also with a simple index:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.revealItem <b>(</b>50<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 4pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Finally, <span class="h4">revealItem() </span>can be used to create a
      workaround for a display bug in multiselect lists in InDesign before CC.
      The bug is shown by the following script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myList </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;listbox&quot;</span
      ><span class="s7">, undefined, undefined, </span>{<span class="s7"
        >multiselect</span
      >: <span class="s6">true</span>});
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">100</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">myList.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Line_&quot; </span>+
      <span class="s9">String </span>(<span class="s7">i</span>))
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myList.preferredSize <b>= [</b>100,200<b>];</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Select&quot;</span>);
      <span class="s7">b.onClick </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myList.selection <b>= [</b>50, 51, 52, 53, 54<b>];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="250" alt="image" src="Image_060.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The problem is clear. ScriptUI’s default behaviour is to scroll a list so
      that
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a selected item is shown. But in multiselect lists in which more than two
      items are selected, only the first two items in the selection are shown.
      To remedy this and show all selected items, we do a
      <span class="h4">revealItem() </span>on the last item of the selection. If
      that’s handled by a separate function then other processes can make use of
      that same function:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myList </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;listbox&quot;</span
      ><span class="s7">, undefined, undefined, </span>{<span class="s7"
        >multiselect</span
      >: <span class="s6">true</span>});
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">100</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">myList.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Line_&quot; </span>+
      <span class="s9">String </span>(<span class="s7">i</span>))
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myList.preferredSize <b>= [</b>100,200<b>];</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>b <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Select&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">b.onClick </span>= <span class="s6">function </span>()
      {<span class="s7">myList.selection </span>= [<span class="s7"
        >50,51,52,53,54</span
      >];}
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myList.onChange <b>= </b>ShiftList<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">ShiftList </span><span class="s8">() {</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      if <span class="s8">(</span>this<span class="s7">.selection </span
      ><span class="s8">!= </span>null<span class="s8">) {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>idx <b>= </b
      ><span class="s6">this</span>.selection.pop<b>()</b>.index<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">idx </span>&lt;
      <span class="s6">this</span><span class="s7">.items.length</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">this</span>.revealItem <b>(</b>idx<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="250" alt="image" src="Image_061.jpg"
      /></span>
    </p>
    <p
      class="s14"
      style="
        padding-top: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a52">Including images in a list</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      List items can include images; here is an example:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>descriptions <b>= [</b
      ><span style="color: #cd1719">&quot;Footnotes&quot;</span>,
      <span style="color: #cd1719">&quot;Masters&quot;</span>,
      <span style="color: #cd1719">&quot;Locked stories&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>imgs <b>= [</b
      ><span style="color: #cd1719">&quot;footnotes.idrc&quot;</span>,
      <span style="color: #cd1719">&quot;masters.idrc&quot;</span>,
      <span style="color: #cd1719">&quot;locked_stories.idrc&quot;</span
      ><b>];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myList </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;listbox&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">descriptions.length</span>; <span class="s7">i</span>++)
      { <span class="s7">myList.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, descriptions</span>[<span class="s7">i</span>]);
      <span class="s12">myList.items</span><span style="color: #007e2f">[</span
      ><span class="s12">i</span><span style="color: #007e2f">]</span
      ><span class="s12">.image </span>= <span class="s6">File </span>(<span
        class="s9"
        >&quot;~/Desktop/&quot;</span
      >+<span class="s7">imgs</span>[<span class="s7">i</span>])
    </p>
    <p
      class="s8"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="138" height="118" alt="image" src="Image_062.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first two lines create arrays of image names and list-item texts; the
      for-loop then adds list items and adds images to each item. (Like icons in
      icon buttons, images should be in PNG, IDRC, or JPG format.)
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 30pt; text-indent: 0pt; text-align: left"
    >
      <a name="a53">Adding checkmarks</a>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="136" height="131" alt="image" src="Image_063.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You can add checkmarks to list items by setting an item’s
      <span class="h4">checked </span>property to true. Example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;One&quot;</span>,
      <span style="color: #cd1719">&quot;Two&quot;</span>,
      <span style="color: #cd1719">&quot;Three&quot;</span>,
      <span style="color: #cd1719">&quot;Four&quot;</span
      ><b>]); </b>list.items<b>[</b>1<b>]</b>.checked <b>= </b
      ><span class="s6">true</span><b>;</b>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      But as you see, the list is now no longer aligned properly. To fix this,
      set the checked property of every item to false, which creates space for
      the check marks:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;One&quot;</span>,
      <span style="color: #cd1719">&quot;Two&quot;</span>,
      <span style="color: #cd1719">&quot;Three&quot;</span>,
      <span style="color: #cd1719">&quot;Four&quot;</span><b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">list.items.length</span>;
      <span class="s7">i</span>++) <span class="s7">list.items</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.checked </span>= <span class="s6">false</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      <span class="s7">list.items</span>[<span class="s7">1</span>]<span
        class="s7"
        >.checked </span
      >= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 9pt;
        "
      >
      </span
      ><span
        ><img width="136" height="131" alt="image" src="Image_064.jpg"
      /></span>
    </p>
    <p
      class="s14"
      style="
        padding-top: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a54">Multi-column lists</a>
    </p>
    <p
      class="s11"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note<span class="s10"
        >: like listboxes, in InDesign CS6 on Windows 10, multi-column listboxes
        should be placed in a group or a panel.</span
      >
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s11">Note</span>: Multi-column lists with column headers
      cause Illustrator CS6 on the Mac to crash. CS5.5 and earlier and CC and
      later are fine, as are all versions on Windows. See
      <span style="color: #0080c7">this forum thread </span>for details.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Using multi-column lists you can create table-like structures, complete
      with headings. Here is an example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;&quot;</span>,
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      {<span class="s12">numberOfColumns</span>: <span class="s7">3, </span
      ><span class="s12">showHeaders</span>: <span class="s6">true</span
      ><span class="s7">, </span><span class="s12">columnTitles</span>: [<span
        class="s9"
        >&quot;English&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;French&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Dutch&quot;</span>]});
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">with </span>(<span class="s7">myList.add </span>(<span
        class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;One&quot;</span>))
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s12">subItems</span>[<span class="s7">0</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Un&quot;</span>;
      <span class="s7">subItems</span>[<span class="s7">1</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Een&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">with </span>(<span class="s7">myList.add </span>(<span
        class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Two&quot;</span>))
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">subItems</span>[<span class="s7">0</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Deux&quot;</span>;
      <span class="s7">subItems</span>[<span class="s7">1</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Twee&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">with </span>(<span class="s7">myList.add </span>(<span
        class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Three&quot;</span>))
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">subItems</span>[<span class="s7">0</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Trois&quot;</span>;
      <span class="s7">subItems</span>[<span class="s7">1</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Drie&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="179" height="138" alt="image" src="Image_065.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="186" height="138" alt="image" src="Image_066.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The widths of the columns are determined automatically, but you can set
      them by adding the creation property
      <span class="h4">columnWidths</span>. Any text that doesn’t fit the column
      is clipped, which is indicated by an ellipsis:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>myList <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;&quot;</span>,
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <b>{</b>numberOfColumns<b>: </b>3, showHeaders<b>: </b
      ><span class="s6">true</span>, columnTitles<b>: [</b
      ><span style="color: #cd1719">&quot;English&quot;</span>,
      <span style="color: #cd1719">&quot;French&quot;</span>,
      <span style="color: #cd1719">&quot;Dutch&quot;</span><b>]</b>,
      <span style="color: #007e2f">columnWidths</span><b>: [</b>30,30,100<b
        >]});</b
      >
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Columns can be resized in the normal way: move the mouse cursor over
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span><img width="22" height="9" alt="image" src="Image_067.png" /></span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a column separator in the header row (the cursor changes to ) and drag the
      column to the desired width.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Images can be added to any of the items in any of the columns:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">with </span>(<span class="s7">myList.add </span>(<span
        class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;One&quot;</span>))
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">subItems</span>[<span class="s7">0</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Un&quot;</span>;
      <span class="s7">subItems</span>[<span class="s7">0</span>]<span
        class="s7"
        >.image </span
      >= <span class="s7">myFile_1</span>;
      <span class="s7">subItems</span>[<span class="s7">1</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&quot;Een&quot;</span>;
      <span class="s7">subItems</span>[<span class="s7">1</span>]<span
        class="s7"
        >.image </span
      >= <span class="s7">myFile_2</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a55">Tables</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Multi-column lists aren’t really tables in that you can’t select
      individual cells in a row: whichever element you click always selects the
      whole row. But you can fake a table by placing several list boxes next to
      each other without any space between them. Here’s an example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">columns </span>=
      <span class="s7">w.add</span>(<span class="s9">&quot;group&quot;</span>);
      <span class="s7">columns.spacing</span>=<span class="s7">0</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>header <b>= {</b>numberOfColumns<b>: </b>1,
      showHeaders<b>: </b><span class="s6">true</span>, columnWidths<b>: [</b
      >80<b>]};</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">header.columnTitles </span>= [<span class="s9"
        >&quot;French&quot;</span
      >];
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>col1 <b>= </b>columns.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;Un&quot;</span>,<span
        style="color: #cd1719"
        >&quot;Deux&quot;</span
      >,<span style="color: #cd1719">&quot;Trois&quot;</span><b>]</b>, header<b
        >); </b
      >header.columnTitles <b>= [</b
      ><span style="color: #cd1719">&quot;English&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 39pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>col2 <b>= </b>columns.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;One&quot;</span>,<span
        style="color: #cd1719"
        >&quot;Two&quot;</span
      >,<span style="color: #cd1719">&quot;Three&quot;</span><b>]</b>, header<b
        >); </b
      >header.columnTitles <b>= [</b
      ><span style="color: #cd1719">&quot;Dutch&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 15pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>col3 <b>= </b>columns.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;Een&quot;</span>,<span
        style="color: #cd1719"
        >&quot;Twee&quot;</span
      >,<span style="color: #cd1719">&quot;Drie&quot;</span><b>]</b>, header<b
        >); </b
      >w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="290" height="138" alt="image" src="Image_068.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Now you can select individual cells. In addition, you now have some
      control over the appearance of individual columns (type, typesize,
      foreground and background colour, etc.).
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="278" height="240" alt="image" src="Image_069.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      But you don’t have any control over the format of the column headers. If
      you want to change the appearnce of the headers, an altogether different
      script is needed. It’s more elaborate, but it looks much better.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -7pt;
        line-height: 118%;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >); <span class="s7">w.spacing</span>=<span class="s7">0</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 39pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">headers </span>=
      <span class="s7">w.add</span>(<span class="s9">&quot;group&quot;</span>);
      <span class="s7">headers.spacing</span>=<span class="s7">0</span>;
      <span class="s7">headers.margins </span>= [<span class="s7">0,5,0,0</span
      >];
    </p>
    <p
      class="s7"
      style="padding-left: 39pt; text-indent: 0pt; text-align: justify"
    >
      <span class="s6">var </span>dimH<b>=[</b>0,0,100,20<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      headers.add<b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, dimH,
      <span style="color: #cd1719">&quot;\u00A0French&quot;</span
      ><b>); </b>headers.add<b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, dimH,
      <span style="color: #cd1719">&quot;\u00A0English&quot;</span
      ><b>); </b>headers.add<b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, dimH,
      <span style="color: #cd1719">&quot;\u00A0Dutch&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 47pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      headers.graphics.backgroundColor <b>= </b>w.graphics.newBrush<b>( </b
      >w.graphics.BrushType.SOLID_COLOR,<b>[</b>0.7,0.7,0.7<b>]</b>, 1<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for</span><b>(</b><span class="s6">var </span>i
      <b>= </b>0<b>; </b>i <b>&lt; </b>headers.children.length<b>; </b>i<b
        >++) </b
      >headers.children<b>[</b>i<b>]</b>.graphics.font <b>= </b>ScriptUI.newFont
      <b>(</b><span style="color: #cd1719">&quot;Arial&quot;</span>,
      <span style="color: #cd1719">&#39;BOLD&#39;</span>, 12<b>)</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">columns </span>=
      <span class="s7">w.add</span>(<span class="s9">&quot;group&quot;</span>);
      <span class="s7">columns.spacing</span>=<span class="s7">0</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>dimC<b>=[</b>0,0,100,200<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>col1 <b>= </b>columns.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, dimC, <b>[</b
      ><span style="color: #cd1719">&quot;Un&quot;</span>,<span
        style="color: #cd1719"
        >&quot;Deux&quot;</span
      >,<span style="color: #cd1719">&quot;Trois&quot;</span><b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>col2 <b>= </b>columns.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, dimC, <b>[</b
      ><span style="color: #cd1719">&quot;One&quot;</span>,<span
        style="color: #cd1719"
        >&quot;Two&quot;</span
      >,<span style="color: #cd1719">&quot;Three&quot;</span><b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>col3 <b>= </b>columns.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, dimC, <b>[</b
      ><span style="color: #cd1719">&quot;Een&quot;</span>,<span
        style="color: #cd1719"
        >&quot;Twee&quot;</span
      >,<span style="color: #cd1719">&quot;Drie&quot;</span><b>]);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The column headers are now statictext objects and are placed together in
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a group so that we can add a background colour. So the background is
      applied to the group, the font to the individual headers.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 30pt; text-indent: 0pt; text-align: left"
    >
      <a name="a56">Type-ahead lists: select while you type</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A useful type of list is the type-ahead list. An example of this type is
      InDesign’s Quick Apply panel. You see a list (or part of it) and a
      text-entry field. While
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      you type in the entry field, the list is filtered. Here is a script that
      mimics that behaviour:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 22pt;
        text-indent: 1pt;
        line-height: 122%;
        text-align: left;
      "
    >
      picked <b>= </b>type_ahead <b>([</b
      ><span style="color: #cd1719">&#39;bat&#39;</span>,
      <span style="color: #cd1719">&#39;bear&#39;</span>,
      <span style="color: #cd1719">&#39;beaver&#39;</span>,
      <span style="color: #cd1719">&#39;bee&#39;</span>,
      <span style="color: #cd1719">&#39;cat&#39;</span>,
      <span style="color: #cd1719">&#39;cats and dogs&#39;</span>,
      <span style="color: #cd1719">&#39;dog&#39;</span>,
      <span style="color: #cd1719">&#39;maggot&#39;</span>,
      <span style="color: #cd1719">&#39;moose&#39;</span>,
      <span style="color: #cd1719">&#39;moth&#39;</span>,
      <span style="color: #cd1719">&#39;mouse&#39;</span><b>]);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>type_ahead <b>(</b>animals<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog {text: &quot;Quick select&quot;, alignChildren:
        &quot;fill&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">entry </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;edittext {active: true}&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;listbox&#39;</span>, <b>[</b>0, 0, 150,
      250<b>]</b>, animals<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.selection <b>= </b>0<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s7">entry.onChanging </span>=
      <span class="s6">function </span>() { <span class="s6">var </span
      ><span class="s7">temp </span>= <span class="s6">this</span
      ><span class="s7">.text</span>; <span class="s7">list.removeAll </span>();
    </p>
    <p
      class="s8"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">animals.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">animals</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.indexOf </span
      >(<span class="s7">temp</span>) == <span class="s7">0</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.add <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      animals<b>[</b>i<b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">list.items.length </span>&gt;
      <span class="s7">0</span>){ <span class="s7">list.selection </span>=
      <span class="s7">0</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="326" alt="image" src="Image_070.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 69pt;
        "
      >
      </span
      ><span
        ><img width="158" height="326" alt="image" src="Image_071.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 69pt;
        "
      >
      </span
      ><span
        ><img width="158" height="326" alt="image" src="Image_072.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span style="color: #007e2f"
        >// We need the button to catch the Return/Enter key (CC and later) </span
      >w.add <b>(</b><span style="color: #cd1719">&#39;button&#39;</span>,
      undefined, <span style="color: #cd1719">&#39;Ok&#39;</span>,
      <b>{</b>name<b>: </b><span style="color: #cd1719">&#39;ok&#39;</span
      ><b>});</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">if </span>(<span class="s7">w.show </span>() !=
      <span class="s7">2</span>){
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">list.selection.text</span
      ><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.close<b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      In an earlier version of this guide, this script used the line
    </p>
    <p
      class="s11"
      style="
        padding-top: 7pt;
        padding-left: 12pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">entry.onChange </span>=
      <span class="s25">function </span>() {<span class="s26">w.close </span
      >(<span class="s26">1</span>)}
    </p>
    <p
      class="s10"
      style="
        padding-top: 6pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      instead of the Ok button to close the window and return the selected list
      item. But unfortunately, that stopped working in CC, even if you
      explicitely set the edittext control’s
      <span class="s11">enterKeySignalsOnChange </span>property. So if you use
      CC or later you have to use the button as a dummy to catch the
      Return/Enter key press.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      We make use of the callback <span class="h4">onChanging</span>, which in
      this script monitors the entry field. Each time we enter something in the
      entry field, the callback function records what’s there (var temp =
      this.text) and empties the list. It then builds a new list by matching
      temp against the array we used originally to display the list. If temp
      matches the beginning an array element, that element is added to the list.
      Finally, if the list contains any entries (it’s empty if you type
      something that doesn’t match array item), that item is selected.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another way of filtering a list is by highlighting the items that match
      some text. This is useful e.g. in long lists, which can be slow to rewrite
      (the above script rectreates the list on every key press). Highlighting
      list items is much quicker, and it is sometimes useful to keep the whole
      list visible. In addition, if you want to return more than one selected
      list item, then the following script is the one to use (naturally, a
      combination of both scripts is possible too).
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 22pt;
        text-indent: 1pt;
        line-height: 122%;
        text-align: left;
      "
    >
      picked <b>= </b>type_ahead <b>([</b
      ><span style="color: #cd1719">&#39;bat&#39;</span>,
      <span style="color: #cd1719">&#39;bear&#39;</span>,
      <span style="color: #cd1719">&#39;beaver&#39;</span>,
      <span style="color: #cd1719">&#39;bee&#39;</span>,
      <span style="color: #cd1719">&#39;cat&#39;</span>,
      <span style="color: #cd1719">&#39;cats and dogs&#39;</span>,
      <span style="color: #cd1719">&#39;dog&#39;</span>,
      <span style="color: #cd1719">&#39;maggot&#39;</span>,
      <span style="color: #cd1719">&#39;moose&#39;</span>,
      <span style="color: #cd1719">&#39;moth&#39;</span>,
      <span style="color: #cd1719">&#39;mouse&#39;</span><b>]);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>type_ahead <b>(</b>animals<b>) {</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">selected, temp</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog {text: &quot;Quick select&quot;, alignChildren:
        &quot;fill&quot;}&#39;</span
      >);
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">selected </span><span class="s8">= [];</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">entry </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;edittext {active: true}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">list </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;listbox&#39;</span
      ><span class="s7">, </span>[<span class="s7">0,0,150,250</span>]<span
        class="s7"
        >, animals, </span
      >{<span class="s7">multiselect</span>: <span class="s6">true</span>});
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">entry.onChanging </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s7">temp </span>= <span class="s6">this</span
      ><span class="s7">.text</span>; <span class="s7">selected </span>= [];
      <span class="s7">list.selection </span>= <span class="s6">null</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">animals.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">animals</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.indexOf </span
      >(<span class="s7">temp</span>) &gt; -<span class="s7">1</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      selected.push<b>(</b>i<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="160" height="328" alt="image" src="Image_073.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 38pt;
        "
      >
      </span
      ><span
        ><img width="160" height="328" alt="image" src="Image_074.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 38pt;
        "
      >
      </span
      ><span
        ><img width="160" height="328" alt="image" src="Image_075.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.selection <b>= </b>selected<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Ok&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w.show </span>() !=
      <span class="s7">2</span>){ <span class="s7">selected </span>= [];
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">list.selection.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      selected.push <b>(</b>list.selection<b>[</b>i<b>]</b>.text<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">selected</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.close<b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You can make the selecton of items sensitive to a regular expression by
      replacing <span class="h4">indexOf() </span>with
      <span class="h4">search()</span>, and checking whether the user typed a
      backslash:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">entry.onChanging </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">temp </span>= <span class="s6">this</span
      ><span class="s7">.text.slice</span>(-<span class="s7">1</span>) ===
      <span class="s9">&#39;\\&#39; </span>? <span class="s6">this</span
      ><span class="s7">.text</span>+<span class="s9">&#39;\\&#39; </span>:
      <span class="s6">this</span><span class="s7">.text</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      selected <b>= [];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">list.selection </span>= <span class="s6">null</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">animals.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">animals</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.search </span
      >(<span class="s7">temp</span>) &gt; -<span class="s7">1</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      selected.push<b>(</b>i<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.selection <b>= </b>selected<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Now if you enter <span class="h4">d</span>, both dogs and cats and dogs
      are selected; but when you enter <span class="h4">^d</span>, only dogs is
      highlighted. Sinilarly, when you enter <span class="h4">\d</span>, all
      items that contain a digit are selected. The range of special symbols is
      restricted; you can use <span class="h4">^ </span>and
      <span class="h4">$</span>, but <span class="h4">[ </span>and
      <span class="h4">( </span>cause a syntax error.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      For yet other application of lists, see the section on progressbars,
      below.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a57">Processing long lists</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The list in the <span class="h4">Quick select </span>script on the
      previous page is processed very quickly because it is so short. When you
      process long lists, however, the method used in that script (delete the
      list’s items, then add new items) appears to slow down the script
      considerably.
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another approach was suggested in the
      <span style="color: #0080c7">HilfDirSelbst forum</span>: create a new list
      and remove the old one, then assign the new list to the old list’s
      variable:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">entry.onChanging </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>temp <b>= </b>entry.text, tempArray
      <b>= [];</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">array.length</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">array</span>[<span class="s7"
        >i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.indexOf </span
      >(<span class="s7">temp</span>) == <span class="s7">0</span>)
      <span class="s7">tempArray.push </span>(<span class="s7">array</span
      >[<span class="s7">i</span>]);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">if </span>(<span class="s7">tempArray.length </span>&gt;
      <span class="s7">0</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s12"
        >// Create the new list with the same bounds as the one it will replace </span
      ><span class="s7">tempList </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;listbox&quot;</span
      ><span class="s7">, list.bounds, tempArray, </span>{<span class="s7"
        >scrolling</span
      >: <span class="s6">true</span>}); <span class="s7">w.remove</span>(<span
        class="s7"
        >list</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      list <b>= </b>tempList<b>; </b>list.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      This method speeds up things dramatically.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a58">Fixing display problems in listbox controls</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      From InDesign CC, lists aren’t updated correctly if you change the
      contents of the text of the list items but otherwise do nothing to disturb
      the list. Take this script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;listbox&#39;</span>, undefined, <b>[</b
      ><span style="color: #cd1719">&#39;one&#39;</span>,
      <span style="color: #cd1719">&#39;two&#39;</span>,
      <span style="color: #cd1719">&#39;three&#39;</span><b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Update&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">b.onClick </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">w.list.items.length</span>; <span class="s7">i</span>++)
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 47pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.list.items</span>[<span class="s7">i</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&#39;0&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="127" height="157" alt="image" src="Image_076.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 41pt;
        "
      >
      </span
      ><span
        ><img width="127" height="157" alt="image" src="Image_077.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script displays a list with three items and a button. If you click the
      button the script replaces the text strings in the list items with
      &#39;0&#39; – that, at least, is the intention. But in CC and later (up to
      CC2019 at the moment of writing) that doesn’t work any longer. To update
      the list’s display you need to click on it.
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Clicking an a control to update it is not particularly good. But I was
      reminded of some code that Marc Autret uses in his sprites script to
      update the display of changed images. That method basically rattles the
      control, forcing ScriptUI to update the control. That method comes down to
      resize the control and restore its size immediately. Here is the script
      with the fix:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;listbox&#39;</span>, undefined, <b>[</b
      ><span style="color: #cd1719">&#39;one&#39;</span>,
      <span style="color: #cd1719">&#39;two&#39;</span>,
      <span style="color: #cd1719">&#39;three&#39;</span><b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Update&quot;}&#39;</span
      >); <span class="s7">b.onClick </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">w.list.items.length</span>; <span class="s7">i</span>++)
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 47pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.list.items</span>[<span class="s7">i</span>]<span
        class="s7"
        >.text </span
      >= <span class="s9">&#39;0&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">parseInt</span>(<span
        class="s7"
        >app.version</span
      >) &gt; <span class="s7">8</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 47pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      refresh <b>(</b>w.list<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>refresh <b>(</b>control<b>) {</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>wh <b>= </b>control.size<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      control.size <b>= [</b>1<b>+</b>wh<b>[</b>0<b>]</b>,
      1<b>+</b>wh<b>[</b>1<b>]]; </b>control.size <b>= [</b>wh<b>[</b>0<b>]</b>,
      wh<b>[</b>1<b>]];</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a59">dropdownlist</a>
    </h3>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="136" height="98" alt="image" src="Image_078.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Dropdown lists are similar to listbox lists in many respects; the main
      differences, naturally, is that you can see one item at a time if the list
      is not selected and that you can select just one item at a time. Apart
      from that, they are processed in much the same way as list boxes. Here is
      an example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myDropdown <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span
      ><b>]); </b>myDropdown.selection <b>= </b>1<b>;</b>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="78" alt="image" src="Image_079.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myChoice <b>= </b>myDropdown.selection.text<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 167%;
        text-align: left;
      "
    >
      Click the widget to expand the list, as shown in the second screenshot.
      You can check which item is selected using the item’s text property:
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      You can also obtain the item’s index:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myChoice <b>= </b>myDropdown.selection.index<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      As with list boxes, in dropdown lists you can add images to list items:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myDropdown.items<b>[</b>0<b>]</b>.image <b>= </b>myImage
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In many implementations of drop-lists, if you type a letter, the first
      item in the list that starts with that letter is selected in the lists’s
      control without expanding the list (InDesign’s scripted dialog system
      works like that, for instance).
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Unfortunately, ScriptUI’s dropdown doesn’t offer this, but that can be
      remedied with an event listener; see the script on p. 89.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a60">Separators</a>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="136" height="111" alt="image" src="Image_080.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In dropdowns (but, strangely, not in listboxes) you can add separators to
      a dropdown. Here’s an example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myDropdown <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;-&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span
      ><b>]); </b>myDropdown.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The separator counts as a list item, so
      <span class="h4">myDropdown.items.length </span>returns
      <span class="h4">4</span>; and if you want to preselect
      <span class="s17">three </span>in the above script, you&#39;d use
      <span class="h4">myDropdown. selection = 3</span>, because using
      <span class="h4">2 </span>would do nothing – separators can’t be selected.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Separators can be added after creating a dropdown, too, using the add
      method and specifying an insertion point:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>myDropdown <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span
      ><b>]); </b>myDropdown.add <b>(</b
      ><span style="color: #cd1719">&quot;separator&quot;</span>, undefined, 2<b
        >)</b
      >
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      myDropdown.selection <b>= </b>0<b>; </b>w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In this example the separator is added before the third item in the list.
      Note that you must use <span class="h4">undefined </span>as a dummy
      argument: the insertion point must the the third argument of the
      <span class="h4">add() </span>method.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a61">Edit fields with dropdowns</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 29pt;
        text-indent: 1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A useful list type which isn’t available in ScriptUI is one that can be
      called ‘editable dropdown’, or perhaps ‘edit field with a dropdown
      attached’. Examples are the Find What field in the Find/Change dialog and
      most fields in the Character panel: these are fields into which you can
      type something, but they
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      also have a widget which displays a dropdown when clicked so that you can
      select something from it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      But this type of list can be mimicked in ScriptUI by combining an edittext
      control and a dropdown list by placing one over the other using the
      <span class="h4">stack </span>orientation. (I have been using this method
      for a while, and it was mentioned by Harbs, too.) Before CC, though, the
      stack orientation behaves differently on Macs and PCs: on a PC, &quot;A
      stack B&quot; places B on top of A, but on a Mac it places B under A. So
      if you&#39;re using CS6 or earlier you need to check which operating
      system you’re on. From CC, stack behaves the same on Macs and Windows
      (using the Mac style).
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 26pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>names <b>= [</b
      ><span style="color: #cd1719">&quot;Annabel&quot;</span>,
      <span style="color: #cd1719">&quot;Bertie&quot;</span>,
      <span style="color: #cd1719">&quot;Caroline&quot;</span>,
      <span style="color: #cd1719">&quot;Debbie&quot;</span>,
      <span style="color: #cd1719">&quot;Erica&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Place documents&quot;</span>,
      undefined, <b>{</b>closeButton<b>: </b><span class="s6">false</span
      ><b>});</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.alignChildren </span>=
      <span class="s9">&quot;right&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">main </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      main.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Folder: &quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">group </span>=
      <span class="s7">main.add </span>(<span class="s9"
        >&quot;group {alignChildren: &#39;left&#39;, orientation:
        ’stack&#39;}&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s6">File</span
      ><span class="s7">.fs </span>!==
      <span class="s9">&quot;Windows&quot;</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>group.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      names<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">e </span>=
      <span class="s7">group.add </span>(<span class="s9"
        >&quot;edittext&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">e </span>=
      <span class="s7">group.add </span>(<span class="s9"
        >&quot;edittext&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>group.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      names<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">e.text </span>= <span class="s7">names</span>[<span
        class="s7"
        >0</span
      >]; <span class="s7">e.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.preferredSize.width <b>= </b>240<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      e.preferredSize.width <b>= </b>220<b>; </b>e.preferredSize.height
      <b>= </b>20<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">buttons </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      buttons.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;OK&quot;</span><b>); </b>buttons.add
      <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Cancel&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s7">list.onChange </span>=
      <span class="s6">function </span>() { <span class="s7">e.text </span>=
      <span class="s7">list.selection.text</span>;
      <span class="s7">e.active </span>= <span class="s6">true</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script below displays the dialog shown in the first screenshot: a
      dropdown list and an editfield on top of it. The editfield is a bit
      narrower than the dropdown so that it doesn’t mask the dropdown’s widget,
      and the widget is the only thing you can see of the dropdown. When you
      press the widget, the dropdown is shown. A value can be selected in the
      dropdown, which is then placed in the edit field where it can be changed.
      We use an <span class="h4">onChange </span>callback to monitor the
      dropdown.
    </p>
    <p style="padding-left: 427pt; text-indent: 0pt; text-align: left">
      <span
        ><img width="268" height="107" alt="image" src="Image_081.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="padding-left: 427pt; text-indent: 0pt; text-align: left">
      <span
        ><img width="268" height="140" alt="image" src="Image_082.jpg"
      /></span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="452" height="107" alt="image" src="Image_083.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You can see how it works when you remove the stack orientation: the
      edittext control and the dropdown list are then displayed separately.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a62">Creating lists on the fly</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 28pt;
        text-indent: 3pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In the examples given so far, we predefined lists in the form of an array
      ([&quot;one&quot;, &quot;two&quot;, &quot;three&quot;],
      [&quot;Annabel&quot;, &quot;Bertie&quot;, . . .]). Another way of creating
      a dropdown is creating it on the fly. I&#39;ve used this approach to
      present a list of styles that includes paragraph style groups.
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">getParagraphStyle</span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">w, temp, styles</span><span class="s8">;</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>buildList <b>(</b>scope, list, str<b
        >) {</b
      >
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      styles <b>= </b>scope.paragraphStyles.everyItem<b>()</b>.getElements<b
        >();</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">styles.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">temp </span>= <span class="s7">list.add </span>(<span
        class="s9"
        >&#39;item&#39;</span
      ><span class="s7">, styles</span>[<span class="s7">i</span>]<span
        class="s7"
        >.name </span
      >+ (<span class="s7">str </span>== <span class="s9">&#39;&#39; </span>?
      <span class="s9">&#39;&#39; </span>:
      <span class="s9">&#39; (&#39;</span>+<span class="s7">str</span>+<span
        class="s9"
        >&#39;)&#39;</span
      >));
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      temp.id <b>= </b>styles<b>[</b>i<b>]</b>.id<b>; </b
      ><span style="color: #007e2f"
        >// Add property so we can easily get a handle on the style later</span
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">j </span>= <span class="s7">0</span>;
      <span class="s7">j </span>&lt;
      <span class="s7">scope.paragraphStyleGroups.length</span>;
      <span class="s7">j</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 23pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">buildList </span>(<span class="s7"
        >scope.paragraphStyleGroups</span
      >[<span class="s7">j</span>]<span class="s7"
        >, list, scope.paragraphStyleGroups</span
      >[<span class="s7">j</span>]<span class="s7">.name</span>+ (<span
        class="s7"
        >str </span
      >== <span class="s9">&#39;&#39; </span>?
      <span class="s9">&#39;&#39; </span>: <span class="s9">&#39;:&#39;</span>)
      + <span class="s7">str</span>);
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w </span>= <span class="s6">new </span
      ><span class="s7">Window </span>(<span class="s9">&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.pstyles </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;dropdownlist&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buildList <b>(</b>app.activeDocument, w.pstyles,
      <span style="color: #cd1719">&#39;&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.pstyles.remove <b>(</b>w.pstyles.items<b>[</b>0<b>]); </b
      ><span style="color: #007e2f">// Remove [No Paragraph] </span
      >w.pstyles.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">w.ok </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;button {text: &quot;OK&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">if </span>(<span class="s7">w.show </span>() ==
      <span class="s7">1</span>){
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span>app.activeDocument.paragraphStyles.itemByID
      <b>(</b>w.pstyles.selection.id<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return null<span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The following script uses a recursive function (<span class="h4"
        >buildList()</span
      >) to create a list of paragraph style names with their path names, so to
      speak. The list’s format is that of InDesign’s format in the Table of
      Contents window.
    </p>
    <p style="padding-left: 529pt; text-indent: 0pt; text-align: left">
      <span
        ><img width="359" height="335" alt="image" src="Image_084.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      When buildList() dynamically creates the dropdown list, it adds the custom
      property <span class="h4">id </span>(we could use any name: it’s a custom,
      private, property), so that we can later access the paragraph style.
      Because we deal with styles in groups, we can’t use the name of a style,
      so we use its id.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This approach can be used for other types of control as well, such as
      listboxes and treeviews (see p. 48 for a similar example creating a tree).
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a63">treeview</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Lists of type treeview create tree-like structures, much like, for
      instance, folder trees that you see in file managers. Here is an example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      150, 150<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Mammals&quot;</span
      ><b>); </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;cats&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      mammals.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;dogs&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Insects&quot;</span
      ><b>); </b>insects.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;ants&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;bees&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s7">insects.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;flies&quot;</span>);
      <span class="s7">mammals.expanded </span>= <span class="s6">true</span>;
      <span class="s7">insects.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="180" alt="image" src="Image_085.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Nodes are collapsed by default (they are distinguished from items by the +
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="158" height="260" alt="image" src="Image_086.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="158" height="260" alt="image" src="Image_087.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      or − shown before them up to CS6, by little triangles in CC). To expand a
      node, double-click it or single-click the plus that precedes it. To expand
      any node when the window is drawn, use
      <span class="h4">myNode.expanded = true </span>as shown in the example.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      150, 250<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Mammals&quot;</span
      ><b>); </b>mammals.cats <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;cats&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;tabbies&quot;</span
      ><b>); </b>mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;tiggers&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;dogs&quot;</span
      ><b>); </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;terrier&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs.collies <b>= </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;colly&quot;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;border&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Nodes can be embedded under nodes to create multi-level trees. Here is an
      example:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 427pt; text-indent: 0pt; text-align: left"
    >
      InDesign up to CC InDesign from CC
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;highland&quot;</span
      ><b>); </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;labrador&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Insects&quot;</span
      ><b>); </b>insects.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;ants&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;bees&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 15pt;
        line-height: 122%;
        text-align: left;
      "
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;flies&quot;</span><b>); </b>w.show<b
        >();</b
      >
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a64">Images in treeviews</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      As in lists, you can add an image to nodes and items, as in the following
      script:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      150, 200<b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">folder_1 </span>=
      <span class="s7">tree.add </span>(<span class="s9">&quot;node&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Folder 1&quot;</span>);
      <span class="s7">folder_1.</span><span class="s12">image </span>=
      <span class="s6">File </span>(<span class="s9"
        >&quot;/d/scriptui/folder_icon.idrc&quot;</span
      >); <span class="s7">folder_1.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;File 1 1&quot;</span>);
    </p>
    <p
      class="s8"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">folder_1.items</span>[<span class="s7">0</span>]<span
        class="s7"
        >.image </span
      >= <span class="s6">File </span>(<span class="s9"
        >&quot;/d/scriptui/file_icon.idrc&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      folder_1.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;File 1 2&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">folder_1.items</span>[<span class="s7">1</span>]<span
        class="s7"
        >.image </span
      >= <span class="s6">File </span>(<span class="s9"
        >&quot;/d/scriptui/file_icon.idrc&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      folder_1.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;File 1 3&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">folder_1.items</span>[<span class="s7">2</span>]<span
        class="s7"
        >.image </span
      >= <span class="s6">File </span>(<span class="s9"
        >&quot;/d/scriptui/file_icon.idrc&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">folder_2 </span>=
      <span class="s7">tree.add </span>(<span class="s9">&quot;node&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Folder 2&quot;</span>);
      <span class="s7">folder_2.image </span>=
      <span class="s6">File </span>(<span class="s9"
        >&quot;/d/scriptui/folder_icon.idrc&quot;</span
      >); <span class="s7">folder_2.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;File 2 1&quot;</span>);
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      folder_2.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;File 2 2&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      folder_2.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;File 2 3&quot;</span><b>);</b>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // another method to add the icons
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">folder_2.items.length</span>;
      <span class="s7">i</span>++){ <span class="s7">folder_2.items</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.image </span>= <span class="s6">File </span>(<span
        class="s9"
        >&quot;/d/scriptui/file_icon.idrc&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">folder_1.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">folder_2.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="220" alt="image" src="Image_088.jpg"
      /></span>
    </p>
    <p
      class="s14"
      style="
        padding-top: 10pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a65">Expanding all nodes and their subnodes</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In the scripts in the previous section, we expanded the two top-level
      nodes simply by using these two statements:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">mammals.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">insects.expanded </span>= <span class="s6">true</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The <span class="h4">expanded </span>property expands the node to show
      just its items, but any subnodes aren’t expanded. This expands the whole
      tree because each top-
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      level node contained just items, not any subnodes. What we need therefore
      is a method of expanding all nodes when the script starts.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another limitation of treeview nodes is that you can expand them just one
      level. It’s not possible, for instance, to double click a node (or
      Alt-click, or whatever) to expand that node and all its subnodes. These
      two things – expanding a whole tree when the dialog is first drawn and
      expanding nodes exhaustively when they are double-clicked – can be handled
      by one function which is called in two different ways: by an
      <span class="h4">onShow() </span>callback when the dialog is drawn and by
      an event listener when a node is double-clicked.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The function <span class="h4">expand_node() </span>takes two parameters, a
      node and a boolean. The <span class="h4">onShow() </span>function passes
      through the whole tree (the root node, so to speak), so that the whole
      tree is expanded when the window is drawn. The script also defines an
      onDoubleClick callback, which expands just the selected node. (Kasyan
      Servetsky noted that if trees are expanded using this method and the tree
      doesn’t completely fit in the box, on Macs the top of the tree is
      displayed, on Windows, the last part.)
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The tree does show some unexpected behaviour: when a branch is fully
      expanded and you double-click on it, that branch is collapsed even though
      the double-click callback passes true as the state for all nodes, in other
      words,
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;treeview&#39;</span>, <b>[</b>0, 0,
      150, 350<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;Mammals&#39;</span
      ><b>); </b>mammals.cats <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;cats&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;tabbies&#39;</span
      ><b>); </b>mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;tiggers&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;dogs&#39;</span
      ><b>); </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;terrier&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs.collies <b>= </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;colly&#39;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;border&#39;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;highland&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;labrador&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;Insects&#39;</span><b>); </b>insects.add
      <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;ants&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;bees&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      insects.add <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;flies&#39;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">tree.onDoubleClick </span>=
      <span class="s6">function </span>() {
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: -2pt;
        line-height: 113%;
        text-align: left;
      "
    >
      ‘expand’. It’s not clear to me why this happens. It has definitely
      something to do with the callback, because if you leave out the function,
      double-click doesn’t do anything at all. The function, by the way, doesn’t
      work very well in CC.
    </p>
    <p
      class="s22"
      style="padding-left: 427pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="260" alt="image" src="Image_089.jpg"
      /></span>
      <span
        ><img width="158" height="260" alt="image" src="Image_090.jpg"
      /></span>
    </p>
    <p
      class="s10"
      style="
        padding-top: 7pt;
        padding-left: 427pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Without the onShow callback With the onShow callback
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">tree.selection.type </span>==
      <span class="s9">&#39;node&#39;</span>){
      <span class="s7">expand_node </span>(<span class="s7">tree.selection</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>expand_node <b>(</b>tree<b>){</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">tree.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>branches <b>= </b>tree.items<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">branches.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">if </span>(<span class="s7">branches</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.type </span>== <span class="s9">&#39;node&#39;</span>)
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      expand_node <b>(</b>branches<b>[</b>i<b>]);</b>
    </p>
    <p
      class="s8"
      style="padding-top: 2pt; text-indent: 0pt; text-align: center"
    >
      }
    </p>
    <p
      class="s8"
      style="padding-top: 2pt; text-indent: 0pt; text-align: center"
    >
      }
    </p>
    <p
      class="s8"
      style="padding-top: 2pt; text-indent: 0pt; text-align: center"
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 8pt; text-indent: 0pt; text-align: center"
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>(){
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      expand_node <b>(</b>tree<b>);</b>
    </p>
    <p
      class="s8"
      style="padding-top: 2pt; text-indent: 0pt; text-align: center"
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="240" height="418" alt="image" src="Image_091.jpg"
      /></span>
    </p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <a name="a66">Creating a tree on the fly</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      In addition to predefining treeviews in a script, trees can be created
      dynamically from some structure, e.g. paragraph styles in style groups.
      The following script is an example.
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">getParagraphStyle</span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">w, temp, style</span><span class="s8">;</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>buildTree <b>(</b>doc, tree<b>) {</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      styles <b>= </b>doc.paragraphStyles.everyItem<b>()</b>.getElements<b
        >();</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">styles.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      temp <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      styles<b>[</b>i<b>]</b>.name<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      temp.id <b>= </b>styles<b>[</b>i<b>]</b>.id<b>; </b
      ><span style="color: #007e2f"
        >// Add property so we can easily get a handle on the style later</span
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">j </span>= <span class="s7">0</span>;
      <span class="s7">j </span>&lt;
      <span class="s7">doc.paragraphStyleGroups.length</span>;
      <span class="s7">j</span>++) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 23pt;
        line-height: 122%;
        text-align: left;
      "
    >
      buildTree <b>(</b>doc.paragraphStyleGroups<b>[</b>j<b>]</b>, tree.add
      <b>(</b><span style="color: #cd1719">&#39;node&#39;</span>,
      doc.paragraphStyleGroups<b>[</b>j<b>]</b>. name<b>));</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span
      ><span class="s7">expand_node </span>(<span class="s7">tree</span>) {
      <span class="s12">/* See p. 48 */</span>}
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w </span>= <span class="s6">new </span
      ><span class="s7">Window </span>(<span class="s9">&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.pstyles <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;treeview&#39;</span>, <b>[</b>0, 0,
      250, 400<b>]); </b>buildTree <b>(</b>app.activeDocument, w.pstyles<b
        >);</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.pstyles.remove </span>(<span class="s7"
        >w.pstyles.items</span
      >[<span class="s7">0</span>]);
      <span class="s12">// Remove [No Paragraph] </span
      ><span class="s7">w.ok </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;button {text: &quot;OK&quot;, enabled: false}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.pstyles.onChange </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w.pstyles.selection </span>!=
      <span class="s6">null </span>&amp;&amp;
      <span class="s7">w.pstyles.selection.type </span>==
      <span class="s9">&#39;node&#39;</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.pstyles.selection </span>=
      <span class="s6">null</span>;
      <span class="s12">// Non-terminal nodes should not be selectable</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.ok.enabled </span>=
      <span class="s7">w.pstyles.selection </span>!=
      <span class="s6">null</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      expand_node <b>(</b>w.pstyles<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">if </span>(<span class="s7">w.show </span>() ==
      <span class="s7">1</span>){
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span>app.activeDocument.paragraphStyles.itemByID
      <b>(</b>w.pstyles.selection.id<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return null<span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The buildTree() function creates a tree that represents the
      paragraph-style structure of the active document. This is the same
      document we used for the script on p. 44 that creates a dropdownlist on
      the fly.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a67">Finding and highlighting items in a tree</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To find an item in a tree, we need to traverse the tree. The following
      script defines a function <span class="h4">find_item()</span>, which is a
      traditional recursive function, very similar to functions that traverse
      folders and XML structures. The function returns an array, because the
      tree can contain more than one item with the name we’re searching.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The callback defined for the Search button then expands the path of the
      found item and highlights the item.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Strangely, in CS6 the first time you search an item you need to press
      Search twice to highlight it. The first press expands the tree, the second
      press highlights the item. Subsequent searches work fine.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In CC, the branch is expanded correctly, but the found item is not
      highlighted. In addition, if you search for the last item in the tree,
      InDesign crashes (this is the case up to and including CC 2015).
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;treeview&#39;</span>, <b>[</b>0, 0,
      150, 350<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;Mammals&#39;</span
      ><b>); </b>mammals.cats <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;cats&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;tabbies&#39;</span
      ><b>); </b>mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;tiggers&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;dogs&#39;</span
      ><b>); </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;terrier&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs.collies <b>= </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;colly&#39;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;border&#39;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;highland&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;labrador&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&#39;node&#39;</span>,
      <span style="color: #cd1719">&#39;Insects&#39;</span><b>); </b>insects.add
      <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;ants&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;bees&#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      insects.add <b>(</b><span style="color: #cd1719">&#39;item&#39;</span>,
      <span style="color: #cd1719">&#39;flies&#39;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">fgroup </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;group {_: StaticText {text: &quot;Find: &quot;}}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">srch </span>=
      <span class="s7">fgroup.add </span>(<span class="s9"
        >&#39;edittext {characters: 10}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">search_button </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Search&quot;}&#39;</span
      >); <span class="s7">search_button.onClick </span>=
      <span class="s6">function </span>(){
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>items <b>= </b>find_item <b>(</b>tree,
      <b>[]</b>, srch.text<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">items.length </span>==
      <span class="s7">0</span>) { <span class="s12">// Nothing found </span
      ><span class="s7">tree.selection </span>= <span class="s6">null</span>;
    </p>
    <p
      class="s6"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      return<span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>item <b>= </b>items<b>[</b>0<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>temp <b>= </b>item<b>; </b
      ><span style="color: #007e2f"
        >// store this so we can select it later</span
      >
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Expand the full path
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">while </span>(<span class="s7"
        >item.parent.constructor.name </span
      >!= <span class="s9">&#39;TreeView&#39;</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">item.parent.expanded </span>=
      <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      item <b>= </b>item.parent<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span class="s7">tree.selection </span>= <span class="s7">temp</span>;
      <span class="s7">tree.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      } <span class="s12">// search_button.onClick</span>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="398" alt="image" src="Image_092.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 239pt;
        "
      >
      </span
      ><span
        ><img width="158" height="398" alt="image" src="Image_093.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>find_item <b>(</b>tree, list, item<b
        >){</b
      >
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>branches <b>= </b>tree.items<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">branches.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">branches</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.type </span>== <span class="s9">&#39;node&#39;</span>)
      {
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      find_item <b>(</b>branches<b>[</b>i<b>]</b>, list, item<b>);</b>
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      } <span class="s6">else if </span>(<span class="s7">branches</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.text </span>== <span class="s7">item</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.push <b>(</b>branches<b>[</b>i<b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">list</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a68">Moving items and nodes: processing treeviews</a>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      150, 250<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Mammals&quot;</span
      ><b>); </b>mammals.cats <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;cats&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;tabbies&quot;</span
      ><b>); </b>mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;tiggers&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;dogs&quot;</span
      ><b>); </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;terrier&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 64pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs.collies <b>= </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;colly&quot;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;border&quot;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;highland&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;labrador&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Insects&quot;</span
      ><b>); </b>insects.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;ants&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;bees&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;flies&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Moving items and nodes in a treeview isn’t as straightforward as moving
      items in a listbox. We saw that in a listbox we don’t really move an item,
      but rather simply exchange the text properties of the item to be moved and
      of that of an adjacent item. But in a treeview that’s possible only if the
      selected thing and the adjacent one are both items or if one of them is a
      node and the other one an item. If however the selected thing and the
      adjacent one are both nodes, then we really have to move the node. The
      following script, which is the result of an exchange with Michel Pensas,
      who set the exchange in motion, illustrates moving things around in a
      treeview.
    </p>
    <p
      class="s22"
      style="padding-left: 427pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="290" alt="image" src="Image_094.jpg"
      /></span>
      <span
        ><img width="158" height="290" alt="image" src="Image_095.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      up <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Up&quot;</span><b>); </b>up.onClick
      <b>= </b>MoveUp<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">MoveUp </span><span class="s8">()</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">tree.selection.index </span
      >&gt; <span class="s7">0</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>sel <b>= </b>tree.selection<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>previous
      <b>= </b>sel.parent.items<b>[</b>sel.index<b>-</b>1<b>]</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">sel.type </span>==
      <span class="s9">&quot;item&quot; </span>&amp;&amp;
      <span class="s7">previous.type </span>==
      <span class="s9">&quot;item&quot;</span>){
      <span class="s7">swap </span>(<span class="s7">sel, previous</span>);
      <span class="s7">tree.selection </span>= <span class="s7">previous</span>;
      <span class="s6">return</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">sel.type </span>==
      <span class="s9">&quot;node&quot; </span>&amp;&amp;
      <span class="s7">previous.type </span>==
      <span class="s9">&quot;item&quot;</span>){
      <span class="s7">sel.parent.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, previous.text, sel.index</span>+<span class="s7"
        >1</span
      >); <span class="s7">tree.remove </span>(<span class="s7">previous</span
      >); <span class="s12">// no need to select </span
      ><span class="s6">return</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">sel.type </span>==
      <span class="s9">&quot;item&quot; </span>&amp;&amp;
      <span class="s7">previous.type </span>==
      <span class="s9">&quot;node&quot;</span>){
      <span class="s7">tree.selection </span>=
      <span class="s7">sel.parent.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, sel.text, sel.index</span>-<span class="s7">1</span>);
      <span class="s7">tree.remove </span>(<span class="s7">sel</span>);
    </p>
    <p
      class="s6"
      style="padding-left: 56pt; text-indent: 0pt; text-align: left"
    >
      return<span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: justify;
      "
    >
      <span class="s12"
        >// When we get here we know that both items are nodes </span
      ><span class="s6">var </span><span class="s7">target </span>=
      <span class="s7">sel.parent.add </span>(<span class="s9"
        >&quot;node&quot;</span
      ><span class="s7">, sel.text, sel.index</span>-<span class="s7">1</span>);
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">sel.items.length</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      copy_branch <b>(</b>sel.items<b>[</b>i<b>]</b>, target<b>); </b
      >tree.selection <b>= </b>target<b>; </b>tree.remove<b>(</b>sel<b>);</b>
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      } <span class="s12">// if (tree.</span>
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      } <span class="s12">// MoveUp</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>copy_branch <b>(</b>N, Ncopy<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>NewNode <b>= </b>Ncopy.add <b>(</b>N.type,
      N.text<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">N.type </span>==
      <span class="s9">&quot;node&quot;</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>kids <b>= </b>N.items<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">kids.length</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">kids</span>[<span class="s7"
        >i</span
      >]<span class="s7">.type </span>==
      <span class="s9">&quot;node&quot;</span>)
      <span class="s7">copy_branch </span>(<span class="s7">kids</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">, NewNode</span>);
    </p>
    <p
      class="s6"
      style="padding-left: 56pt; text-indent: 0pt; text-align: left"
    >
      else
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      NewNode.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      kids<b>[</b>i<b>]</b>.text<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">function </span>swap <b>(</b>x, y<b>){ </b
      ><span class="s6">var </span>temp <b>= </b>x.text<b>; </b>x.text
      <b>= </b>y.text<b>; </b>y.text <b>= </b>temp<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script moves items up, not down; moving down is just a slight variant.
      The MoveUp function checks the types of the selected thing and, if the
      selected thing’s index is bigger than 0, in other words, if it isn’t the
      first in the list, then it looks at the selected thing and the immediately
      preceding thing.
    </p>
    <ol id="l3">
      <li data-list-text="1.">
        <p
          style="
            padding-top: 6pt;
            padding-left: 43pt;
            text-indent: -13pt;
            line-height: 113%;
            text-align: left;
          "
        >
          If the selection and what precedes it are both items, then the script
          simply swaps the text properties.
        </p>
      </li>
      <li data-list-text="2.">
        <p
          style="
            padding-top: 6pt;
            padding-left: 43pt;
            text-indent: -12pt;
            line-height: 113%;
            text-align: left;
          "
        >
          If the selection is a node and what precedes it is an item, we create
          a copy of the preceding item below the node and delete the original.
        </p>
      </li>
      <li data-list-text="3.">
        <p
          style="
            padding-top: 6pt;
            padding-left: 43pt;
            text-indent: -12pt;
            line-height: 113%;
            text-align: left;
          "
        >
          If the selecion is an item and the thing above it is a node, then the
          script creates a copy of the item above the node and deletes the item.
        </p>
      </li>
      <li data-list-text="4.">
        <p
          style="
            padding-top: 6pt;
            padding-left: 43pt;
            text-indent: -12pt;
            line-height: 113%;
            text-align: left;
          "
        >
          And finally it gets interesting: the last logical case is that both
          the selection and what’s above it are nodes. The script creates a copy
          of the selected node before the preceding node, then call the function
          <span class="h4">copy_branch</span>, which copies all subnodes and
          items from the selected node to the copied node. When that’s done, the
          selected node is deleted.
        </p>
      </li>
    </ol>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note that in the MoveUp function the script always selects the copied item
      or node. This must be written into the script: it doesn’t happen
      automatically. It’s not really necessary, it’s just convenient in case you
      want to continue moving the selected item.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a69">Removing items and nodes from treeviews</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Removing items from a treeview is similar to removing items from lists. If
      you remove a node, all its children are deleted as well, so you may want
      to add a test to prevent nodes from being deleted. In the following script
      a button is added to the dialog which calls a function that removes an
      item only if that item is not a node.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      100, 150<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Mammals&quot;</span
      ><b>); </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;cats&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      mammals.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;dogs&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Insects&quot;</span
      ><b>); </b>insects.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;ants&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;bees&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s7">insects.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;flies&quot;</span>);
      <span class="s7">mammals.expanded </span>= <span class="s6">true</span>;
      <span class="s7">insects.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">remove_btn </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Remove item&quot;</span>);
      <span class="s7">remove_btn.onClick </span>=
      <span class="s6">function </span>(){
    </p>
    <p
      class="s8"
      style="
        padding-left: 17pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: center;
      "
    >
      <span class="s6">if </span>(<span class="s7">tree.selection.type </span>!=
      <span class="s9">&quot;node&quot;</span>)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      tree.remove <b>(</b>tree.selection<b>);</b>
    </p>
    <p
      class="s8"
      style="padding-top: 2pt; text-indent: 0pt; text-align: center"
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="137" height="211" alt="image" src="Image_096.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 112pt;
        "
      >
      </span
      ><span
        ><img width="137" height="211" alt="image" src="Image_097.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="137" height="211" alt="image" src="Image_098.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another way of protecting nodes is to disable the delete button if a node
      is selected. So instead of the single function in the above script, you
      could have this code:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 11pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s7">tree.onChange </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">if </span>(<span class="s7">tree.selection.type </span>==
      <span class="s9">&quot;node&quot;</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 16pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s7">remove_btn.enabled </span>=
      <span class="s6">false</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">remove_btn.enabled </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">remove_btn.onClick </span>=
      <span class="s6">function </span>(){<span class="s7">tree.remove </span
      >(<span class="s7">tree.selection</span>);}
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As you can see in the screenshot, when you select a node in the tree, the
      <span class="h4">Remove item </span>button is disabled. There is therefore
      now no need to do any checks in the function that deletes the item.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 30pt; text-indent: 0pt; text-align: left"
    >
      <a name="a70">Adding items to a treeview</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Adding items to a treeview is less straightforward than removing items.
      The trouble is that you can’t use the index of items in the same way as in
      plain lists. The reason is that each node creates its own set of indexes.
      The indexes in our example tree are as follows:
    </p>
    <table
      style="border-collapse: collapse; margin-left: 29.0088pt"
      cellspacing="0"
    >
      <tr style="height: 16pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s29"
            style="
              padding-top: 2pt;
              padding-left: 2pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            Mammals
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s29"
            style="
              padding-top: 2pt;
              padding-left: 1pt;
              text-indent: 0pt;
              text-align: center;
            "
          >
            0
          </p>
        </td>
      </tr>
      <tr style="height: 14pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="
              padding-top: 1pt;
              padding-left: 17pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            cats
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="padding-top: 1pt; text-indent: 0pt; text-align: center"
          >
            0
          </p>
        </td>
      </tr>
      <tr style="height: 14pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="
              padding-top: 1pt;
              padding-left: 17pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            dogs
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="padding-top: 1pt; text-indent: 0pt; text-align: center"
          >
            1
          </p>
        </td>
      </tr>
      <tr style="height: 15pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s29"
            style="
              padding-top: 1pt;
              padding-left: 2pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            Insects
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s29"
            style="
              padding-top: 1pt;
              padding-left: 1pt;
              text-indent: 0pt;
              text-align: center;
            "
          >
            1
          </p>
        </td>
      </tr>
      <tr style="height: 14pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="
              padding-top: 1pt;
              padding-left: 17pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            ants
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="padding-top: 1pt; text-indent: 0pt; text-align: center"
          >
            0
          </p>
        </td>
      </tr>
      <tr style="height: 14pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="
              padding-top: 1pt;
              padding-left: 17pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            bees
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="padding-top: 1pt; text-indent: 0pt; text-align: center"
          >
            1
          </p>
        </td>
      </tr>
      <tr style="height: 19pt">
        <td style="width: 49pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="
              padding-top: 1pt;
              padding-left: 17pt;
              text-indent: 0pt;
              text-align: left;
            "
          >
            flies
          </p>
        </td>
        <td style="width: 12pt" bgcolor="#DADADA">
          <p
            class="s30"
            style="padding-top: 1pt; text-indent: 0pt; text-align: center"
          >
            2
          </p>
        </td>
      </tr>
    </table>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="526" height="139" alt="image" src="Image_099.png"
      /></span>
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Within the treeview, Mammals has index 0, Insects has index 1. Within
      Mammals, cats is 0; within Insects, ants is 0. To insert an item you must
      therefore address the correct parent node. Using the structure in our
      example, that can be done as follows:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      150, 150<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Mammals&quot;</span
      ><b>); </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;cats&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      mammals.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;dogs&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Insects&quot;</span
      ><b>); </b>insects.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;ants&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;bees&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s7">insects.add </span>(<span class="s9"
        >&quot;item&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;flies&quot;</span>);
      <span class="s7">mammals.expanded </span>= <span class="s6">true</span>;
      <span class="s7">insects.expanded </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">insert_btn </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Insert item&quot;</span>);
      <span class="s7">insert_btn.onClick </span>=
      <span class="s6">function </span>()
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      tree.selection.parent.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;Reptiles&quot;</span>,
      tree.selection.index<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="158" height="210" alt="image" src="Image_100.jpg"
      /></span>
    </p>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      In CC and later, adding an item collapses the selection’s parent. To fix
      that, add these two lines so that the callback looks as follows:
    </p>
    <p
      class="s11"
      style="
        padding-top: 6pt;
        padding-left: 12pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">insert_btn.onClick </span>=
      <span class="s25">function </span>() {
    </p>
    <p
      class="s26"
      style="
        padding-top: 1pt;
        padding-left: 38pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      tree.selection.parent.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;Reptiles&quot;</span>, tree.selection.
    </p>
    <p
      class="s26"
      style="
        padding-top: 1pt;
        padding-left: 12pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      index<b>);</b>
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 38pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">tree.selection.parent.expanded </span>=
      <span class="s25">false</span>;
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 38pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">tree.selection.parent.expanded </span>=
      <span class="s25">true</span>;
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 12pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="158" height="210" alt="image" src="Image_101.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Elements are added within their branch. If you select a node, the added
      element is inserted at the level of that node but as an item, as shown in
      the screenshot next to the script code. To insert that element as a node,
      you need to check the current selection’s type. The following
      context-sensitive function inserts an element of the correct type at each
      level:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">insert_btn.onClick </span>=
      <span class="s6">function </span>()
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      tree.selection.parent.add <b>(</b>tree.selection.type,
      <span style="color: #cd1719">&quot;Reptiles&quot;</span>,
      tree.selection.index<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;
      standalone=&quot;yes&quot;?&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      &lt;TreeView&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      &lt;Mammals&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      &lt;cats&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      &lt;item&gt;tabbies&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      &lt;item&gt;tiggers&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      &lt;/cats&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      &lt;dogs&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 41pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;terrier&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 41pt; text-indent: 0pt; text-align: left"
    >
      &lt;colly&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 53pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;border&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 53pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;highland&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 41pt; text-indent: 0pt; text-align: left"
    >
      &lt;/colly&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 41pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;labrador&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 29pt; text-indent: 0pt; text-align: left"
    >
      &lt;/dogs&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: left"
    >
      &lt;/Mammals&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: left"
    >
      &lt;Insects&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 29pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;ants&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 29pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;bees&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 29pt; text-indent: 0pt; text-align: left"
    >
      &lt;item&gt;flies&lt;/item&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      &lt;/Insects&gt;
    </p>
    <p
      class="s10"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      &lt;/TreeView&gt;
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      class="s14"
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <a name="a71">Writing a treeview as XML</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      It will be clear by now that any form of tree-processing will have to be
      done by recursive functions. The <span class="h4">expand_all </span>and
      <span class="h4">move_up </span>functions shown earlier are examples.
      Another example would be to write out a treeview as an XML file.
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: justify;
      "
    >
      Here is an example – the panel on the right shows the script’s output:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>tree <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;treeview&quot;</span>, <b>[</b>0, 0,
      150, 250<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>mammals <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Mammals&quot;</span
      ><b>); </b>mammals.cats <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;cats&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;tabbies&quot;</span
      ><b>); </b>mammals.cats.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;tiggers&quot;</span
      ><b>); </b>mammals.dogs <b>= </b>mammals.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;dogs&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;terrier&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      mammals.dogs.collies <b>= </b>mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;colly&quot;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;border&quot;</span
      ><b>); </b>mammals.dogs.collies.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;highland&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      mammals.dogs.add <b>(</b
      ><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;labrador&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>insects <b>= </b>tree.add <b>(</b
      ><span style="color: #cd1719">&quot;node&quot;</span>,
      <span style="color: #cd1719">&quot;Insects&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      insects.add <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;ants&quot;</span><b>); </b>insects.add
      <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;bees&quot;</span><b>); </b>insects.add
      <b>(</b><span style="color: #cd1719">&quot;item&quot;</span>,
      <span style="color: #cd1719">&quot;flies&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      xml <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Write XML&quot;</span
      ><b>); </b>xml.onClick <b>= </b>exportXML<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">exportXML </span><span class="s8">(){</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;
        standalone=&quot;yes&quot;?&gt;\r&lt;TreeView&gt;&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">tree.children.length</span>; <span class="s7">i</span>++)
      <span class="s7">writeXML </span>(<span class="s7">tree.children</span
      >[<span class="s7">i</span>]<span class="s7">, 1</span>);
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;&lt;/TreeView&gt;&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>writeXML <b>(</b>node, level<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">indent </span>(<span
        class="s7"
        >level</span
      >)<span class="s7">, </span><span class="s9">&quot;&lt;&quot;</span>+<span
        class="s7"
        >node.text</span
      >+<span class="s9">&quot;&gt;&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>kids <b>= </b>node.items<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">kids.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">kids</span>[<span class="s7"
        >i</span
      >]<span class="s7">.type </span>==
      <span class="s9">&quot;node&quot;</span>)
      <span class="s7">writeXML </span>(<span class="s7">kids</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">, level</span>+<span class="s7">1</span>);
    </p>
    <p
      class="s6"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      else
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">indent </span>(<span
        class="s7"
        >level</span
      >+<span class="s7">1</span>)<span class="s7">, </span
      ><span class="s9">&quot;&lt;item&gt;&quot; </span>+
      <span class="s7">kids</span>[<span class="s7">i</span>]<span class="s7"
        >.text </span
      >+ <span class="s9">&quot;&lt;/item&gt;&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s12">// for</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">indent </span>(<span
        class="s7"
        >level</span
      >)<span class="s7">, </span
      ><span class="s9">&quot;&lt;/&quot;</span>+<span class="s7"
        >node.text</span
      >+<span class="s9">&quot;&gt;&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>indent <b>(</b>n<b>) {</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">s </span>=
      <span class="s9">&quot;&quot;</span>; <span class="s6">for </span>(<span
        class="s6"
        >var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">n</span>;
      <span class="s7">i</span>++) {<span class="s7">s </span>+=
      <span class="s9">&quot;\t&quot;</span>;}
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">s</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Two examples of treeview controls are
      <span style="color: #0080c7">Gabe Harbs’s script </span>that shows
      based-on relationships between paragraph styles and the class picker in a
      <span style="color: #0080c7">GREP editor </span>script.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a72">tabbedpanel</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: -1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Tabbed panels are are ScriptUI’s third main container type. They are
      defined like groups and panels using the identifier
      <span class="h4">tabbedpanel</span>. You&#39;re familiar with
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      them because InDesign uses several dialogs of this type. By way of
      example, the following script partially reproduces one of InDesign’s
      tabbed-panel dialogs, namely, XML export. There’s nothing you can do about
      the appearance of the borders of the tabs.
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Export XML&quot;</span>, undefined,
      <b>{</b>closeButton<b>: </b><span class="s6">false</span><b>});</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s7">w.alignChildren </span>=
      <span class="s9">&quot;right&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">tpanel </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;</span
      ><span class="s12">tabbedpanel</span><span class="s9">&quot;</span>);
      <span class="s7">tpanel.alignChildren </span>= [<span class="s9"
        >&quot;fill&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;fill&quot;</span>];
      <span class="s7">tpanel.preferredSize </span>= [<span class="s7"
        >350,300</span
      >];
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">general </span>=
      <span class="s7">tpanel.add </span>(<span class="s9">&quot;</span
      ><span class="s12">tab</span><span class="s9">&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;General&quot;</span>);
      <span class="s7">general.alignChildren </span>=
      <span class="s9">&quot;fill&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">g_options </span>=
      <span class="s7">general.add </span>(<span class="s9"
        >&quot;panel&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Options&quot;</span>);
      <span class="s7">g_options.alignChildren </span>=
      <span class="s9">&quot;left&quot;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 31pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      g_options.dtd_decl <b>= </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Include DTD Declaration&quot;</span
      ><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      g_options.view_XML <b>= </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;View XML Using: &quot;</span
      ><b>); </b>g_options.export_sel <b>= </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Export From</span>
    </p>
    <p
      class="s9"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      Selected Element&quot;<span class="s8">);</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 31pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      g_options.export_untagged <b>= </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
      <span style="color: #cd1719"
        >&quot;Export Untagged Tables as CALS XML&quot;</span
      ><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 31pt;
        line-height: 122%;
        text-align: left;
      "
    >
      g_options.remap <b>= </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
      <span style="color: #cd1719"
        >&quot;Remap Break, Whitespace, and Special Characters&quot;</span
      ><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      g_options.xslt <b>= </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;checkbox&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Apply XSLT: &quot;</span
      ><b>); </b>g_options.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Encoding: &quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">images </span>=
      <span class="s7">tpanel.add </span>(<span class="s9">&quot;</span
      ><span class="s12">tab</span><span class="s9">&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Images&quot;</span>);
      <span class="s7">images.alignChildren </span>=
      <span class="s9">&quot;fill&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>img_options <b>= </b>images.add <b>(</b
      ><span style="color: #cd1719">&quot;panel&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Image Options&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 1pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">buttons </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buttons.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Export&quot;</span>, <b>{</b>name<b
        >: </b
      ><span style="color: #cd1719">&quot;ok&quot;</span><b>});</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="318" height="326" alt="image" src="Image_102.png"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 15pt;
        line-height: 122%;
        text-align: left;
      "
    >
      buttons.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Cancel&quot;</span><b>); </b>w.show
      <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Tabs can be preselected just like items in a list. For example, the above
      script starts with the General tab selected; to open the Images tab on
      start-up, use this line:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      tpanel.selection <b>= </b>1<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a73">Vertical tabs</a>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="523" height="544" alt="image" src="Image_103.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      ScriptUI doesn’t natively support the kind of vertically tabbed windows
      that you see in InDesign. Examples of such windows are InDesign’s
      Preferences window and the paragraph and character style windows. But
      using a combination of the properties <span class="h4">stack </span>and
      <span class="h4">visible</span>, that type of window is not difficult to
      emulate. The following script mimics (part of) InDesign’s Preferences
      window.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The idea is to create a group or a panel for each tab and stack align them
      so that they’re all in the same location in the window. An onChange event
      handler on the list makes all ‘tabs’ (groups/panels) invisible, then makes
      the selected tab visible.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 108pt;
        text-indent: -84pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b
      ><span style="color: #cd1719"
        >&#39;dialog {text: &quot;Preferences&quot;, orientation:
        &quot;column&quot;, alignChildren: [&quot;fill&quot;,&quot;fill&quot;],
        properties: {closeButton: false}}</span
      >&#39;<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.main <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719"
        >&#39;group {preferredSize: [600, 500], alignChildren:
        [&quot;left&quot;,&quot;fill&quot;]}&#39;</span
      ><b>); </b>w.stubs <b>= </b>w.main.add <b>(</b
      ><span style="color: #cd1719">&#39;listbox&#39;</span>, undefined, <b>[</b
      ><span style="color: #cd1719">&#39;General&#39;</span>,
      <span style="color: #cd1719">&#39;Interface&#39;</span>,
      <span style="color: #cd1719">&#39;UI Scaling&#39;</span><b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.stubs.preferredSize.width <b>= </b>150<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabGroup </span>=
      <span class="s7">w.main.add </span>(<span class="s9"
        >&#39;group {alignment: [&quot;fill&quot;,&quot;fill&quot;],
        orientation: &quot;stack&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      w.tabs <b>= [];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">0</span>] =
      <span class="s7">w.tabGroup.add </span>(<span class="s9"
        >&#39;group&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9">&#39;statictext {text: &quot;General&quot;}&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9">&#39;panel&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;checkbox {text: &quot;Show Start workspace when no documents are
        open&quot;}&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;checkbox {text: &quot;Show Recent Files workspace when opening a
        file&quot;}&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Page numbering&quot;, preferredSize: [-1,
        80]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 47pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Font downloading and embedding&quot;,
        preferredSize: [-1, 80]}&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Object editing&quot;, preferredSize: [-1,
        150]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 47pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">0</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;When placing or pasting content&quot;,
        preferredSize: [-1, 80]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 47pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s6">with </span>(<span class="s7">w.tabs</span>[<span
        class="s7"
        >0</span
      >]) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 55pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s6">with </span>(<span class="s7">add </span>(<span
        class="s9"
        >&#39;group {alignment: &quot;center&quot;}&#39;</span
      >)) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 63pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s7">add </span>(<span class="s9"
        >&#39;button {text: &quot;Reset al warning dialogs&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 55pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.tabs</span>[<span class="s7">1</span>] =
      <span class="s7">w.tabGroup.add </span>(<span class="s9"
        >&#39;group&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">1</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;statictext {text: &quot;Interface&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">1</span>]<span class="s7"
        >.add </span
      >(<span class="s9">&#39;panel {preferredSize: [-1, -10]}&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">1</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Appearance&quot;, preferredSize: [-1,
        80]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">1</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Cursor and gesture options&quot;,
        preferredSize: [-1, 150]}&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">1</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Panels&quot;, preferredSize: [-1,
        150]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">1</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Options&quot;, preferredSize: [-1,
        100]}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">2</span>] =
      <span class="s7">w.tabGroup.add </span>(<span class="s9"
        >&#39;group&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">2</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;statictext {text: &quot;UI Scaling&quot;}&#39;</span
      >); <span class="s7">w.tabs</span>[<span class="s7">2</span>]<span
        class="s7"
        >.add </span
      >(<span class="s9">&#39;panel&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">2</span>]<span class="s7"
        >.add </span
      >(<span class="s9"
        >&#39;panel {text: &quot;Options&quot;, preferredSize: [-1,
        200]}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.buttons </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group {alignment: &quot;right&quot;}&#39;</span
      >); <span class="s7">w.buttons.add </span>(<span class="s9"
        >&#39;button {text: &quot;OK&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">w.buttons.add </span>(<span class="s9"
        >&#39;button {text: &quot;Cancel&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">w.tabs.length</span>;
      <span class="s7">i</span>++) { <span class="s7">w.tabs</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.orientation </span>=
      <span class="s9">&#39;column&#39;</span>;
      <span class="s7">w.tabs</span>[<span class="s7">i</span>]<span class="s7"
        >.alignChildren </span
      >= <span class="s9">&#39;fill&#39;</span>;
      <span class="s7">w.tabs</span>[<span class="s7">i</span>]<span class="s7"
        >.alignment </span
      >= [<span class="s9">&#39;fill&#39;</span><span class="s7">,</span
      ><span class="s9">&#39;fill&#39;</span>];
      <span class="s7">w.tabs</span>[<span class="s7">i</span>]<span class="s7"
        >.visible </span
      >= <span class="s6">false</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      w.stubs.onChange <b>= </b>showTab<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">showTab </span><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w.stubs.selection </span>!==
      <span class="s6">null</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">w.tabs.length</span>-<span
        class="s7"
        >1</span
      >; <span class="s7">i </span>&gt;= <span class="s7">0</span>;
      <span class="s7">i</span>--) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7">i</span>]<span class="s7"
        >.visible </span
      >= <span class="s6">false</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.tabs</span>[<span class="s7"
        >w.stubs.selection.index</span
      >]<span class="s7">.visible </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>() {
      <span class="s7">w.stubs.selection </span>= <span class="s7">1</span>;
      <span class="s7">showTab</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="518" height="531" alt="image" src="Image_104.jpg"
      /></span>
    </p>
    <h3
      style="
        padding-top: 4pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a74">progressbar</a>
    </h3>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note: in scripts that use progress bars, you cannot set
      <span class="s11">app.scriptPreferences.enableRedraw </span>to
      <span class="s11">false</span>. If you do, the progress bar doesn’t
      display correctly. Across InDesign versions and operating systems, the
      situation is a bit complicated.
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      See Ariel Walden’s excellent overview
      <span style="color: #0080c7">here</span>.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The <span class="h4">progressbar </span>control, unsurprisingly, is used
      to display a progress bar so that the script’s user gets an idea of how
      long a script will run. <span class="h4">progressbar </span>takes four
      parameters:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;progressbar&quot;</span>,
      undefined, start, stop<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      in which <span class="h4">start </span>and
      <span class="h4">stop </span>are the start and stop values of the bar
      itself, corresponding to the first and last items of whatever you&#39;re
      processing. The start value will usually be 0, while stop could be, for
      instance, the index of last array element if you&#39;re dealing with an
      array. Here is an example:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>found <b>= </b
      ><span class="s6">new </span>Array <b>(</b>50<b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;palette&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.pbar <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;progressbar&#39;</span>, undefined, 0,
      found.length<b>); </b>w.pbar.preferredSize.width <b>= </b>300<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: -7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">found.length</span>;
      <span class="s7">i</span>++){ <span class="s7">w.pbar.value </span>=
      <span class="s7">i</span>+<span class="s7">1</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      $.sleep<b>(</b>20<b>); </b
      ><span style="color: #007e2f">// Do something useful here</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="278" height="72" alt="image" src="Image_105.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note that because we start counting at 1, we write the value of of the bar
      as <span class="h4">i+1 </span>to make sure that the bar displays before
      the first item is processed, and that the bar fills up completely. If you
      don’t, you’ll see that the bar doesn’t fill its container so that it might
      look as if the last item in the array isn’t processed.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In InDesign scripts, many arrays are processed from back to front. If you
      use a progress bar in such a script and use the above code, then the bar
      will be
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      updated the wrong way round, which looks silly. To get the bar to display
      from left to right as it should, update it using the following code:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">found.length</span>-<span
        class="s7"
        >1</span
      >; <span class="s7">i </span>&gt; -<span class="s7">1</span>;
      <span class="s7">i</span>--){ <span class="s7">w.pbar.value </span>=
      <span class="s7">found.length</span>-<span class="s7">i</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      $.sleep<b>(</b>20<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      On a Mac you can create vertical progress bars simply by making their
      width smaller than their height. Unfortunately, on PCs running Windows
      this isn’t possible (you can create a vertical bar, but the progress
      indication will always be left-to-right).
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s7">w.orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      pb1 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;progressbar&quot;</span>, undefined,
      0, 100<b>); </b>pb2 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;progressbar&quot;</span>, undefined,
      0, 100<b>); </b>pb3 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;progressbar&quot;</span>, undefined,
      0, 100<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      pb1.preferredSize <b>= </b>pb2.preferredSize <b>= </b>pb3.preferredSize
      <b>= [</b>20, 300<b>]; </b>pb1.value <b>= </b>20<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      pb2.value <b>= </b>60<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      pb3.value <b>= </b>40<b>; </b>w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="65" height="189" alt="image" src="Image_106.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are more sophisticated ways of applying progress bars, of which Marc
      Autret’s <span style="color: #0080c7">script </span>is an excellent
      example.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a75">Lists as progress indicators</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      ScriptUI has a control <span class="h4">progressbar</span>, but using a
      list you can create a more informative kind of progress indication. For
      example, if you&#39;re processing several files, you can display the names
      of these files in a list, and use a highlight to show which file is being
      processed. Here is the script:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= [</b
      ><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span>,
      <span style="color: #cd1719">&quot;four&quot;</span>,
      <span style="color: #cd1719">&quot;five&quot;</span>,
      <span style="color: #cd1719">&quot;six&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>hlights <b>= </b>highlight_list <b>(</b>list<b
        >);</b
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: -7pt;
        line-height: 120%;
        text-align: justify;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">list.length</span>;
      <span class="s7">i</span>++) {
      <span class="s7">hlights.children</span>[<span class="s7">0</span>]<span
        class="s7"
        >.selection </span
      >= <span class="s7">i</span>; <span class="s7">hlights.show </span>();
    </p>
    <p
      class="s12"
      style="padding-left: 32pt; text-indent: 0pt; text-align: justify"
    >
      // user functions
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      $.sleep <b>(</b>400<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      hlights.close<b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>highlight_list <b>(</b>array<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;palette&quot;</span
      ><span class="s7">, undefined, undefined, </span>{<span class="s7"
        >borderless</span
      >: <span class="s6">true</span>});
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.margins <b>= [</b>5,5,5,5<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;listbox&quot;</span>,
      undefined, array<b>);</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">w</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="55" height="105" alt="image" src="Image_107.gif"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The function <span class="h4">highlight_list </span>initialises the window
      but doesn’t show it yet. In the for-loop, we address list items by using
      <span class="h4">hlights.children[n]</span>, where
      <span class="h4">n </span>is the loop counter. In each iteration the
      window is shown using <span class="h4">show() </span>to show the
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      change. (I don’t know why it’s necessary to do it like this, but it was
      the only way to make it work; using
      <span class="h4">layout() </span>doesn’t seem to work here.)
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="47" height="97" alt="image" src="Image_108.gif"
      /></span>
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A small change in the definition of the listbox makes for a slightly
      different apprearance of the window:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.add </span>(<span class="s9">&quot;listbox&quot;</span
      ><span class="s7">, undefined, array, </span>{<span class="s7"
        >multiselect</span
      >: <span class="s6">true</span>});
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      By adding <span class="h4">{multiselect: true} </span>to the listbox
      definition, processed items remain highlighted.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a76">Counters as progress indicators</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The simplest progress indicator is a window that shows you the value of
      the counter of a for-loop, for example. When I suspect that an operation
      may take
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a bit longer than I care to wait for, I use this method because it’s so
      easy to write. Here’s an example:
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      #targetengine &quot;session&quot;;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">counter </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;palette&quot;</span
      >); <span class="s7">counter.prompt </span>=
      <span class="s7">counter.add</span>(<span class="s9"
        >&quot;statictext&quot;</span
      ><span class="s7">,</span>[<span class="s7">0,0,80,20</span>]);
      <span class="s7">counter.show</span>();
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>cells
      <b>= </b>app.activeDocument.allCellStyles<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for</span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">cells.length</span>-<span
        class="s7"
        >1</span
      >; <span class="s7">i </span>&gt; <span class="s7">0</span>;
      <span class="s7">i</span>--) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">counter.prompt.text </span>=
      <span class="s9">String</span>(<span class="s7">i</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      cells<b>[</b>i<b>]</b>.verticalJustification
      <b>= </b>VerticalJustification.bottomAlign<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      counter.close<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Lines 2 to 4 define and show the counter window, which is a palette with
      just one statictext control, which is updated at every iteration of the
      for-loop. By counting down, the display starts at the highest value,
      working its way down to 1.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a77">image</a>
    </h3>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="138" height="159" alt="image" src="Image_109.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Image controls take a file object as their contents parameter. Here is an
      example:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Bouquet&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">flowers </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;image&quot;</span
      ><span class="s7">, undefined, </span><span class="s6">File </span>(<span
        class="s9"
        >&quot;/d/scriptui/bouquet.jpg&quot;</span
      >));
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      It’s not possible to position images absolutely (using
      <span class="h4">.location = [x,y]</span>), but they can be positioned
      with the alignment properties left, right, etc. Nor is it possible to
      scale images just like that: they&#39;re always shown at their native
      size. Setting
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      a smaller size merely crops the image:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Bouquet&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">flowers </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;image&quot;</span
      ><span class="s7">, undefined, </span><span class="s6">File </span>(<span
        class="s9"
        >&quot;/d/scriptui/bouquet.jpg&quot;</span
      >));
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      flowers.size <b>= [</b>50,50<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <a name="a78">Resizing images</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      I said &quot;not just like that&quot; because as Marc Autret points out,
      with a prototype extension of the <span class="h4">Image </span>object it
      <span class="s1">is </span>possible to resize images. Marc’s brilliant
      extension is added at the beginning of the previous script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">Image.prototype.onDraw </span>=
      <span class="s6">function</span>()
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      { <span class="s12">// written by Marc Autret</span>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // &quot;this&quot; is the container; &quot;this.image&quot; is the
      graphic
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      if<span class="s8">( !</span>this<span class="s7">.image </span
      ><span class="s8">) </span>return<span class="s8">;</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">WH </span><span class="s8">= </span>this<span
        class="s7"
        >.size,</span
      >
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      wh <b>= </b><span class="s6">this</span>.image.size,
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      k <b>= </b>Math.min<b>(</b>WH<b>[</b>0<b>]</b>/wh<b>[</b>0<b>]</b>,
      WH<b>[</b>1<b>]</b>/wh<b>[</b>1<b>])</b>, xy<b>;</b>
    </p>
    <p
      class="s12"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      // Resize proportionally:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      wh <b>= [</b>k*wh<b>[</b>0<b>]</b>,k*wh<b>[</b>1<b>]];</b>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Center:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      xy <b>= [ (</b>WH<b>[</b>0<b>]-</b>wh<b>[</b>0<b>])</b>/2,
      <b>(</b>WH<b>[</b>1<b>]-</b>wh<b>[</b>1<b>])</b>/2 <b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">this</span>.graphics.drawImage<b>(</b
      ><span class="s6">this</span
      >.image,xy<b>[</b>0<b>]</b>,xy<b>[</b>1<b>]</b>,wh<b>[</b>0<b>]</b>,wh<b>[</b>1<b
        >]);</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">WH </span>= <span class="s7">wh </span>=
      <span class="s7">xy </span>= <span class="s6">null</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Bouquet&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">flowers </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;image&quot;</span
      ><span class="s7">, undefined, </span><span class="s6">File </span>(<span
        class="s9"
        >&quot;/d/scriptui/bouquet.jpg&quot;</span
      >));
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      flowers.size <b>= [</b>50,50<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s11"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note<span class="s10"
        >: If an image does not redraw properly in Photoshop CS5 or later, try
        using app.refresh(); This is part of Photoshop’s object model, not
        ScriptUI’s.</span
      >
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    ></p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a79">slider</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A slider is just that: the familiar slide bar with a control which you
      move with the mouse. Most sliders use some text field to display the
      slider’s value as it being moved around; you use the
      <span class="h4">onChanging </span>callback for that, as illustrated in
      the following script.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>e <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined, 50<b
        >);</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s12">slider </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;slider&quot;</span
      ><span class="s7">, undefined, 50, 0, 100</span>);
      <span class="s7">slider.onChanging </span>=
      <span class="s6">function </span>() {<span class="s7">e.text </span>=
      <span class="s7">slider.value</span>;}
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The slide bar takes three numeric parameters: in the example, 0 and 100
      are the minimum and maximum values, 50 is the value used when the window
      is drawn.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Some sliders use negative values. In Photoshop you’ll find many examples,
      such as the Brightness/Control and the Exposure dialogs. By default,
      ScriptUI’s sliders use positive values only, but you can easily get around
      that, as shown in the following script (we use a slightly different format
      here, the so-called resource format, for clarity):
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">value </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;edittext {text: 0, characters: 3, justify: &quot;center&quot;,
        active: true}&#39;</span
      >); <span class="s6">var </span><span class="s7">slider </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >’slider {minvalue: -50, maxvalue: 50, value: 50}&#39;</span
      >); <span class="s7">slider.onChanging </span>=
      <span class="s6">function </span>() {<span class="s7">value.text </span>=
      <span class="s7">slider.value </span>- <span class="s7">50</span>}
      <span class="s7">value.onChanging </span>=
      <span class="s6">function </span>() {<span class="s7">slider.value </span
      >= <span class="s9">Number </span>(<span class="s7">value.text</span>) +
      <span class="s7">50</span>}
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="105" alt="image" src="Image_110.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 11pt;
        "
      >
      </span
      ><span
        ><img width="136" height="105" alt="image" src="Image_111.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 11pt;
        "
      >
      </span
      ><span
        ><img width="136" height="105" alt="image" src="Image_112.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You would think that
      <span class="h4">{minvalue: -50, maxvalue: 50, value: 0} </span>would
      place the slider’s handle in the slider’s centre, but it doesn’t, so you
      have to use 50 as the start value. In the example we use an edittext
      control to display the slider’s value, and that field can be used to set
      the slider’s value, too, because we added a callback (<span class="h4"
        >value.onChanging</span
      >) to the edittext control.
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="26" height="152" alt="image" src="Image_113.png"
      /></span>
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      On Macs, but not on Windows, you can create a vertical slider simply by
      setting its width to a smaller value than its height:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">slider </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;slider&quot;</span
      ><span class="s7">, undefined, 0, 100</span>);
      <span class="s7">slider.size </span>=
      <span class="s9">&quot;width: 30, height: 300&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h3
      style="
        padding-top: 9pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a80">scrollbar</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Scrollbars are added automatically to controls of type
      <span class="h4">edittext </span>and <span class="h4">listbox </span>when
      the text or the list items don’t fit their containers; see the examples on
      pages 11 and 27, respectively.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      If you want to add scrollbars to any other control, you&#39;re very much
      on your own in that you have to code all events yourself. This is not so
      straightforward, witness the daunting code produced by Marc Autret and Bob
      Stucky in Adobe’s scripting forum in
      <span style="color: #0080c7">this thread</span>. Gerald Singelmann posted
      a more accessible example in his <span style="color: #0080c7">blog</span>.
      Below, after some scrollbar basics, I outline a general approach to
      scrolling panels.
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="330" height="240" alt="image" src="Image_114.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A scrollbar can be placed horizontally or vertically. Its orientation is
      determined by its coordinates: if the height is bigger than the width, as
      in the script below, the bar is shown vertically; for horizontal
      scrollbars, use a width bigger than the height.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">g </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>panel <b>= </b>g.add<b>(</b
      ><span style="color: #cd1719">&quot;panel&quot;</span>,
      <b>[</b>0,0,300,200<b>]</b>,
      <span style="color: #cd1719">&quot;Panel&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>sbar <b>= </b>g.add <b>(</b
      ><span style="color: #cd1719">&quot;scrollbar&quot;</span>,
      <b>[</b>0,0,20,200<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The bar’s width is set to 20 and its height to 200: this creates a
      vertical scrollbar with the same height as the panel.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 30pt; text-indent: 0pt; text-align: left"
    >
      <a name="a81">The scrollbar’s value</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You manipulate the scrollbar in the familiar way: use the arrow buttons at
      the top and bottom of the bar; move the slider up or down; or click on the
      bar between the slider and one of the arrow buttons.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Any of these manipulations returns a value which corresponds with the
      position of the slider on the bar. You capture these values with a
      callback, as shown in the following script, which outputs values to the
      ESTK’s console:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">g </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>panel <b>= </b>g.add<b>(</b
      ><span style="color: #cd1719">&quot;panel&quot;</span>,
      <b>[</b>0,0,300,200<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>sbar <b>= </b>g.add <b>(</b
      ><span style="color: #cd1719">&quot;scrollbar&quot;</span>,
      <b>[</b>0,0,20,200<b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">sbar.onChanging </span>=
      <span class="s6">function </span>() {<span class="s7">$.writeln </span
      >(<span class="s7">sbar.value</span>)}
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Notice that when you use the up and down buttons, integer values are
      returned. But if you use the slider, the bar’s value is usually a
      fraction.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Scrollbars have a minimum and a maximum value. The defaults are 0 and
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: -1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      100. A scrollbar’s default value when the window is drawn is 0, which can
      be changed by setting that value, as follows:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      sbar.value <b>= </b>50<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      If you want to set the minumum and maximum values as well, you can set
      these and the default value in one line of code:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>sbar <b>= </b>panel.add <b>(</b
      ><span style="color: #cd1719">&quot;scrollbar&quot;</span>,
      <b>[</b>0,0,20,200<b>]</b>, 0, 0, 60<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      where <span class="h4">0, 0, 60 </span>are the default, minimum, and
      maximum values, respectively.
    </p>
    <p
      class="s14"
      style="
        padding-top: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a82">stepdelta</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      When you click an arrow button, the scrollbar’s value changes by 1 by
      default. So in a scrollbar which uses the default minimum and maximum of 0
      and 100, you need to press the down button 100 times to get the slider to
      the bottom of the bar. To change that, set the bar’s stepdelta value:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      sbar.stepdelta <b>= </b>10<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="161" height="239" alt="image" src="Image_115.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="161" height="239" alt="image" src="Image_116.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Now you need just ten clicks to move the slider from top to bottom. And
      with
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a stepdelta of 100, one press moves the slider from the top to the bottom
      of the scrollbar.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a83">jumpdelta</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The jumpdelta value determines in how many steps the slider moves up or
      down when you click between the slider and the up or down button. The
      jumpdata therefore also determines the size of the slider. The default
      value is 20, which means that in a scrollbar with the default min and max
      values of 0 and 100, you click five times to move the slider from one end
      to the other. With a jumpdata of 50, you need just two clicks.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a84">Scrolling panels and groups</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To scroll a panel (or a group), what you do is move that panel behind the
      window. You create a panel that is larger than its container, and
      scrolling a panel is therefore like moving the whole thing so that you get
      a different view on it – hence the name viewport approach.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The following script creates a group (<span class="h4">scrollGroup</span>)
      with 36 lines, and sets a limit on the window’s height so that much of the
      group’s content is not visible. When you scroll down using the scroll bar,
      you move the group up, providing a new window on the group. Thus, in this
      case, the changing scrollbar value is used
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      to change the vertical position of the group. (This script was inspired by
      one of Vlad Vladila’s scripts and replaced my own earlier clumsy effort.)
    </p>
    <p
      class="s10"
      style="
        padding-top: 5pt;
        padding-left: 29pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      jumpdelta = 20 jumpdelta = 50
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window</span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >); <span class="s7">w.maximumSize.height </span>=
      <span class="s7">300</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">panel </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;panel {alignChildren: &quot;left&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">scrollGroup </span>=
      <span class="s7">panel.add </span>(<span class="s9"
        >&#39;group {orientation: &quot;column&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;= <span class="s7">35</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      scrollGroup.add <b>(</b
      ><span style="color: #cd1719">&#39;statictext&#39;</span>, undefined,
      <span style="color: #cd1719">&#39;Label &#39; </span><b>+ </b>i<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">scrollBar </span>=
      <span class="s7">panel.add </span>(<span class="s9"
        >’scrollbar {stepdelta: 20}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span class="s12">// Move the whole scroll group up or down </span
      ><span class="s7">scrollBar.onChanging </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      scrollGroup.location.y <b>= -</b>1 * <span class="s6">this</span>.value<b
        >;</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.onShow </span>= <span class="s6">function</span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span style="color: #007e2f"
        >// Set various sizes and locations when the window is drawn </span
      >panel.size.height <b>= </b>w.size.height<b>-</b>20<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      scrollBar.size.height <b>= </b>w.size.height<b>-</b>40<b>; </b
      >scrollBar.size.width <b>= </b>20<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      scrollBar.location <b>= [</b>panel.size.width<b>-</b>30, 8<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      scrollBar.maxvalue <b>= </b>scrollGroup.size.height
      <b>- </b>panel.size.height <b>+ </b>15<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      };
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s11">Note</span>: On Mac OS the Mondo rendering engine was
      introduced in Photoshop CC 2015. As a result, JPG images are no longer
      accepted, all images must be PNG. According to Davide Barranca this will
      be fixed (see <span style="color: #0080c7">cc2015-survival-guide</span>,
      point 8).
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    ></p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a85">flashplayer</a>
    </h3>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="198" height="164" alt="image" src="Image_117.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Flashplayer controls are similar to image controls. And like images, if
      you set their size, you just get a crop or an oversized frame:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Butterfly&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">flash </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&quot;flashplayer&quot;</span
      ><span class="s7">, undefined, </span><span class="s6">File </span>(<span
        class="s9"
        >&quot;/d/scriptui/wave.swf&quot;</span
      >)); <span class="s7">w.show </span>();
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 1pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 94%;
        text-align: left;
      "
    >
      The controls for stopping and starting movies in CS3 were discontinued in
      CS4.
      <span
        ><img width="136" height="100" alt="image" src="Image_118.jpg" /></span
      ><span class="s21"> </span>You need ActionScript and Flash/Flex to regain
      any control over movie clips. See
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Loïc Aigon’s post at <span style="color: #0080c7">here </span>for an
      interesting discussion on the interaction of Flash, Flex, and ScriptUI.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The Object-Model Viewer in the ESTK is in fact a flashplayer control in a
      ScriptUI window. See the script 35omvUI.jsx, which (in CS5/CS6 on Windows)
      lives in Adobe/Adobe Utilities - CS5(CS6)/ExtendScript Toolkit
      CS5(CS6)/Required, from CC, in /Adobe/Adobe ExtendScript Toolkit CC. This
      script is educational not only because of the flashplayer control used in
      it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      (The flashplayer control was discontinued in CC2017.)
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a86">Measurement control</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Earlier we mentioned that ScriptUI has just one input method, edittext,
      which, as the name suggests, accepts text, which in effect means that it
      accepts any input. InDesign’s classic dialog system, on the other hand,
      has controls for text,
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      measurement units, reals, integers, and percentages. However, it’s
      possible to script those controls. Here we give an example of a
      measurement control.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The control behaves just like InDesign’s measurement controls: type a
      value followed by some measurement unit and the script shows that value in
      the document’s units. For example, if your document’s units are points and
      you enter <span class="s1">10mm</span>, this will be displayed as
      <span class="s1">28.346 pt</span>. Enter a value without a unit and that
      value will be displayed simply adding the document’s unit. One restriction
      of this script is that it doesn’t let you do any arithmetic: in InDesign’s
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      measurement controls you can add something like
      <span class="s1">12p*3 </span>(3 times 12 picas), but the script doesn’t
      support that.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">grp </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;group&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">grp.add </span>(<span class="s9"
        >&#39;statictext {text: &quot;Width: &quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">width </span>=
      <span class="s7">grp.add </span>(<span class="s9"
        >&#39;edittext {characters: 12, active: true}&#39;</span
      >); <span class="s7">width.text </span>=
      <span class="s12">convert_units </span>(<span class="s9"
        >&quot;10mm&quot;</span
      ><span class="s7">, documentUnits</span>());
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      <span class="s6">function </span>convert_units <b>(</b>n, to<b>) {</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 1pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      var <span class="s7">unitConversions </span><span class="s8">= {</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      &#39;pt&#39;<span class="s8">: </span
      ><span style="color: #000">1.0000000000,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 1pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      &#39;p&#39;<span class="s8">: </span
      ><span style="color: #000">12.0000000000,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &#39;mm&#39;<span class="s8">: </span
      ><span style="color: #000">2.8346456692,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &#39;in&#39;<span class="s8">: </span
      ><span style="color: #000">72.00000000,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &#39;ag&#39;<span class="s8">: </span
      ><span style="color: #000">5.1428571428,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &#39;cm&#39;<span class="s8">: </span
      ><span style="color: #000">28.3464566929,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &#39;c&#39;<span class="s8">: </span
      ><span style="color: #000">12.7878751998,</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &#39;tr&#39;<span class="s8">: </span
      ><span style="color: #000">3.0112500000</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>obj <b>= </b>fix_measurement <b>(</b>n<b
        >);</b
      >
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>temp <b>= (</b>obj.amount *
      unitConversions<b>[</b>obj.unit<b>]) </b>/ unitConversions<b>[</b>to<b
        >];</b
      >
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span>output_format <b>(</b>temp, to<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="182" height="80" alt="image" src="Image_119.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">function </span>output_format <b>(</b>amount, target<b
        >) {</b
      >
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Add the target unit to the amount, either suffixed pt, ag, mm, cm, in,
      or infixed p or c
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // The decimals, no trailing zeros
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      amount <b>= </b>amount.toFixed<b>(</b>3<b>)</b>.replace<b>(</b
      ><span class="s22">/\.?0+$</span>/,
      <span style="color: #cd1719">&#39;&#39;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">target.length </span>==
      <span class="s7">2</span>) {
      <span class="s12">// two-character unit: pt, mm, etc.</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span><span class="s9">String </span>(<span
        class="s7"
        >amount</span
      >) + <span class="s9">&#39; &#39; </span>+ <span class="s7">target</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{<span class="s12"
        >// &#39;p&#39; or &#39;c&#39;</span
      >
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // calculate the decimal
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">decimal </span>= (<span
        class="s9"
        >Number </span
      >(<span class="s7">amount</span>) -
      <span class="s7">parseInt </span>(<span class="s7">amount</span>))
      <span class="s7">* 12</span>;
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // return the integer part of the result + infix + formatted decimal
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span>parseInt <b>(</b>amount<b>) + </b>target
      <b>+ </b>decimal<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>fix_measurement <b>(</b>n<b>) {</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      n <b>= </b>n.replace<b>(</b>/ /g,
      <span style="color: #cd1719">&#39;&#39;</span><b>); </b
      ><span style="color: #007e2f">// Delete all spaces</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      n <b>= </b>n.replace <b>(</b><span class="s22">/^([pc])</span>/,
      <span style="color: #cd1719">&#39;0$1&#39;</span><b>); </b
      ><span style="color: #007e2f">// Change p3 to 0p3</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span style="color: #007e2f"
        >// Infixed &#39;p&#39; and &#39;c&#39; to decimal suffixes: 3p6 &gt;
        3.5 p </span
      >n <b>= </b>n.replace <b>(</b
      ><span class="s22">/(\d+)([pc])([.\d]+)$</span>/,
      <span class="s6">function </span><b>() {</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s6">return </span><span class="s9">Number </span>(<span
        class="s7"
        >arguments</span
      >[<span class="s7">1</span>]) + <span class="s9">Number </span>(<span
        class="s7"
        >arguments</span
      >[<span class="s7">3</span>]<span class="s7">/12</span>) +
      <span class="s7">arguments</span>[<span class="s7">2</span>]}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      );
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Split on unit
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>temp <b>= </b>n.split <b>(</b
      ><span class="s22">/(ag|cm|mm|c|pt|p|in)$</span>/<b>);</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s8">{</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">amount</span>: <span class="s9">Number </span>(<span
        class="s7"
        >temp</span
      >[<span class="s7">0</span>])<span class="s7">,</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      unit<b>: </b>temp.length <b>=== </b>1 <b>? </b>doc_units<b>() : </b
      >temp<b>[</b>1<b>]</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      };
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">documentUnits </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">switch </span>(<span class="s7">app.documents</span
      >[<span class="s7">0</span>]<span class="s7"
        >.viewPreferences.horizontalMeasurementUnits</span
      >){
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      case <span class="s7">2051106676</span><span class="s8">: </span>return
      <span class="s9">&#39;ag&#39;</span><span class="s8">; </span>case
      <span class="s7">2053336435</span><span class="s8">: </span>return
      <span class="s9">&#39;cm&#39;</span><span class="s8">; </span>case
      <span class="s7">2053335395</span><span class="s8">: </span>return
      <span class="s9">&#39;c&#39;</span><span class="s8">; </span>case
      <span class="s7">2053729891</span><span class="s8">: </span>return
      <span class="s9">&#39;in&#39;</span><span class="s8">; </span>case
      <span class="s7">2053729892</span><span class="s8">: </span>return
      <span class="s9">&#39;in&#39;</span><span class="s8">; </span>case
      <span class="s7">2053991795</span><span class="s8">: </span>return
      <span class="s9">&#39;mm&#39;</span><span class="s8">; </span>case
      <span class="s7">2054187363</span><span class="s8">: </span>return
      <span class="s9">&#39;p&#39;</span><span class="s8">; </span>case
      <span class="s7">2054188905</span><span class="s8">: </span>return
      <span class="s9">&#39;pt&#39;</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a87">Simulating keypresses</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Suppose you have a script that contains a list and a button to select all
      items in that list. The code will include an onClick function that selects
      the whole list
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      when that button is pressed. Now suppose that when the scripts starts, all
      items in the list should be selected. You don’t want to repeat the code to
      select that list on startup: you can tell that button to consider itself
      pressed by including adding the <span class="h4">.notify() </span>method
      to the button:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;listbox&#39;</span>, undefined, <b>[</b
      ><span style="color: #cd1719">&#39;one&#39;</span>,
      <span style="color: #cd1719">&#39;two&#39;</span>,
      <span style="color: #cd1719">&#39;three&#39;</span><b>]</b>,
      <b>{</b>multiselect<b>: </b><span class="s6">true</span><b>});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>select_all <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;button&#39;</span>, undefined,
      <span style="color: #cd1719">&#39;Select all&#39;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">select_all.onClick </span>=
      <span class="s6">function </span>(){
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">selected </span><span class="s8">= [];</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">list.items.length</span>;
      <span class="s7">i</span>++){ <span class="s7">selected</span>[<span
        class="s7"
        >i</span
      >] = <span class="s7">list.items</span>[<span class="s7">i</span>];
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      list.selection <b>= </b>selected<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s12"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      select_all.notify(); <span style="color: #000">w.show</span
      ><span class="s8">();</span>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="156" alt="image" src="Image_120.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The notify() method can be used for various other controls as well.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 6pt; text-indent: 0pt; text-align: left">
      <a name="a88">Adding shortcut keys to controls</a>
    </h2>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="135" height="205" alt="image" src="Image_121.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To select certain controls quickly or to move the cursor to a certain edit
      field, you can define shortcut keys for those controls. Unfortunately,
      this is Windows- only. Here is an example with several shortcut keys:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">grp </span>=
      <span class="s7">w.add</span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>st <b>= </b>grp.add<b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;&amp;Name:&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">txt </span>=
      <span class="s7">grp.add</span>(<span class="s9"
        >&quot;edittext&quot;</span
      >); <span class="s7">txt.shortcutKey </span>=
      <span class="s9">&quot;n&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">c1 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;checkbox&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;&amp;Check 1&quot;</span>);
      <span class="s7">c1.shortcutKey </span>=
      <span class="s9">&quot;c&quot;</span>; <span class="s6">var </span
      ><span class="s7">c2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;checkbox&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;C&amp;heck 1&quot;</span>);
      <span class="s7">c2.shortcutKey </span>=
      <span class="s9">&quot;h&quot;</span>; <span class="s6">var </span
      ><span class="s7">r1 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;radiobutton&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;&amp;Radio 1&quot;</span>);
      <span class="s7">r1.shortcutKey </span>=
      <span class="s9">&quot;r&quot;</span>; <span class="s6">var </span
      ><span class="s7">r2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;radiobutton&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;R&amp;adio 1&quot;</span>);
      <span class="s7">r2.shortcutKey </span>=
      <span class="s9">&quot;a&quot;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Naturally, to make it clear to the user that certain shortcut keys can be
      used, those letters should be cued. In ScriptUI you do that by placing an
      <span class="h4">&amp; </span>before the
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      letter that you want marked, which adds an underscore; see the screenshot.
      <span class="s1">Note </span>: The underscores of most controls become
      visible only after pressing the Alt key.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In almost all cases, shortcut keys have the same effect as mouse clicks.
      For instance, pressing Alt+n in the above script activates the edit field
      at Name, Alt+c toggles the first checkbox, etc.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a89">Control titles</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      So far we’ve added control titles by placing them in a separate statictext
      control, as follows:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">grp </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;group&#39;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      grp.add <b>(</b><span style="color: #cd1719">&#39;statictext&#39;</span>,
      undefined, <span style="color: #cd1719">&#39;City: &#39;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>drop <b>= </b>grp.add <b>(</b
      ><span style="color: #cd1719">&#39;dropdownlist&#39;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&#39;Lisbon&#39;</span>,
      <span style="color: #cd1719">&#39;Lancaster&#39;</span
      ><b>]); </b>drop.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="79" alt="image" src="Image_122.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      At some stage ScriptUI acquired a method to add titles. The above script
      can be changed to use that property as follows:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>drop <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;dropdownlist&#39;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&#39;Lisbon&#39;</span>,
      <span style="color: #cd1719">&#39;Lancaster&#39;</span
      ><b>]); </b>drop.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 15pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">drop.title </span>=
      <span class="s9">&#39;City:&#39;</span>; <span class="s7">w.show</span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In addition, titles can be formatted using the
      <span class="h4">titleLayout </span>property. For example, to place the
      title after the control, use this code:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>drop <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&#39;dropdownlist&#39;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&#39;Lisbon&#39;</span>,
      <span style="color: #cd1719">&#39;Lancaster&#39;</span
      ><b>]); </b>drop.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 39pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">drop.title </span>=
      <span class="s9">&#39;City&#39;</span>;
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 15pt;
        line-height: 122%;
        text-align: left;
      "
    >
      drop.titleLayout <b>= {</b>alignment<b>: [</b>&#39;right&#39;,
      &#39;center&#39;<b>]}; </b><span style="color: #000">w.show</span
      ><span class="s8">();</span>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Unfortunately, the title property is available only for controls of type
      <span class="h4">dropdownlist</span>, <span class="h4">flashplayer</span>,
      <span class="h4">iconbutton</span>, <span class="h4">image</span>, and
      <span class="h4">tabbedpanel</span>, not, crucially for
      <span class="h4">edittext </span>and
      <span class="h4">list </span>controls. Since I most often need titles for
      edittext controls, and since I always place titles on the left-hand side
      of controls, I use a different
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      method: I continue to define titles as statictext controls, and place the
      statictext as a property of a group:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">grp </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;group {_: StaticText {text: &quot;City:&quot;}}&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>drop <b>= </b>grp.add <b>(</b
      ><span style="color: #cd1719">&#39;dropdownlist&#39;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&#39;Lisbon&#39;</span>,
      <span style="color: #cd1719">&#39;Lancaster&#39;</span
      ><b>]); </b>drop.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="373" height="102" alt="image" src="Image_123.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 5pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This method uses a so-called resource string, which makes for compact code
      (see p. 106 for more details on resource strings). For consistency I use
      this method not only for edittext controls, but for all controls.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="373" height="168" alt="image" src="Image_124.jpg"
      /></span>
    </p>
    <h2 style="padding-left: 6pt; text-indent: 0pt; text-align: left">
      <a name="a90">Adding and removing controls dynamically</a>
    </h2>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="373" height="198" alt="image" src="Image_125.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="370" height="166" alt="image" src="Image_126.jpg"
      /></span>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 23pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Slightly adapted from G. Singelmann’s script, see
      <span style="color: #0080c7">here</span>.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">win </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">maingroup </span>=
      <span class="s7">win.add </span>(<span class="s9"
        >&quot;panel {orientation: &#39;column&#39;}&quot;</span
      >); <span class="s7">add_row </span>(<span class="s7">maingroup</span>);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">show_btn </span>=
      <span class="s7">win.add </span>(<span class="s9">&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;show&quot;</span>);
      <span class="s7">show_btn.onClick </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">txt </span>=
      <span class="s9">&quot;&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">n </span>= <span class="s7">0</span>;
      <span class="s7">n </span>&lt;
      <span class="s7">maingroup.children.length</span>;
      <span class="s7">n</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">txt </span>+=
      <span class="s7">maingroup.children</span>[<span class="s7">n</span>]<span
        class="s7"
        >.edit.text </span
      >+ <span class="s9">&quot;\n&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">alert </span>(<span class="s9"
        >&quot;Rows: \n&quot; </span
      >+ <span class="s7">txt</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      win.show <b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>add_row <b>(</b>maingroup<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">group </span>=
      <span class="s7">maingroup.add </span>(<span class="s9"
        >&quot;group&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      group.edit <b>= </b>group.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, <b>[</b
      ><span style="color: #cd1719">&quot;&quot;</span>,
      <span style="color: #cd1719">&quot;&quot;</span>, 200, 20<b>]</b>,
      maingroup.children.length<b>); </b>group.plus <b>= </b>group.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;+&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      group.plus.onClick <b>= </b>add_btn<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      It is possible to add and remove controls after a window has been drawn
      and have the window resized to accommodate the added and removed items.
      This is handled by the layout manager, which is invoked by the
      <span class="h4">.layout </span>function. The following script, written by
      Gerald Singelmann, illustrates this. See also some links in the resources
      in &quot;Resize windows&quot; on page 113.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      group.minus <b>= </b>group.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;-&quot;</span
      ><b>); </b>group.minus.onClick <b>= </b>minus_btn<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span class="s7">group.index </span>=
      <span class="s7">maingroup.children.length </span>-
      <span class="s7">1</span>;
      <span class="s12">win.layout.layout </span>(<span class="s6">true</span>);
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">add_btn </span><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      add_row <b>(</b>maingroup<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: -7pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">function </span><span class="s7">minus_btn </span>() {
      <span class="s7">maingroup.remove </span>(<span class="s6">this</span
      ><span class="s7">.parent</span>);
      <span class="s12">win.layout.layout </span>(<span class="s6">true</span>);
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Other aspects of windows, too, can be changed dynamically. On p. 105 is an
      example of changing a container’s orientation dynamically.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a91">Labelling controls</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Controls can be labelled so that you can later identify them. This works
      much like using script labels on objects outside of ScriptUI. When you add
      a label to a control, you in fact simply add a text property to it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      We saw an example earlier which defined two event listeners on two panels
      with radio buttons so that it seemed as if those radio buttons were in one
      group. This still required two listeners. I mentioned there that these
      panels could be grouped together, in which case one event listener would
      suffice. This would be a more complex listener in that it should be able
      to tell which panel was clicked on. This is where labels come in; the
      following script illustrates:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">radiogroup </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">panel1 </span>=
      <span class="s7">radiogroup.add </span>(<span class="s9"
        >&quot;panel&quot;</span
      >); <span class="s12">panel1.label </span>=
      <span class="s9">&quot;p1&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">5</span>;
      <span class="s7">i</span>++) {<span class="s7">panel1.add </span>(<span
        class="s9"
        >&quot;radiobutton&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Rb &quot;</span>+<span class="s7">i</span>);}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">panel2 </span>=
      <span class="s7">radiogroup.add </span>(<span class="s9"
        >&quot;panel&quot;</span
      >); <span class="s12">panel2.label </span>=
      <span class="s9">&quot;p2&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">5</span>;
      <span class="s7">i</span>++) {<span class="s7">panel2.add </span>(<span
        class="s9"
        >&quot;radiobutton&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Rb &quot;</span>+<span class="s7">i</span>);}
      <span class="s7">panel1.children</span>[<span class="s7">0</span>]<span
        class="s7"
        >.value </span
      >= <span class="s6">true</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      radiogroup.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;click&quot;</span>,
      <span class="s6">function </span><b>(</b>event<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">event.target.parent.</span
      ><span class="s12">label </span>== <span class="s9">&quot;p1&quot;</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="180" height="175" alt="image" src="Image_127.jpg"
      /></span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">panel2.children.length</span>;
      <span class="s7">i</span>++) <span class="s7">panel2.children</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.value </span>= <span class="s6">false</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      else
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">panel1.children.length</span>;
      <span class="s7">i</span>++) <span class="s7">panel1.children</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.value </span>= <span class="s6">false</span>;
    </p>
    <p class="s8" style="text-indent: 0pt; text-align: center">}</p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      } <span class="s12">// if</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 1pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      );
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The two panels are labelled using a property
      <span class="h4">label</span>, but you can use any name you like, such as
      <span class="s17">panel1.id = &quot;left&quot;</span>. The event listener
      then checks the value of the label and acts according to it: if panel1 was
      clicked, panel2’s buttons are disabled, if panel2 was clicked, panel1’s
      children are unmarked.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Labels can be used on all types of control. For a special type of label –
      <span class="h4">name </span>– see the section
      <span class="h4">Communication between windows</span>, below.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s11"
      style="
        padding-top: 3pt;
        padding-left: 11pt;
        text-indent: 0pt;
        line-height: 114%;
        text-align: left;
      "
    >
      <span class="s32"
        >// The original script #targetengine miscellaneous; </span
      ><span class="s25">var </span><span class="s26">w </span>=
      <span class="s25">new </span><span class="s26">Window </span>(<span
        class="s27"
        >&#39;palette&#39;</span
      >)
    </p>
    <p
      class="s11"
      style="
        padding-left: 11pt;
        text-indent: 26pt;
        line-height: 115%;
        text-align: left;
      "
    >
      <span class="s26">w.nobreak </span>= <span class="s26">w.add </span>(<span
        class="s27"
        >&#39;statictext {text: &quot;No break: &quot;, characters: 10, justify:
        &quot;center&quot;}&#39;</span
      >);
    </p>
    <p
      class="s11"
      style="
        padding-left: 38pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      <span class="s26">w.button </span>= <span class="s26">w.add </span>(<span
        class="s27"
        >&#39;button {text: &quot;Update&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s11"
      style="
        padding-left: 46pt;
        text-indent: -8pt;
        line-height: 111%;
        text-align: left;
      "
    >
      <span class="s25">function </span><span class="s26">updateStatus</span>()
      { <span class="s25">var </span><span class="s26">state </span>=
      <span class="s27">&#39;&#39;</span>; <span class="s25">if </span>(<span
        class="s26"
        >app.selection.length </span
      >&gt; <span class="s26">0</span>) {
    </p>
    <p
      class="s26"
      style="padding-left: 54pt; text-indent: 0pt; text-align: left"
    >
      <span class="s25">var </span>str
      <b>= </b
      >app.selection<b>[</b>0<b>]</b>.insertionPoints.everyItem<b>()</b>.noBreak.join<b
        >();</b
      >
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 54pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s25">if </span>(<span class="s26">str.indexOf </span>(<span
        class="s27"
        >&#39;false&#39;</span
      >) &gt; -<span class="s26">1 </span>&amp;&amp;
      <span class="s26">str.indexOf </span>(<span class="s27"
        >&#39;true&#39;</span
      >) &gt; -<span class="s26">1</span>) {
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 62pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">state </span>= <span class="s27">&#39;0/1&#39;</span>;
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 54pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s25">else if </span>(<span class="s26">str.indexOf </span
      >(<span class="s27">&#39;false&#39;</span>) &gt; -<span class="s26"
        >1</span
      >) {
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 62pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">state </span>= <span class="s27">&#39;0&#39;</span>;
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 54pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s25">else </span>{
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 62pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">state </span>= <span class="s27">&#39;1&#39;</span>;
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 54pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 46pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 46pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s26">w.nobreak.text </span>=
      <span class="s27">&#39;No break: &#39; </span>+
      <span class="s26">state</span>;
    </p>
    <p
      class="s11"
      style="
        padding-top: 1pt;
        padding-left: 38pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s26"
      style="
        padding-left: 38pt;
        text-indent: 0pt;
        line-height: 24pt;
        text-align: left;
      "
    >
      w.onShow <b>= </b>w.button.onClick <b>= </b>updateStatus<b>; </b>w.show<b
        >();</b
      >
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a92">Finding windows</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      While a dialog is displayed, you can’t do anything else: InDesign sits
      there waiting patiently for you to press OK (or Cancel) so it can continue
      and go about its business. But as we’ve seen, palettes are different: you
      can create a palette and then go and do something different: edit a
      document, generate an index – anything at all. Even run another script.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Palettes are useful, for instance, to display things that aren’t so easy
      to access in InDesign. The state of the No break attribute, for example,
      can be checked only by opening the Characters panel, then opening the
      panel’s flyout (it doesn’t even show in the Control panel). This is
      tedious and we would like a panel that displays the state of No break of
      the selected text and updates automatically when the state of No break
      changes.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Such a script works as follows in general: (1) create a panel; (2) create
      an event listener; and (3) create a function which, every time something
      changes in
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a document checks if that change involves No break and if it does, looks
      for the palette and updates it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      On page 15 we gave a script that can be used display the state of the No
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      break character attribute (it’s repeated here in the sidebar). That
      version doesn’t update automatically, you have to click a button to update
      the displayed state.
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The version that updates automatically using an event listener is listed
      below on the next page.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The script first checks if a window exists with the name
      <span class="h4">Attributes </span>using the
    </p>
    <h4
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      find() <span class="p">method:</span>
    </h4>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">windowName </span>=
      <span class="s9">&#39;Attributes&#39;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&#39;palette&#39;</span>, windowName<b
        >);</b
      >
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This method takes two obligatory parameters: the type of window we’re
      looking for (here, a palette) and the window’s name – you must therefore
      name a window if you want to find it later.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      If the window is not found, a new one is created and an event listener is
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      installed that calls the <span class="h4">updateStatus() </span>function
      whenever the selection changes. (To achieve that, note that we took that
      function out of the window’s definition.) If the window is found, it’s
      simply displayed and its status updated.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      With this script installed, whenever you select some text, the state of No
      break is shown in the window: 0 if No break is not applied, 1 when it is
      applied, and 0/1 to indicate a mixed state.
    </p>
    <h4
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p"
        >: to debug and edit a script that looks for an existing window, you
        need to change the name on every new run because if you don’t, the
        script uses the window set in the previous run and your changes won’t
        execute.</span
      >
    </h4>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A more elaborate version of the script, with which the no break state can
      be changed, is shown on p. 93.
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      #targetengine miscellaneous;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">windowName </span>=
      <span class="s9">&#39;Attributes&#39;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>attr <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&#39;palette&#39;</span>, windowName<b
        >);</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">attr </span>===
      <span class="s6">null</span>){
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      attr <b>= </b>createWindow <b>(</b>windowName<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      app.addEventListener <b>(</b
      ><span style="color: #cd1719">&#39;afterSelectionChanged&#39;</span>,
      updateStatus<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      attr.show<b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">updateStatus</span><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&#39;palette&#39;</span>, windowName<b
        >);</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w </span>!==
      <span class="s6">null</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      try <b>{</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">str</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">state </span>=
      <span class="s9">&#39;&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">app.selection.length </span
      >&gt; <span class="s7">0</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>str
      <b>= </b
      >app.selection<b>[</b>0<b>]</b>.textStyleRanges.everyItem<b>()</b>.noBreak.join<b
        >();</b
      >
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="119" height="69" alt="image" src="Image_128.jpg"
      /></span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">str.indexOf </span>(<span
        class="s9"
        >&#39;false&#39;</span
      >) &gt; -<span class="s7">1 </span>&amp;&amp;
      <span class="s7">str.indexOf </span>(<span class="s9">&#39;true&#39;</span
      >) &gt; -<span class="s7">1</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">state </span>= <span class="s9">&#39;0/1&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else if </span>(<span class="s7">str.indexOf </span
      >(<span class="s9">&#39;false&#39;</span>) &gt; -<span class="s7">1</span
      >) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">state </span>= <span class="s9">&#39;0&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">state </span>= <span class="s9">&#39;1&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.nobreak.text </span>=
      <span class="s9">&#39;No break: &#39; </span>+
      <span class="s7">state</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s7">catch </span>(<span class="s7">_</span>){}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>createWindow <b>(</b>title<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;palette&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.text <b>= </b>title<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.nobreak </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;statictext {text: &quot;No break: &quot;, characters:
        10}&#39;</span
      >); <span class="s7">w.onShow </span>=
      <span class="s7">updateStatus</span>;
    </p>
    <p
      class="s6"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      return <span class="s7">w</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a93">Finding controls</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Apart from windows, you can find controls inside windows as well. Like
      finding windows, you have to name a control if you want to find it later.
      For example, suppose you have a palette that defines an edittext control,
      as in:
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      #targetengine &quot;session&quot;;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>console <b>= </b>createConsole<b>();</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">createConsole </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;palette&quot;</span>,
      <span style="color: #cd1719">&quot;Console&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;edittext&quot;</span>,
      <b>[</b>0,0,400,400<b>]</b>,
      <span style="color: #cd1719">&quot;&quot;</span>, <b>{</b>multiline<b
        >: </b
      ><span class="s6">true</span>, name<b>: </b
      ><span style="color: #cd1719">&quot;consoleText&quot;</span><b>});</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">w</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There’s no need to display the window yet, we do that when we actually
      access it. A function in the same script or one in a different script gets
      access to the name control as follows:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">function </span>writeConsole <b>(</b>txt<b>) {</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&quot;palette&quot;</span>,
      <span style="color: #cd1719">&quot;Console&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w </span>!==
      <span class="s6">null</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(!<span class="s7">w.visible</span>)
      <span class="s7">w.show</span>();
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.findElement </span>(<span class="s9"
        >&quot;consoleText&quot;</span
      >)<span class="s7">.text </span>= <span class="s7">txt</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This function locates the palette using
      <span class="h4">Window.find()</span>, using two obligatory parameters:
      the window type (here, a palette) and the window’s title. Then, if the
      palette was found, it checks to make sure that the console is visible, and
      if it isn’t, it displays it. Finally, the function uses
      <span class="h4">findElement() </span>to locate the edittext control and
      adds the message to whatever is in the text field.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a94">Closing windows</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Remember that in a script that uses a palette, you need to include the
    </p>
    <h4
      style="
        padding-top: 1pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      #targetengine
      <span class="p"
        >directive. In other words, a palette is always created in</span
      >
    </h4>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a persistent engine. Now, when a script that runs in a persistent engine
      finishes, any variables created by the script remain in memory (though
      accessible only from within that engine). The same goes for palettes: even
      if you close a palette using <span class="h4">close()</span>, it remains
      in memory.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You should therefore always check if a particular palette exists before
      you create it, along the following lines:
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">createMessageWindow </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&quot;palette&quot;</span>,
      <span style="color: #cd1719">&quot;Message&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w </span>==
      <span class="s6">null</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      w <b>= </b><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&quot;palette&quot;</span>,
      <span style="color: #cd1719">&quot;Message&quot;</span><b>); </b>w.mess
      <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>,
      <b>[</b>0,0,300,20<b>]</b>,
      <span style="color: #cd1719">&quot;&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      We use the <span class="h4">Window.find() </span>method to locate a
      particular palette, and if we can’t find it, we create it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      All this applies to dialogs, too, but only if you create them in a
      persistent engine. A dialog that’s closed in a script that does not run in
      a persistent engine is deleted when you close it.
    </p>
    <p
      class="s11"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note<span class="s10"
        >: Fonts and colours cannot be changed in InDesign CC and later.</span
      >
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a95">Fonts</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The default type size used in ScriptUI windows is much too small for me,
      so
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="136" height="114" alt="image" src="Image_129.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      I usually make that bigger. The typeface doesn’t bother me (it’s usually
      Tahoma or something similar), it’s size that matters. The easiest way to
      set a control’s type size is as follows:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">button1 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Default&quot;</span>);
      <span class="s7">button2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Bigger&quot;</span>);
      <span class="s7">button2.</span><span class="s12">graphics.font </span>=
      <span class="s9">&quot;dialog:18&quot;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This sets the text of the second button’s type size to 18, using the
      window’s default font. To change the typeface as well, use the following:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">button2.graphics.font </span>=
      <span class="s9">&quot;Tahoma:18&quot;</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      And to change the font style too, for example, to bold, use this
      construction:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">button2.graphics.font </span>=
      <span class="s9">&quot;Tahoma-Bold:18&quot;</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Another, more elaborate, way of setting a window’s font is the
      <span class="h4">newFont()</span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      method (because it’s more elaborate I rarely use it). Here is an example:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      button2.graphics.font <b>= </b
      ><span style="color: #007e2f">ScriptUI.newFont </span><b>(</b
      ><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Bold&quot;</span>, 18<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a href="http://www.indiscripts.com/" class="s33" target="_blank"
        >Font names are treated differently on Macs and PCs See Marc Autret’s
        article at </a
      >www.indiscripts.com/ post/2012/05/scriptui-fonts-facts
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      This type of construction can be used to set the typeface as well:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      button2.graphics.font <b>= </b>ScriptUI.newFont <b>(</b
      ><span style="color: #cd1719">&quot;Verdana&quot;</span>,
      <span style="color: #cd1719">&quot;Bold&quot;</span>, 18<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Both constructions can be used to change the typeface:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">button2.graphics.font </span>=
      <span class="s9">&quot;Verdana&quot;</span>;
      <span class="s7">button2.graphics.font </span>=
      <span class="s7">ScriptUI.newFont </span>(<span class="s9"
        >&quot;Verdana&quot;</span
      >);
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      But this resets the style and the type size to the default. Therefore, if
      you want to change just the typeface, you need to store the font’s size
      and style and use those values when you change the face:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>ft <b>= </b>button2.graphics.font<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">button2.graphics.font </span>=
      <span class="s9">&quot;Verdana-&quot; </span>+
      <span class="s7">ft.style </span>+ <span class="s9">&quot;:&quot; </span>+
      <span class="s7">ft.size</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h4
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p"
        >: For the font name you must use the font’s PostScript name, which is
        not necessarily the same as the menu name used in InDesign’s or
        Photoshop’s</span
      >
    </h4>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      interface. If setting a font throws an error, chances are that that font’s
      PostScript name is not the same as its menu name. For example, the
      PostScript name of the Gill Sans family is GillSans. To find a font’s
      PostScript name, run this one-line script in the ESTK with the Console
      visible:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">app.fonts.item </span>(<span class="s9"
        >&quot;Gill Sans&quot;</span
      >)<span class="s7">.postscriptName</span>;
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h4
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p"
        >: ScriptUI recognises just four style names: Regular, Italic, Bold, and
        Bold- Italic.</span
      >
    </h4>
    <h4
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p">: the font object has a (read-only) property </span
      >substitute<span class="p"
        >, but it’s not clear what it does. We can guess that it’s something
        like ‘if font x can’t be found, use font y’, but it doesn’t work.</span
      >
    </h4>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Unfortunately, you can set fonts for one control at a time only. If you
      want to apply a font to all elements in a window or in a group or panel,
      you need to process that control. I use this function:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">function </span>set_font <b>(</b>control, font<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt;
      <span class="s7">control.children.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s9">&quot;GroupPanel&quot;</span
      ><span class="s7">.indexOf </span>(<span class="s7">control.children</span
      >[<span class="s7">i</span>]<span class="s7">.constructor.name</span>)
      &gt; -<span class="s7">1</span>)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      set_font <b>(</b>control.children<b>[</b>i<b>]</b>, font<b>);</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      else
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      control.children<b>[</b>i<b>]</b>.graphics.font <b>= </b>font<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      You use it to apply a font to all elements in a window:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">group1 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>button1 <b>= </b>group1.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;B1&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>button2 <b>= </b>group1.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;B2&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">group2 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>button1 <b>= </b>group2.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;B3&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">button2 </span>=
      <span class="s7">group2.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;B4&quot;</span>);
      <span class="s12">set_font </span>(<span class="s12">w</span
      ><span class="s7">, </span><span class="s9">&quot;Tahoma:18&quot;</span>);
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="174" height="120" alt="image" src="Image_130.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="174" height="114" alt="image" src="Image_131.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Or to just one group, as in this example:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      set_font <b>(</b><span style="color: #007e2f">group1</span>,
      <span style="color: #cd1719">&quot;Tahoma:18&quot;</span><b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h4
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note<span class="p"
        >: On Windows you can’t change the appearance of a window’s title.</span
      >
    </h4>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="177" height="211" alt="image" src="Image_132.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="183" height="216" alt="image" src="Image_133.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Unfortunately, everything to do with fonts stopped working in InDesign/
      ScriptUI CC. This is a mild annoyance in many cases, but it makes some
      scripts virtually useless. A script I use from time to time to enter
      polytonic Greek, for example, works by combining keyboard presses to build
      up a character. In CS6 and earlier that gave you a good idea, as shown on
      the right. In CC and
    </p>
    <p
      class="s2"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a href="http://www.kahrel.plus.com/indesign/" class="a" target="_blank"
        >later, all you get as a preview is a puny little insect, as shown on
        the far right. (If you&#39;re interested in the script, it’s here: </a
      >http://www.kahrel.plus.com/indesign/ compose-greek.html<span
        style="color: #000"
        >.) It is hoped that ScriptUI’s font handling will be restored.</span
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a96">Colours</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Colours, like fonts, are part of ScriptUI’s graphics controls. But whereas
      fonts are quite well manageable, with colours, brushes, and other graphics
      features things start to get a bit complicated. We&#39;re not greatly
      helped by the almost complete absence of any clear examples of how to use
      the various graphics
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      elements. InDesign/the ESTK comes with two scripts that have examples of
      how to set the foreground and background colours, but that’s about it.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The example below shows how to set font, style, size of controls, but also
      their foreground and background colours. The example was distilled from
      two sample scripts, ColorSelector.jsx and ColorPicker.jsx (to locate them,
      search your hard disk; their location differs depending on operating
      system and InDesign version). These scripts are instructive, and also
      useful to find colour values. (Another good way of finding colour values
      is running Rapid ScriptUI; see the resource section, below, for details.)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span>s <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Static&quot;</span><b>); </b
      ><span class="s6">var </span>e <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Edit&quot;</span><b>); </b
      ><span class="s6">var </span>b <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Button&quot;</span><b>);</b>
    </p>
    <p
      class="s12"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      // The window’s backround
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.graphics.backgroundColor <b>= </b>w.graphics.newBrush
      <b>(</b>w.graphics.BrushType.SOLID_COLOR, <b>[</b>0.5, 0.0, 0.0<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span style="color: #007e2f"
        >// Font and its colour for the first item, statictext </span
      >s.graphics.font <b>= </b>ScriptUI.newFont <b>(</b
      ><span style="color: #cd1719">&quot;Helvetica&quot;</span>,
      <span style="color: #cd1719">&quot;Bold&quot;</span>, 30<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      s.graphics.foregroundColor <b>= </b>s.graphics.newPen
      <b>(</b>w.graphics.PenType.SOLID_COLOR, <b>[</b>0.7, 0.7, 0.7<b>]</b>, 1<b
        >);</b
      >
    </p>
    <p
      class="s12"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      // Font and colours for the second item, edittext
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      e.graphics.font <b>= </b>ScriptUI.newFont <b>(</b
      ><span style="color: #cd1719">&quot;Letter Gothic Std&quot;</span>,
      <span style="color: #cd1719">&quot;Bold&quot;</span>, 30<b>); </b
      >e.graphics.foregroundColor <b>= </b>e.graphics.newPen
      <b>(</b>e.graphics.PenType.SOLID_COLOR, <b>[</b>1, 0,
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      0<b>]</b>, 1<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      e.graphics.backgroundColor <b>= </b>e.graphics.newBrush
      <b>(</b>e.graphics.BrushType.SOLID_COLOR, <b>[</b>0.5, 0.5, 0.5<b>]);</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="187" alt="image" src="Image_134.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span style="color: #007e2f"
        >// Font for the tird control, a button. Can’t set colours in buttons </span
      >b.graphics.font <b>= </b>ScriptUI.newFont <b>(</b
      ><span style="color: #cd1719">&quot;Minion Pro&quot;</span>,
      <span style="color: #cd1719">&quot;Italic&quot;</span>, 30<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The method that sets the background colours –
      <span class="h4">newBrush() </span>– takes two parameters: the type
      (SOLID_COLOR; the other type, THEME_COLOR, appears not to work if you
      target InDesign) and the colour as an array of three numbers between 0 and
      1 (these are RGB colours). The method for setting the foreground colours
      here – <span class="h4">newPen() </span>– takes an additional parameter to
      set the line width, but as we&#39;re using it for applying a colour to a
      font, line width isn’t relevant here (though it must be specified).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      It appears to be impossible to set the colour of buttons. This has been
      discussed in Adobe’s scripting forum, where Dirk Becker provided a
      <span style="color: #0080c7">work-around</span>.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      For a funny and educational application of fonts and colours, see
      <span class="h4">milligram</span>’s take on
      <span style="color: #0080c7">progress bars</span>. For an interesting
      example of setting some colour interactively, see
      <span style="color: #0080c7">Xavier</span>’s script.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a97">Rules</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      Rules can be drawn in two ways. You can use ScriptUI’s graphics object,
      which
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="198" height="129" alt="image" src="Image_135.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      is versatile but complicated, and narrow panels to mimic horizontal and
      vertical rules, which is much simpler, if rather primitive. You can draw
      them at a specific point, as in this example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;panel&quot;</span>,
      <b>[</b>0,0,200,3<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 3pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;panel&quot;</span>,
      <b>[</b>0,20,200,23<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 8pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;panel&quot;</span>,
      <b>[</b>100,0,103,50<b>]);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first line, [0,0,200,3], sets a panel 200 pixels wide and 3 pixels
      high, so in effect it draws a rule 3 pixels wide; the third line creates a
      50-pixel tall and
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      3-pixel wide rule. Narrow tall panels create vertical rules, shallow wide
      panels, horizontal ones.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Setting rules with absolute values has a disadvantage in that when you
      change the window, you almost always have to change the rules as well, and
      that can be finicky business. To avoid all that you can use ScriptUI’s
      layout manager (always the preferred method): using the alignment
      attribute <span class="h4">fill</span>, rules can be made to resize with
      adjacent panels. Once set up, you have a flexible system.
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      Here is a schematic example.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="526" height="475" alt="image" src="Image_136.png"
      /></span>
    </p>
    <p
      class="s8"
      style="
        padding-left: 8pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >); <span class="s7">w.alignChildren </span>= [<span class="s9"
        >&quot;fill&quot;</span
      ><span class="s7">,</span><span class="s9">&quot;fill&quot;</span>];
      <span class="s6">var </span><span class="s7">g1 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-left: 16pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      g1.alignChildren <b>= [</b
      ><span style="color: #cd1719">&quot;fill&quot;</span>,<span
        style="color: #cd1719"
        >&quot;fill&quot;</span
      ><b>];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 16pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">p1 </span>=
      <span class="s7">g1.add </span>(<span class="s9">&quot;panel&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 16pt;
        text-indent: 8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">p1.preferredSize </span>= [<span class="s7">100, 50</span
      >]; <span class="s12">// Use [100,100] to get the second scr. shot </span
      ><span class="s7">g1.separator </span>=
      <span class="s7">g1.add </span>(<span class="s9">&quot;panel&quot;</span
      >); <span class="s12">// This shows as a vertical line</span>
    </p>
    <p
      class="s12"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      // This is the line’s width
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      g1.separator.minimumSize.width <b>= </b>g1.separator.maximumSize.width
      <b>= </b>3<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 16pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">p2 </span>=
      <span class="s7">g1.add </span>(<span class="s9">&quot;panel&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      p2.preferredSize <b>= [</b>100, 50<b>];</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p class="s8" style="text-indent: 0pt; text-align: left">
      <span class="s7">w.separator </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;panel&quot;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p class="s12" style="text-indent: 0pt; text-align: left">
      // This one shows as a horizontal line
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      class="s7"
      style="
        padding-left: 15pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span style="color: #007e2f"
        >// It says &quot;height&quot;, but is again the line’s width! </span
      >w.separator.minimumSize.height <b>= </b>w.separator.maximumSize.height
      <b>= </b>3<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 15pt;
        text-indent: -8pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">g2 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
      <span class="s7">g2.alignChildren </span>= [<span class="s9"
        >&quot;fill&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;fill&quot;</span>];
      <span class="s6">var </span><span class="s7">p3 </span>=
      <span class="s7">g2.add </span>(<span class="s9">&quot;panel&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 15pt;
        text-indent: 8pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span class="s7">p3.preferredSize </span>= [<span class="s7">100, 50</span
      >]; <span class="s12">// Use [200,50] to get the second scr. shot </span
      ><span class="s7">g2.separator </span>=
      <span class="s7">g2.add </span>(<span class="s9">&quot;panel&quot;</span
      >); <span class="s12">// This shows as vertical a line </span
      ><span class="s7">g2.separator.minimumSize.width </span>=
      <span class="s7">g2.separator.maximumSize.width </span>=
      <span class="s7">3</span>; <span class="s6">var </span
      ><span class="s7">p4 </span>= <span class="s7">g2.add </span>(<span
        class="s9"
        >&quot;panel&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-left: 23pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      p4.preferredSize <b>= [</b>100, 50<b>];</b>
    </p>
    <p class="s7" style="padding-top: 2pt; text-indent: 0pt; text-align: left">
      w.show <b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="217" height="166" alt="image" src="Image_137.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="297" height="206" alt="image" src="Image_138.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 11pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Because the window and the two groups are set to alignment
      <span class="h4">fill</span>, when you change an element in a group the
      rules change accordingly. To see this, change the first bold
      <span class="h4">[100,50] </span>in the above script to [100,100], and the
      second one to [200,50], to get the result in the second screenshot.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      (Note: the convoluted w.separator.minimumSize.height = w.separator.
      maximumSize.height is necessary because objects in ScriptUI don’t have
      separate widths and heights that you can set. So we say that the rules
      must be at least and at most 3 pixels wide, which is to say exactly 3
      pixels.)
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a98">Callbacks</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Callbacks are built-in methods that monitor events in a dialog: whether
      buttons are clicked, or a list item is selected, if an edit field is
      exited, etc. In the CS5 version of the Tools Guide they&#39;re listed on
      pp. 83 and 147. The most frequently used callback is probably
      <span class="h4">onClick</span>, which is illustrated in the following
      script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>b1 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Show this&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>b2 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Show that&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s12">b1.onClick </span>= <span class="s6">function </span>()
      {<span class="s7">$.writeln </span>(<span class="s6">this</span
      ><span class="s7">.text </span>+
      <span class="s9">&quot; clicked.&quot;</span>)}
      <span class="s12">b2.onClick </span>= <span class="s6">function </span>()
      {<span class="s7">$.writeln </span>(<span class="s6">this</span
      ><span class="s7">.text </span>+
      <span class="s9">&quot; clicked.&quot;</span>)}
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="107" alt="image" src="Image_139.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script displays the dialog in the screenshot; press a button and it
      prints the name of the button in the console.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The body of the callback’s function – which for the b1 button in this
      example is just
      <span class="h4">{alert (this.text + &quot; clicked.&quot;)} </span>– can
      be a function of any complexity. The principle of the other callbacks is
      essentially the same.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another frequent callback is <span class="h4">onChange</span>, which
      applies to several types of control. The first example shows how you can
      monitor an edit field.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >); <span class="s6">var </span><span class="s7">e1 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      >); <span class="s6">var </span><span class="s7">e2 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      >); <span class="s7">e1.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span class="s7">e1.characters </span>=
      <span class="s7">e2.characters </span>= <span class="s7">20</span>;
      <span class="s12">e1.onChange </span>= <span class="s6">function </span>()
      {<span class="s7">e2.text </span>= <span class="s7">e1.text</span>}
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="160" height="104" alt="image" src="Image_140.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script displays a window with two empty edit fields. Type something in
      the first field; when you press Enter/Return or Tab, whatever you typed in
      the first field is (in this example) copied into the second one. Note that
      onChange is not triggered until you leave the edittext control. To monitor
      activity while something is entered, you need a different handler,
      <span class="h4">onChanging</span>:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >); <span class="s6">var </span><span class="s7">e1 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      >); <span class="s6">var </span><span class="s7">e2 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      >); <span class="s7">e1.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 121%;
        text-align: left;
      "
    >
      <span class="s7">e1.characters </span>=
      <span class="s7">e2.characters </span>= <span class="s7">20</span>;
      <span class="s7">e1.onChanging </span>=
      <span class="s6">function </span>() {<span class="s7">e2.text </span>=
      <span class="s7">e1.text</span>}
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="160" height="104" alt="image" src="Image_141.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Now the second edit field is filled while you type.
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Lists, too, can be monitored. The following script displays a three-item
      list, preselecting the first item. Click a list item and it’s name is
      printed in the console.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span
      ><b>]); </b>list.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s12">list.onChange </span>=
      <span class="s6">function </span>() {<span class="s7">$.writeln </span
      >(<span class="s6">this</span><span class="s7">.selection.text </span>+
      <span class="s9">&quot; selected.&quot;</span>)}
      <span class="s7">w.show </span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Clicking anywhere in the list counts as a change in the list.
      Double-clicking is often useful as well:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>list <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;listbox&quot;</span>, undefined,
      <b>[</b><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span
      ><b>]); </b>list.selection <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s12">list.onDoubleClick </span>=
      <span class="s6">function </span>() {<span class="s7">$.writeln </span
      >(<span class="s6">this</span><span class="s7">.selection.text </span>+
      <span class="s9">&quot; double-clicked.&quot;</span>)}
      <span class="s7">w.show </span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 18pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a99">Adding callbacks in loops</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Windows can be populated using loops. For example, you could add series of
      buttons in a loop. Less intuitively, you can add callbacks in loops, too.
      The following script exemplifies this. It uses a loop to add a bunch of
      buttons to a window, and then it supplements those buttons with a gaggle
      of callbacks.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The idea of the script is to facilitate entering accents from the range
      <span class="s17">Combining diacritical marks</span>, and in effect the
      script is an extension, in a way, of the
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Glyph panel. The Glyph panel can show several Unicode ranges, but not the
      combining diacriticals, and as I found myself hunting down those
      diacritics I thought it useful to have them in a panel.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first loop creates an object, <span class="h4">buttons</span>, adding
      buttons, setting the type size of each button and each button’s helptip.
      The helptip shows the Unicode value associated with a button and of the
      character inserted when you press the selected button.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The second loop installs a callback for every button. These callbacks are
      responsible for inserting the character associated with the pressed
      button. Note that in its current form, the window is dismissed when you
      click a button. If you would like the window to stay on the screen, all
      you have to do is to remove <span class="h4">w.close(); </span>in the
      one-but-last line.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      (The example has become pretty useless because the button text can no
      longer be resized, but it does show how loops can be used to populate a
      window and to install callbacks.)
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="517" height="335" alt="image" src="Image_142.jpg"
      /></span>
    </p>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Note: from CS6, it is no longer necessary to set
      <span class="s11">resizeable </span>to <span class="s11">true </span>in
      order to display the palette’s title. Thus, the window can be created with
      its title shown as follows:
    </p>
    <p
      class="s7"
      style="
        padding-top: 9pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;palette&quot;</span>,
      <span style="color: #cd1719">&quot;0x0300-0x036F&quot;</span><b>);</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      #targetengine session;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      try <b>{</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">app.selection</span>[<span
        class="s7"
        >0</span
      >] <span class="s6">instanceof </span
      ><span class="s7">InsertionPoint</span>)
      <span class="s7">diacritics_panel </span>();
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      } <span class="s7">catch </span>(<span class="s7">_</span>) {
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Not interested in errors.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      };
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">diacritics_panel </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;palette&quot;</span>,
      <span style="color: #cd1719">&quot;0x0300-0x036F&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>bsize <b>= [</b>0,0,40,40<b>]; </b
      ><span style="color: #007e2f">// Size of the buttons</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">row, key, i, j, buttons </span
      ><span class="s8">= {};</span>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // The ranges make up the rows
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>ranges
      <b>= [[</b
      >0x0300,0x030F<b>]</b>,<b>[</b>0x0310,0x031F<b>]</b>,<b>[</b>0x0320,0x032F<b>]</b>,
      <b>[</b
      >0x0330,0x033F<b>]</b>,<b>[</b>0x0340,0x034F<b>]</b>,<b>[</b>0x0350,0x035F<b>]</b>,<b>[</b>0x0360,0x036F<b
        >]];</b
      >
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">for </span>(<span class="s7">i </span>=
      <span class="s7">0</span>; <span class="s7">i </span>&lt;
      <span class="s7">ranges.length</span>; <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">row </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;group&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s7">j </span>=
      <span class="s7">ranges</span>[<span class="s7">i</span>][<span class="s7"
        >0</span
      >]; <span class="s7">j </span>&lt;= <span class="s7">ranges</span>[<span
        class="s7"
        >i</span
      >][<span class="s7">1</span>]; <span class="s7">j</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">key </span>= (<span class="s9">&quot;0&quot;</span>+<span
        class="s7"
        >j.to</span
      ><span class="s9">String</span>(<span class="s7">16</span>))<span
        class="s7"
        >.toUpperCase</span
      >();
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buttons<b>[</b>key<b>] = </b>row.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, bsize,
      <span style="color: #cd1719">String</span>.fromCharCode <b>(</b>j<b
        >));</b
      >
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buttons<b>[</b>key<b>]</b>.helpTip <b>= </b>key<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      for <span class="s8">(</span><span class="s7">i </span>in
      <span class="s7">buttons</span><span class="s8">) {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s7">buttons</span>[<span class="s7">i</span>]<span class="s7"
        >.onClick </span
      >= <span class="s6">function </span>() {
      <span class="s7">app.selection</span>[<span class="s7">0</span>]<span
        class="s7"
        >.contents </span
      >= <span class="s6">this</span><span class="s7">.text</span>;
      <span class="s7">w.close </span>();
    </p>
    <p
      class="s8"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 5pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a100">Event handlers</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Event handlers are comparable to callbacks in that they monitor what
      happens in a dialog. They are more flexible, though with this added
      flexibility comes some complexity. Event handlers are discussed from p.
      149 of the Tools Guide. Two examples here for illustration: one that
      monitors the mouse, another that listens to the keyboard.
    </p>
    <h3
      style="
        padding-top: 4pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a101">Monitoring the mouse</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first example shows how to monitor specific mouse events and some
      environmental states:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 233%;
        text-align: left;
      "
    >
      <span class="s6">var </span>b <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;button&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Qwerty&quot;</span><b>); </b>b.<span
        style="color: #007e2f"
        >addEventListener </span
      ><b>(</b><span style="color: #cd1719">&quot;click&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>) {</b>whatsup <b>(</b>k<b
        >)});</b
      >
    </p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>whatsup <b>(</b>p<b>) {</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">p.button </span>==
      <span class="s7">2</span>) {<span class="s7">$.writeln </span>(<span
        class="s9"
        >&quot;Right-button clicked.&quot;</span
      >)}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">p.altKey</span>) {<span
        class="s7"
        >$.writeln </span
      >(<span class="s9">&quot;Alt key pressed.&quot;</span>)}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9">&quot;X: &quot; </span
      >+ <span class="s7">p.clientX</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9">&quot;Y: &quot; </span
      >+ <span class="s7">p.clientY</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="78" alt="image" src="Image_143.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      The event handler monitors the mouse and the button and whenever you click
      the button, it executes the function defined in the handler, and can be
      seen as <span class="h4">onClick </span>with some more possibilities.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      The four properties whose value the script prints in the console are just
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a selection; check the Tools Guide (p. 153) for a complete list. The
      example shows that you can check whether the right button was clicked and
      whether the Alt key was pressed when you clicked.
      <span class="h4">clientX </span>and <span class="h4">clientY </span>return
      values that tell where on the control you clicked, so that you can tell,
      for example, whether you clicked the left or the right half of the button.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: justify"
    >
      <a name="a102">Determining which button is pressed</a>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="229" height="203" alt="image" src="Image_144.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      If you have a group of buttons, you don’t want to list a battery of
      onClick callbacks to find which button was pressed. Instead, you can
      define an event listener which monitors the group and if any of the
      buttons is pressed, returns some propert of the button.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">buttongroup </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;group&quot;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>panel1 <b>= </b>buttongroup.add <b>(</b
      ><span style="color: #cd1719">&quot;panel&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Buttons&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">5</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      panel1.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
      undefined, <span style="color: #cd1719">&quot;Button &quot; </span
      ><b>+ </b>i<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>panel2 <b>= </b>buttongroup.add <b>(</b
      ><span style="color: #cd1719">&quot;panel&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Knoppen&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">5</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      panel2.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
      undefined, <span style="color: #cd1719">&quot;Button &quot; </span
      ><b>+ </b>i<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buttongroup.<span style="color: #007e2f">addEventListener</span><b>(</b
      ><span style="color: #cd1719">&#39;click&#39;</span>, button_pressed<b
        >);</b
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>button_pressed <b>(</b>e<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">e.target.type </span>==
      <span class="s9">&quot;button&quot;</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">e.target.text </span>+
      <span class="s9">&quot; from panel &quot; </span>+
      <span class="s7">e.target.parent.text</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The type-check is necessary because you could have clicked the panel just
      outside a button. If you do that,
      <span class="h4">ev.target.type </span>would return
      <span class="h4">panel</span>, and the check allows you to ignore
      everything that’s not a button.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      For an excellent article on mouse events, see Marc Autret’s
      <span style="color: #0080c7">Note on ScriptUI mouse events</span>.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a103">Listening to the keyboard</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To listen to the keyboard, define an event listener using the keyboard
      event <span class="h4">keydown</span>. Here is an example that prints some
      properties of the keyboard event (this doesn’t work properly when you
      target the ESTK):
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -7pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >); <span class="s6">var </span><span class="s7">edit </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      >); <span class="s7">edit.active </span>= <span class="s6">true</span>;
      <span class="s7">edit.characters </span>= <span class="s7">30</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      w.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>kd<b>) {</b>pressed <b>(</b>kd<b
        >)});</b
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>pressed <b>(</b>k<b>) {</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      $.writeln <b>(</b>k.keyName<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      $.writeln <b>(</b>k.keyIdentifier<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">k.shiftKey </span>?
      <span class="s9">&quot;Shift pressed&quot; </span>:
      <span class="s9">&quot;Shift not pressed&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">k.altKey </span>?
      <span class="s9">&quot;Alt pressed&quot; </span>:
      <span class="s9">&quot;Alt not pressed&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">k.ctrlKey </span>?
      <span class="s9">&quot;Ctrl pressed&quot; </span>:
      <span class="s9">&quot;Ctrl not pressed&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Keys have (among other things) a name (<span class="h4">A</span>,
      <span class="h4">B</span>, <span class="h4">Space</span>,
      <span class="h4">Minus</span>, <span class="h4">Shift</span>), an
      identifier (the hex value of the key in the form U+0000 or its name in the
      case of keys like Shift), and properties that return the state of the
      Shift, Ctrl, and Alt keys.
    </p>
    <p
      class="s14"
      style="
        padding-top: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a104"
        >Using the up and down arrow keys to change numerical data</a
      >
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In another example we can do something about the paucity of input methods.
      The <span class="h4">edittext </span>control accepts just text, but with
      an event listener you can make this contol behave a bit more like
      numerical input fields in which you can increment or decrement values by
      pressing the up and down arrows. Holding the shift key down while pressing
      an arrow key increases the step value by 10. Here is the script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>e1 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;1&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">e2 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;1&quot;</span>);
      <span class="s7">e1.characters </span>=
      <span class="s7">e2.characters </span>= <span class="s7">3</span>;
      <span class="s7">e1.active </span>= <span class="s6">true</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>handle_key <b>(</b>key, control<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">step</span><span class="s8">;</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      key.shiftKey <b>? </b>step <b>= </b>10 <b>: </b>step <b>= </b>1<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">switch </span>(<span class="s7">key.keyName</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">case </span><span class="s9">&quot;Up&quot;</span>:
      <span class="s7">control.text </span>=
      <span class="s9">String</span>(<span class="s9">Number</span>(<span
        class="s7"
        >control.text</span
      >)+<span class="s7">step</span>); <span class="s6">break</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">case </span><span class="s9">&quot;Down&quot;</span>:
      <span class="s7">control.text </span>=
      <span class="s9">String</span>(<span class="s9">Number</span>(<span
        class="s7"
        >control.text</span
      >)-<span class="s7">step</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s12">// handle_key</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      e1.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>) {</b>handle_key <b>(</b>k,
      <span class="s6">this</span><b>);});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      e2.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>) {</b>handle_key <b>(</b>k,
      <span class="s6">this</span><b>);});</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="114" alt="image" src="Image_145.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The convoluted
      <span class="h4">String(Number(control.text)+step) </span>is necessary
      because we can do arithmatic only with numbers while the edittext control
      accepts just text, so we’ll need to convert between numbers and text all
      the time. Anyway, the function <span class="h4">handle_key() </span>that’s
      called by the event listener first checks if the Shift key is pressed; if
      it is, the step value is set to 10, else it’s set to 1.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Measurement controls are just a slight complication of this. The following
      script adds measurement units to an input field. As you can see, it’s now
      becoming
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a general JavaScript issue. The script handles both bare numbers and
      numbers followed by a measurement unit such as
      <span class="h4">mm </span>or <span class="h4">pt</span>.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>e1 <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;1 mm&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 233%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">e2 </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;edittext&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;1 pt&quot;</span>);
      <span class="s7">e1.characters </span>=
      <span class="s7">e2.characters </span>= <span class="s7">5</span>;
      <span class="s7">e1.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>handle_key <b>(</b>key, control<b>) {</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">step</span><span class="s8">;</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      key.shiftKey <b>? </b>step <b>= </b>10 <b>: </b>step <b>= </b>1<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">switch </span>(<span class="s7">key.keyName</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">case </span><span class="s9">&quot;Up&quot;</span>:
      <span class="s7">control.text </span>=
      <span class="s7">update </span>(<span class="s7">control.text, step</span
      >); <span class="s6">break</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">case </span><span class="s9">&quot;Down&quot;</span>:
      <span class="s7">control.text </span>=
      <span class="s7">update </span>(<span class="s7">control.text, </span
      >-<span class="s7">step</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>update <b>(</b>str, incr<b>) {</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      try <b>{</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">array </span>=
      <span class="s7">str.split</span>(<span class="s9">&quot; &quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">num </span>=
      <span class="s9">String </span>(<span class="s9">Number </span>(<span
        class="s7"
        >array</span
      >[<span class="s7">0</span>])+<span class="s7">incr</span>);
      <span class="s6">if </span>(<span class="s7">array.length </span>==
      <span class="s7">2</span>) {<span class="s7">num </span>+=
      <span class="s9">&quot; &quot;</span>+<span class="s7">array</span>[<span
        class="s7"
        >1</span
      >];} <span class="s6">return </span><span class="s7">num</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      } <span class="s7">catch </span>(<span class="s7">_</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">alert </span>(<span class="s9"
        >&quot;Illegal input&quot;</span
      >); <span class="s6">return </span><span class="s7">str</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      e1.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>) {</b>handle_key <b>(</b>k,
      <span class="s6">this</span><b>)});</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      e2.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>) {</b>handle_key <b>(</b>k,
      <span class="s6">this</span><b>)});</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="136" height="114" alt="image" src="Image_146.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script simply hard-wires the units mm and pt, it doesn’t look at the
      document. Nor can you enter something like <span class="s17">4cm </span>in
      the first field, to be displayed as <span class="s17">40 mm</span>. For a
      more Indesign-like approach, see the example on p. 68.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a105">Selecting items in dropdowns using the keyboard</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      An example of a concrete application is the slight improvement of
      ScriptUI’s <span class="h4">dropdown </span>control. In most dropdown
      lists, you can press a key to select an item in the dropdown that starts
      with that key’s corresponding letter (type <span class="h4">t </span>and
      the first item starting with a t is displayed in the dropdown’s control),
      but unfortunately that doesn’t work in ScriptUI. The remedy is to attach
      an event
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 26pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>numbers <b>= [</b
      ><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span>,
      <span style="color: #cd1719">&quot;thirty&quot;</span>,
      <span style="color: #cd1719">&quot;hundred&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Drop-down select&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>ddown <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      numbers<b>); </b>ddown.minimumSize.width <b>= </b>200<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">ddown.selection </span>= <span class="s7">0</span>;
      <span class="s7">ddown.active </span>= <span class="s6">true</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      ddown.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      k <b>= </b>k.keyName.toLowerCase<b>();</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>i <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">while </span>(<span class="s7">i </span>&lt;
      <span class="s7">numbers.length</span>-<span class="s7">1 </span
      >&amp;&amp; <span class="s7">numbers</span>[<span class="s7">i</span
      >]<span class="s7">.charAt</span>(<span class="s7">0</span>)<span
        class="s7"
        >.toLowerCase</span
      >() != <span class="s7">k</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {++<span class="s7">i</span>;}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">numbers</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.charAt</span>(<span class="s7">0</span>)<span
        class="s7"
        >.toLowerCase</span
      >() == <span class="s7">k</span>)
      <span class="s7">ddown.selection </span>= <span class="s7">i</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      );
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      listener to the drop-down that monitors keystrokes and selects the first
      list item whose first letter matches the key press. Here is an example:
    </p>
    <p style="padding-left: 474pt; text-indent: 0pt; text-align: left">
      <span
        ><img width="198" height="78" alt="image" src="Image_147.jpg"
      /></span>
    </p>
    <p
      class="s34"
      style="
        padding-top: 11pt;
        padding-left: 427pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <a name="a106">t &gt; </a
      ><span
        ><img width="198" height="78" alt="image" src="Image_148.jpg" /></span
      ><span class="s35"> </span>h &gt;
      <span
        ><img width="198" height="78" alt="image" src="Image_149.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="198" height="107" alt="image" src="Image_150.jpg"
      /></span>
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This mimics the behaviour of many dropdowns you encounter in InDesign but
      also, for instance, on the web. If you type <span class="h4">t</span>,
      <span class="s17">two </span>is displayed in the list; if you then type
      <span class="h4">h</span>, <span class="s17">hundred </span>is shown. In
      other words, any keypress matches just the first letter of an item.
      <span class="h4">Note</span>: on Macs you need to define the event handler
      on the window rather than on the dropdown.
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="198" height="107" alt="image" src="Image_151.jpg"
      /></span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>numbers <b>= [</b
      ><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span>,
      <span style="color: #cd1719">&quot;thirty&quot;</span>,
      <span style="color: #cd1719">&quot;hundred&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Drop-down select&quot;</span><b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>ddown <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      numbers<b>); </b>ddown.minimumSize.width <b>= </b>200<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">ddown.selection </span>= <span class="s7">0</span>;
      <span class="s7">ddown.active </span>= <span class="s6">true</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">buffer </span>=
      <span class="s9">&quot;&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">ddown.</span><span class="s12">onActivate </span>=
      <span class="s6">function </span>() {<span class="s7">buffer </span>=
      <span class="s9">&quot;&quot;</span>}
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      ddown.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>)</b>
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      But now that we&#39;re into event listeners we can do a bit better and
      mimic the behaviour of more clever dropdowns, such as that in the font
      dropdown in InDesign’s Character panel. That list is like a type-ahead
      list, so that successive keypresses match the beginning characters of a
      list item. You can then type your way to an item, so to speak. Here is the
      script:
    </p>
    <p
      class="s34"
      style="
        padding-top: 8pt;
        padding-left: 427pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a107">t &gt;</a>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="198" height="107" alt="image" src="Image_152.jpg"
      /></span>
    </p>
    <p
      class="s34"
      style="padding-left: 427pt; text-indent: 0pt; text-align: left"
    >
      h &gt;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buffer <b>+= </b>k.keyName.toLowerCase<b>();</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>i <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">while </span>(<span class="s7">i </span>&lt;
      <span class="s7">numbers.length</span>-<span class="s7">1 </span
      >&amp;&amp; <span class="s7">numbers</span>[<span class="s7">i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.indexOf </span
      >(<span class="s7">buffer</span>) != <span class="s7">0</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {++<span class="s7">i</span>;}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">numbers</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.indexOf </span
      >(<span class="s7">buffer</span>) == <span class="s7">0</span>)
      <span class="s7">ddown.selection </span>= <span class="s7">i</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      );
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
      undefined, <span style="color: #cd1719">&quot;OK&quot;</span
      ><b>); </b>w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script now remembers what we type in the variable called
      <span class="h4">buffer</span>. When the script starts, this variable is
      initialised to an empty string. The event listener adds our input to the
      buffer every time we press a key. Of course, when you move away from the
      dropdown (by pressing Tab or clicking somewhere else in
    </p>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      On Macs there appear to be some problems with adding the event handler to
      the dropdown list. These problems can be avoided by adding the handler to
      the window, though that in itself is not unproblematic.
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      See
      <span style="color: #0080c7"
        >https://forums.adobe.com/thread/1705713 </span
      >for the discussion.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      the window) and then go back to the dropdown, you want to start afresh.
      That’s what the onActivate callback is for: when the dropdown is
      activated, the buffer is emptied.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The dropdown’s behaviour is now different. If you press
      <span class="h4">t</span>, <span class="s17">two </span>is highlighted as
      before. But when you now type <span class="h4">h</span>, the script
      selects <span class="s17">three </span>in the list, not
      <span class="s17">hundred </span>as before.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      There’s one problem, though: you can’t use the backspace key to correct
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a typing error. That’s because when you press any key, its name is
      appended to the buffer (except the Tab key). To correct an error, you need
      to move away from the dropdown, go back to it, and start again. We would
      therefore like to add something to the event listener that removes the
      buffer’s last character if the Backspace key is pressed, and adds a key’s
      name only if the key’s name is
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a single letter. This last point is relevant because if you press the
      Shift key, <span class="s1">shift </span>is added to the buffer. Here is
      the revised script:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>array <b>= [</b
      ><span style="color: #cd1719">&quot;one&quot;</span>,
      <span style="color: #cd1719">&quot;two&quot;</span>,
      <span style="color: #cd1719">&quot;three&quot;</span>,
      <span style="color: #cd1719">&quot;thirty&quot;</span>,
      <span style="color: #cd1719">&quot;hundred&quot;</span><b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: -7pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Drop-down select&quot;</span><b>); </b
      ><span class="s6">var </span>ddown <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;dropdownlist&quot;</span>, undefined,
      array<b>); </b>ddown.minimumSize.width <b>= </b>200<b>;</b>
    </p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">ddown.selection </span>= <span class="s7">0</span>;
      <span class="s7">ddown.active </span>= <span class="s6">true</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span><span class="s7">buffer </span>=
      <span class="s9">&quot;&quot;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">ddown.onActivate </span>=
      <span class="s7">ddown.onDeactivate </span>=
      <span class="s6">function </span>() {<span class="s7">buffer </span>=
      <span class="s9">&quot;&quot;</span>;}
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      ddown.addEventListener <b>(</b
      ><span style="color: #cd1719">&quot;keydown&quot;</span>,
      <span class="s6">function </span><b>(</b>k<b>)</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">k.keyName </span>==
      <span class="s9">&quot;Backspace&quot;</span>)
      <span class="s7">buffer </span>=
      <span class="s7">buffer.replace </span>(<span class="s22">/.$</span
      ><span class="s7">/, </span><span class="s9">&quot;&quot;</span>);
    </p>
    <p
      class="s6"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      else
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">k.keyName.length </span>&gt;
      <span class="s7">0</span>)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      buffer <b>+= </b>k.keyName.toLowerCase<b>();</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>i <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">while </span>(<span class="s7">i </span>&lt;
      <span class="s7">array.length</span>-<span class="s7">1 </span>&amp;&amp;
      <span class="s7">array</span>[<span class="s7">i</span>]<span class="s7"
        >.toLowerCase</span
      >()<span class="s7">.indexOf </span>(<span class="s7">buffer</span>) !=
      <span class="s7">0</span>) {++<span class="s7">i</span>;}
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">array</span>[<span class="s7"
        >i</span
      >]<span class="s7">.toLowerCase</span>()<span class="s7">.indexOf </span
      >(<span class="s7">buffer</span>) == <span class="s7">0</span>)
      <span class="s7">ddown.selection </span>= <span class="s7">i</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      );
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;button&quot;</span>,
      undefined, <span style="color: #cd1719">&quot;OK&quot;</span
      ><b>); </b>w.show <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note that we changed the callback, too, so that the buffer is reset on
      activation and on deactivation of the dropdown.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 6pt; text-indent: 0pt; text-align: left">
      <a name="a108">Validating input</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are several ways to validate the content of an edittext control. The
      simplest is simply to disable a window’s OK button so that the user can’t
      click OK while the edittext’s content is not acceptable. For instance, if
      you ask the user to enter the name for a new text anchor, the simplest way
      to make sure that they provide a name that’s not already in use is to
      check at every key press whether
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="316" height="129" alt="image" src="Image_153.png"
      /></span>
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a text anchor with that name exists. In the following example, entering
      the last 3 creates a name that matches an existing name and the OK button
      is disabled. (This validation method and the one using a change of
      background colour is based on a script by Bob Stucky.)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      ><span class="s7">, </span
      ><span class="s9">&#39;New text anchor&#39;</span>);
      <span class="s7">w.group </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.group.add </span>(<span class="s9"
        >&#39;statictext {text: &quot;New name:&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.input </span>=
      <span class="s7">w.group.add </span>(<span class="s9"
        >&#39;edittext {characters: 20, active: true}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.buttons </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group {alignment: &quot;right&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.ok </span>=
      <span class="s7">w.buttons.add </span>(<span class="s9"
        >&#39;button {text: &quot;OK&quot;, enabled: false}&#39;</span
      >); <span class="s7">w.buttons.add </span>(<span class="s9"
        >&#39;button {text: &quot;Cancel&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.input.onChanging </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.ok.enabled <b>= !</b>app.activeDocument.hyperlinkTextDestinations.item
      <b>(</b>w.input.text<b>)</b>.isValid<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="316" height="129" alt="image" src="Image_154.png"
      /></span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">w.show</span>() ==
      <span class="s7">1 </span>&amp;&amp;
      <span class="s7">w.input.text.length </span>&gt;
      <span class="s7">0</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      app.activeDocument.hyperlinkTextDestinations.add
      <b>(</b>app.selection<b>[</b>0<b>]</b>,
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {<span class="s7">name</span>: <span class="s7">w.input.text</span>});
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      If a window contains many fields it’s often helpful to emphasise an
      edittext control by changing its background color so that it’s easier to
      spot. This, too, can be done while the user enters data (this no longer
      works after CS6).
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 14pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s7">w.group </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.group.add </span>(<span class="s9"
        >&#39;statictext {text: &quot;Enter a number:&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.input </span>=
      <span class="s7">w.group.add </span>(<span class="s9"
        >&#39;edittext {characters: 10, active: true, justify:
        &quot;right&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.buttons </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;group {alignment: &quot;right&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.ok </span>=
      <span class="s7">w.buttons.add </span>(<span class="s9"
        >&#39;button {text: &quot;OK&quot;, enabled: false}&#39;</span
      >); <span class="s7">w.buttons.add </span>(<span class="s9"
        >&#39;button {text: &quot;Cancel&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.input.onChanging </span>=
      <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>valid <b>= </b>/^<b>[</b>\d.,<b>]+</b>$/.test
      <b>(</b>w.input.text<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">this</span>.graphics.backgroundColor <b>= </b
      ><span class="s6">this</span>.graphics.newBrush <b>(</b
      ><span class="s6">this</span>.graphics.BrushType. SOLID_COLOR, valid
      <b>? [</b>1, 1, 1, 1<b>] : [</b>1, 0.5, 0.5, 1<b>]);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      w.ok.enabled <b>= </b>valid<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="243" height="129" alt="image" src="Image_155.png"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As soon as the user enters a character that’s not a digit, dot, or comma,
      the background is changed to red. When the illegal character is removed,
      the window goes back to normal.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 6pt; text-indent: 0pt; text-align: left">
      <a name="a109">Three-state checkboxes: Sprites</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      ScriptUI’s checkbox controls are two-state: on or off. But in many cases –
      in InDesign anyway – a text selection, for example, can be in three
      states: on, off, or mixed. ScriptUI doesn’t provide anything natively for
      three-state boxes, but with some (considerable) effort those three-state
      checkboxes can be added to a ScriptUI panel.
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="48" height="44" alt="image" src="Image_156.png"
      /></span>
    </p>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The red frame represents the ScriptUI image object. The graphic is moved
      horizontally.
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      Because the image object is a third of the graphic’s width, only one state
      is ever shown.
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 6pt;
        padding-left: 28pt;
        text-indent: 2pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The idea behind this is to create a so-called sprite, as was shown by Marc
      Autret (see his <span style="color: #0080c7">blog </span>on the subject).
      The technique is a viewport approach (see also &quot;Scrolling panels and
      groups&quot; on page 66): create a graphic that shows the three states,
      add an image control in a ScriptUI window that’s (in our case)
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a third of the width of the image (that’s in fact the viewport), and add
      an event listener that slides the image horizontally.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The script, below, relies heavily on Marc’s method. For the sprite I use
      three graphics: one for CS6, one for the CC light interface, and the third
      for the CC dark interface. They must be separate because the CS6 boxes are
      bigger. The CC graphics could be combined but the way it is now, it’s easy
      to add graphics for other shades of interface. (For myself I use strings
      instead of graphic files, but the strings are much too long to use here in
      this guide.)
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      The script’s window is very small. It can be used in the same way that
      InDesign’s three-state checkboxes are used: it shows the state of the
      current selection and can be used to change the current selection’s
      nobreak state.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="324" height="154" alt="image" src="Image_157.png"
      /></span>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      #targetengine nobreak;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      (<span class="s6">function </span>() {
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      var <span class="s7">windowName</span><span class="s8">;</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">nobreakWindow</span><span class="s8">;</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      //-------------------------------------------------------------
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // Slightly adapted from Marc Autret’s
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a
        href="http://www.indiscripts.com/post/2011/04/sprite-buttons-in-scriptui"
        class="s36"
        target="_blank"
        >//
        http://www.indiscripts.com/post/2011/04/sprite-buttons-in-scriptui</a
      >
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // All comments in this section are Marc’s.
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // ScriptUI Image Offset Fixer in InDesign CS6 and earlier
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // (this bug was solved in CC i.e. ScriptUI 6.2.x)
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">var </span>CC_FLAG <b>= </b>parseInt<b>(</b>app.version<b
        >) &gt;= </b
      >9 <b>? </b>1 <b>: </b>0<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>FIX_OFFSET <b>= </b>CC_FLAG <b>? </b>0
      <b>: </b>1<b>;</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      // Force an Image widget to repaint (= onDraw trigger)
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // CC: we need to temporarily change the size
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // (layout.layout(1) does not work anymore in CC)
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // CS4-CS6: just reassign this.size
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">Image.prototype.refresh </span>=
      <span class="s6">function</span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 13pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">if </span>(<span class="s7">CC_FLAG</span>) {
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">wh </span><span class="s8">= </span>this<span
        class="s7"
        >.size</span
      ><span class="s8">;</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">this</span>.size <b>= [</b>1<b>+</b>wh<b>[</b>0<b>]</b>,
      1<b>+</b>wh<b>[</b>1<b>]];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">this</span><span class="s7">.size </span>= [<span
        class="s7"
        >wh</span
      >[<span class="s7">0</span>]<span class="s7">, wh</span>[<span class="s7"
        >1</span
      >]]; <span class="s7">wh </span>= <span class="s6">null</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 5pt;
        padding-left: 330pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      CC-style
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="
        padding-top: 9pt;
        padding-left: 334pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      CS6-style
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">this</span>.size <b>= [</b
      ><span class="s6">this</span>.size<b>[</b>0<b>]</b>,
      <span class="s6">this</span>.size<b>[</b>1<b>]];</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      // Three different sprites: CS6, light CC, and dark CC
      -----------------------------------------
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">threeWayCheckboxImage</span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">parseInt </span>(<span
        class="s7"
        >app.version</span
      >) &lt; <span class="s7">9</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return File </span>(<span class="s9"
        >&#39;/D/icons/off_on_mixed_CS6.png&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else if </span>(<span class="s7"
        >app.generalPreferences.uiBrightnessPreference </span
      >== <span class="s7">1</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return File </span>(<span class="s9"
        >&#39;/D/icons/off_on_mixed_CC_light.png&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return File </span>(<span class="s9"
        >&#39;/D/icons/off_on_mixed_CC_dark.png&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      // Check if there’s a selection and if there is, if it’s valid
      -------------------------------------
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">noBreakApplies </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span>app.windows.length <b>&gt; </b>0
      <b>&amp;&amp; </b>app.documents.length <b>&gt; </b>0
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      &amp;&amp; <span class="s7">app.selection.length </span>&gt;
      <span class="s7">0 </span>&amp;&amp;
      <span class="s7">app.selection</span>[<span class="s7">0</span>]<span
        class="s7"
        >.hasOwnProperty</span
      >(<span class="s9">&#39;noBreak&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      // Return the nobreak state of the current selection
      ---------------------------------------------
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">getNoBreakState </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">ret</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(!<span class="s7">noBreakApplies</span>()) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      ret <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else if </span>(<span class="s7">app.selection</span
      >[<span class="s7">0</span>] <span class="s6">instanceof </span
      ><span class="s7">InsertionPoint</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      ret <b>= </b>app.selection<b>[</b>0<b>]</b>.underline <b>? </b>1
      <b>: </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">txt </span>=
      <span class="s7">app.selection</span>[<span class="s7">0</span>]<span
        class="s7"
        >.textStyleRanges.everyItem</span
      >()<span class="s7">.underline.join</span>(<span class="s9"
        >&#39;&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">txt.indexOf </span>(<span
        class="s9"
        >&#39;true&#39;</span
      >) &gt; -<span class="s7">1 </span>&amp;&amp;
      <span class="s7">txt.indexOf </span>(<span class="s9"
        >&#39;false&#39;</span
      >) &gt; -<span class="s7">1</span>) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      ret <b>= </b>2<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      } <span class="s6">else if </span>(<span class="s7">txt.indexOf </span
      >(<span class="s9">&#39;true&#39;</span>) &gt; -<span class="s7">1</span>)
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      ret <b>= </b>1<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 1pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      } <span class="s6">else </span>{
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      ret<b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s6"
      style="padding-top: 2pt; text-indent: 0pt; text-align: center"
    >
      return <span class="s7">ret</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="526" height="811" alt="image" src="Image_158.png"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      function <span class="s7">updateNobreak </span
      ><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&#39;palette&#39;</span>, windowName<b
        >); </b
      >w.cbox.state <b>= </b>getNoBreakState<b>(); </b>w.cbox.refresh<b>();</b>
    </p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      // Create a window
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">function </span>defineNobreakWindow <b>(</b>name<b
        >) {</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;palette&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.text <b>= </b>name<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">checkBoxGroup </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;group&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">boxWindow </span>=
      <span class="s7">checkBoxGroup.add </span>(<span class="s9"
        >&#39;group&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.cbox <b>= </b>boxWindow.add <b>(</b
      ><span style="color: #cd1719">&#39;image&#39;</span>, undefined,
      threeWayCheckboxImage<b>()); </b>w.cbox.state <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 64pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">checkBoxGroup.add </span>(<span class="s9"
        >&#39;statictext {text: &quot;No break&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span style="color: #007e2f">// Three-way checkbox handlers </span
      ><span class="s6">var </span>iSize <b>= </b>w.cbox.image.size<b>; </b
      ><span class="s6">var </span>spriteWidth <b>= </b>iSize<b>[</b>0<b>] </b>/
      3<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 28pt;
        text-align: left;
      "
    >
      <span class="s7">w.cbox.size </span>= [<span class="s7"
        >spriteWidth, iSize</span
      >[<span class="s7">1</span>]]; <span class="s7">w.cbox.onDraw </span>=
      <span class="s6">function</span>(){
    </p>
    <p
      class="s7"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>dx <b>= </b><span class="s6">this</span>.state
      * spriteWidth <b>+ </b>FIX_OFFSET<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">this</span>.graphics.drawImage <b>(</b
      ><span class="s6">this</span>.image, <b>-</b>dx, 0<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      };
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 48pt; text-indent: 0pt; text-align: left"
    >
      var <span class="s7">mouseEventHandler </span
      ><span class="s8">= </span>function<span class="s8">(){</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">noBreakApplies</span>()) {
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 64pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      switch <span class="s8">(</span>this<span class="s7">.state</span
      ><span class="s8">) {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 72pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">case </span><span class="s7">0</span>:
      <span class="s6">case </span><span class="s7">2</span>:
      <span class="s7">app.selection</span>[<span class="s7">0</span>]<span
        class="s7"
        >.noBreak </span
      >= <span class="s6">true</span>; <span class="s6">this</span
      ><span class="s7">.state </span>= <span class="s7">1</span>;
      <span class="s6">this</span><span class="s7">.refresh</span>();
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      break<span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 71pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">case </span><span class="s7">1 </span>:
      <span class="s7">app.selection</span>[<span class="s7">0</span>]<span
        class="s7"
        >.noBreak </span
      >= <span class="s6">false</span>; <span class="s6">this</span
      ><span class="s7">.state </span>= <span class="s7">2</span>;
      <span class="s6">this</span><span class="s7">.refresh</span>();
      <span class="s6">break</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 63pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      };
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 47pt; text-indent: 0pt; text-align: left"
    >
      w.cbox.addEventListener <b>(</b
      ><span style="color: #cd1719">&#39;click&#39;</span>, mouseEventHandler<b
        >);</b
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s6"
      style="padding-left: 39pt; text-indent: 0pt; text-align: left"
    >
      return <span class="s7">w</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      //----------------------------------------------------------------------------------
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">windowName </span>=
      <span class="s9">&#39;No break&#39;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      nobreakWindow <b>= </b>Window.find <b>(</b
      ><span style="color: #cd1719">&#39;palette&#39;</span>, windowName<b
        >);</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">nobreakWindow </span>===
      <span class="s6">null</span>){
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      nobreakWindow <b>= </b>defineNobreakWindow <b>(</b>windowName<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      app.addEventListener <b>(</b
      ><span style="color: #cd1719">&#39;afterSelectionChanged&#39;</span>,
      updateNobreak<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      updateNobreak<b>(); </b>nobreakWindow.show<b>();</b>
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      }());
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 8pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a110">Size and location</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      There are two ways to determine the size and the location of a window and
      all its children: automatically and manually. The automatic method uses
      ScriptUI’s layout manager and, since it does a pretty good job most of the
      time, is by far the easiest way to create windows. The manual method
      involves specifing the size and position of all controls, which can turn
      into a nightmare if you decide to change the type and typesize of one or
      more controls, or when you change the window’s layout. In this section,
      therefore, we deal almost exclusively with the way the layout manager goes
      about its business. Here and there we’ll use bits of the manual method
      when it’s convenient, but that doesn’t happen very much.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Much of what we describe here is well documented in the Guide, but several
      aspects remain unclear there.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a111">Size</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      By default, windows are placed in the centre of the screen and its
      controls are centred in their containers, both horizontally and
      vertically. Size and position can be stated in several different formats,
      which are mere notational variants:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >); <span class="s7">w.preferredSize </span>= [<span class="s7"
        >300, 400</span
      >]; <span class="s7">w.preferredSize </span>= {<span class="s7"
        >width</span
      >: <span class="s7">300, height</span>: <span class="s7">400</span>}
      <span class="s7">w.preferredSize </span>=
      <span class="s9">&quot;width: 300, height: 400&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      w.preferredSize.width <b>= </b>300<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.preferredSize.height <b>= </b>400<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.preferredSize<b>[</b>0<b>] = </b>300<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.preferredSize<b>[</b>1<b>] = </b>400<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.preferredSize <b>= [</b>300,
      <span style="color: #cd1719">&quot;&quot;</span><b>]; </b
      ><span style="color: #007e2f">// set just the width </span>w.preferredSize
      <b>= [</b><span style="color: #cd1719">&quot;&quot;</span>, 400<b>]; </b
      ><span style="color: #007e2f">// set just the height</span>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show<b>()</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As with all JavaScript arrays and objects, the array notation is ordered
      ([width, height]), the object notation is not. The format of last two are
      not very useful here, but will come in handy later on when we deal with
      alignments.
    </p>
    <h4
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      preferredSize
      <span class="p"
        >tells the layout manager to aim at a certain size. To fix the size, use </span
      >size<span class="p"
        >. But the size can (often) be set only when the window is being drawn,
        so that </span
      >size <span class="p">must be used inside an </span>onShow
      <span class="p">callback:</span>
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span style="color: #000">w.onShow </span><span class="s8">= </span
      ><span class="s6">function </span><span class="s8">() {</span>w.size
      <b>= {</b>width<b>: </b>300, height<b>: </b>400<b>}</b
      ><span class="s8">} </span><span style="color: #000">w.show</span
      ><span class="s8">();</span>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      All the notations available for <span class="h4">preferredSize </span>can
      be used for <span class="h4">size</span>, too:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.size <b>= [</b>300, 400<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.size <b>= {</b>width<b>: </b>300, height<b>: </b>400<b>};</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.size </span>=
      <span class="s9">&quot;width: 300, height: 400&quot;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.size.width <b>= </b>300<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.size.height <b>= </b>400<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.size<b>[</b>0<b>] = </b>300<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.size<b>[</b>1<b>] = </b>400<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a112">Location</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A window’s location is set with the
      <span class="h4">location </span>property. This one, too, can be used with
      the several notational variants:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s12">// either of the following three: </span
      ><span class="s7">w.location </span>= [<span class="s7">100, 200</span>];
      <span class="s7">w.location </span>= {<span class="s7">x</span>:<span
        class="s7"
        >100, y</span
      >:<span class="s7">200</span>}; <span class="s7">w.location </span>=
      <span class="s9">&quot;x:100, y:200&quot;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The <span class="h4">w.location.x = </span>and
      <span class="h4">w.location[0] = </span>formats are possible only in
      <span class="h4">onShow</span>
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      callbacks:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.location.x <b>= </b>100<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 39pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.location.y <b>= </b>200<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h3
      style="
        padding-top: 4pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a113">Bounds</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Size and location together make up a contol’s
      <span class="h4">bounds</span>, which are presented as a four-element
      array:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span style="color: #007e2f">// either of the following three </span
      >w.bounds <b>= [</b>100, 200, 300, 400<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.bounds <b>= {</b>left<b>: </b>100, top<b>: </b>200, right<b>: </b>300,
      bottom<b>: </b>400<b>}</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.bounds </span>=
      <span class="s9"
        >&quot;left: 100, top: 200, right: 300, bottom: 400&quot;</span
      >; <span class="s7">w.show</span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As with all controls, using the array notation, bounds can be included in
      the control’s definition:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Title&quot;</span>, <b>[</b>100, 200,
      300, 400<b>]); </b>w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A window’s bounds exclude the frame, so when you place a window at the top
      left of a screen you should allow for the frame. The window’s bounds
      including the frame are returned by <span class="h4">frameBounds</span>.
      This script prints a window’s bounds and frame bounds in the console:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var w <b>= </b><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&#39;dialog&#39;</span>,
      <span style="color: #cd1719">&#39;&#39;</span>, <b>[</b>100, 200, 300,
      400<b>]);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&#39;Bounds: &#39; </span
      >+ <span class="s7">w.bounds</span>)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&#39;Frame bounds: &#39; </span
      >+ <span class="s7">w.frameBounds</span>)
      <span class="s7">w.show</span>();
    </p>
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Bounds: 100,200,300,400
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      Frame bounds: 97,170,303,403
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    ></p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The output shows that the left, right, and bottom frame are 3 units wide,
      and that the top of the frame is 30 units.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="200" height="286" alt="image" src="Image_159.jpg"
      /></span>
    </p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a114">Maximum size</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Maximum size is needed to prevent controls from disappearing off the
      screen.
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This could happen, for example, with long lists. The following script
      displays a list of 100 items in a list box, but the screen is clearly not
      tall enough to accommodate that list: it manages 61 items on my screen.
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">list </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;listbox&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">100</span>;
      <span class="s7">i</span>++) <span class="s7">list.add </span>(<span
        class="s9"
        >&#39;item {text: &#39; </span
      >+ <span class="s7">i </span>+ <span class="s9">&#39;}&#39;</span>);
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      What we want is to set a maximum height to the list. But, naturally, we
      first need to know the maximum size of the dialog. To find that height,
      run the following script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      $.writeln <b>(</b>w.maximumSize.height<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      On my PC this prints <span class="h4">1150 </span>to the console. You can
      use this value to set the list’s maximum height, but you’ll see that the
      list still spills over the window because of the top and bottom
      frameBounds. After some experimentation, 1100 turns out to work well for
      me. To keep the script general, rather than hard wiring
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="201" height="285" alt="image" src="Image_160.jpg"
      /></span>
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      a value, we now say that the lists’s maximum height should the the
      window’s maximum height minus 50:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">list </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;listbox&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">100</span>;
      <span class="s7">i</span>++) <span class="s7">list.add </span>(<span
        class="s9"
        >&#39;item {text: &#39; </span
      >+ <span class="s7">i </span>+ <span class="s9">&#39;}&#39;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      list.maximumSize.height <b>= </b>w.maximumSize.height <b>- </b>50<b>; </b
      >w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Predictably, apart from <span class="h4">height</span>,
      <span class="h4">maximumSize </span>has a property
      <span class="h4">width </span>as well. In my experience,
      <span class="h4">maximumSize.width </span>isn’t needed as much as
      <span class="h4">maximumSize. height </span>– I use it only for resizeable
      windows.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      But if you use a dual-monitor system, you may be in for a surprise:
      <span class="h4">maximumSize.width </span>considers both screens as one.
      For example, I have two 24-inch 1920 × 1200 screens next to each other.
      The window property <span class="h4">maximumSize.height </span>correctly
      returns 1150 (1200 minus 50 for system overhead), but
      <span class="h4">maximumSize.width </span>tells me that my window is 3790
      pixels wide. In itself this is correct because you could drag a window
      across two
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      screens, but you need to be aware of this if, for instance, you want to
      position a window at the right-hand side of the screen on the left.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      To get the correct value for the maximum width of a screen, you need to
      use
    </p>
    <h4
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      $.screens<span class="p"
        >, which returns an array of objects representing screen coordinates.
        Note that this is part of the ESTK, not ScriptUI. The following script
        lists the coordinates of all screens, in this case, two:</span
      >
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">$.screens.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;Screen &quot; </span
      >+ <span class="s7">i</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;top: &quot; </span
      >+ <span class="s7">$.screens</span>[<span class="s7">i</span>]<span
        class="s7"
        >.top</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;left: &quot; </span
      >+ <span class="s7">$.screens</span>[<span class="s7">i</span>]<span
        class="s7"
        >.left</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;bottom: &quot; </span
      >+ <span class="s7">$.screens</span>[<span class="s7">i</span>]<span
        class="s7"
        >.bottom</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;right: &quot; </span
      >+ <span class="s7">$.screens</span>[<span class="s7">i</span>]<span
        class="s7"
        >.right</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s10"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Screen 0
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      top: 0
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      left: 0
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      bottom: 1200
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      right: 1920
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      Screen 1
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      top: 0
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      left: 1920
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      bottom: 1200
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      right: 3840
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      So the maximum width of windows placed on the first screen is about 1900.
    </p>
    <h3
      style="
        padding-top: 4pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a115">Minimum size</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Use <span class="h4">minimumSize </span>to set a control’s minimum width
      and height. Its values are set in the same way as
      <span class="h4">preferredSize </span>and
      <span class="h4">maximumSize</span>. I use minimumSize especially in
      resizable windows; for an example, see &quot;Resizing windows&quot; on
      page 103.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a116">Orientation</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Containers can have either of three orientations:
      <span class="h4">row</span>, <span class="h4">column</span>, or
      <span class="h4">stack</span>. Windows and panels default to column,
      groups to row orientation. These are entirely straightforward. Stack
      orientation, on the other hand (in InDesign), has suffered from an
      inconsistency between Macs and Windows PCs up to and including CS6. In
      that environment, when you stack two controls, the second object drawn is
      placed behind the first control, but on Macs the second control is placed
      in front of the first control. When you use
      <span class="h4">stack </span>you should therefore do a platform check and
      on Windows, also do a version check. The following script illustrates:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.orientation </span>=
      <span class="s9">’stack&#39;</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">$.os.indexOf </span>(<span
        class="s9"
        >&#39;Windows&#39;</span
      >) &gt;-<span class="s7">1 </span>&amp;&amp;
      <span class="s7">parseInt </span>(<span class="s7">app.version</span>)
      &lt; <span class="s7">9</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s12">// On Windows, before CC </span
      ><span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;edittext {preferredSize: [200, 100]}&#39;</span
      >)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      } <span class="s6">else </span>{<span class="s12"
        >// On Mac or on Windows from CC </span
      ><span class="s7">w.add </span>(<span class="s9"
        >&#39;edittext {preferredSize: [200, 100]}&#39;</span
      >) <span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="198" height="140" alt="image" src="Image_161.jpg"
      /></span>
    </p>
    <h3
      style="
        padding-top: 9pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a117">Margins and spacing</a>
    </h3>
    <h4
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Margins
      <span class="p"
        >define the space between a container’s edges and its children. Margins
        can be set in the familiar way:</span
      >
    </h4>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.margins <b>= [</b>0, 0, 0, 0<b>];</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.margins <b>= </b>0<b>; </b
      ><span style="color: #007e2f">// same effect as previous line </span
      >w.margins.left <b>= </b>0<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The order of the four values in the <span class="h4">margins </span>array
      is [left, top, right, bottom].
    </p>
    <h4
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Spacing
      <span class="p"
        >defines the space between a container’s children. The scripts below
        illustrate:</span
      >
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      <span class="s7">p1 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [200, 100], properties: {multiline:
        true}}&#39;</span
      >); <span class="s7">p2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [200, 100], properties: {multiline:
        true}}&#39;</span
      >); <span class="s7">p1.text </span>=
      <span class="s9">&#39;Margins: default\rSpacing: default&#39;</span>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: justify"
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      w.margins <b>= </b>0<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      <span class="s7">p1 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [200, 100], properties: {multiline:
        true}}&#39;</span
      >); <span class="s7">p2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [200, 100], properties: {multiline:
        true}}&#39;</span
      >); <span class="s7">p1.text </span>=
      <span class="s9">&#39;Margins: 0\rSpacing: default&#39;</span>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      w.show <b>();</b>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: justify"
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      w.margins <b>= </b>0<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: justify;
      "
    >
      w.spacing <b>= </b>0
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: justify;
      "
    >
      <span class="s7">p1 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [200, 100], properties: {multiline:
        true}}&#39;</span
      >); <span class="s7">p2 </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [200, 100], properties: {multiline:
        true}}&#39;</span
      >); <span class="s7">p1.text </span>=
      <span class="s9">&#39;Margins: 0\rSpacing: 0&#39;</span>
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="198" height="232" alt="image" src="Image_162.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 125pt;
        "
      >
      </span
      ><span
        ><img width="174" height="208" alt="image" src="Image_163.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 143pt;
        "
      >
      </span
      ><span
        ><img width="174" height="196" alt="image" src="Image_164.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a118">alignment</a>
    </h3>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="214" height="166" alt="image" src="Image_165.jpg"
      /></span>
    </p>
    <h4
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Alignment
      <span class="p"
        >is set the horizontal or vertical alignment of a single control.
        Horizontal alignments are </span
      >left<span class="p">, </span>right<span class="p">, </span>center<span
        class="p"
        >, and </span
      >fill<span class="p">.</span>
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog {preferredSize: [250, &quot;&quot;]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span>);
      <span class="s7">b.alignment </span>=
      <span class="s9">&#39;left&#39;</span>; <span class="s6">var </span
      ><span class="s7">b </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;button&#39;</span
      >); <span class="s7">b.alignment </span>=
      <span class="s9">&#39;center&#39;</span>; <span class="s6">var </span
      ><span class="s7">b </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;button&#39;</span
      >); <span class="s7">b.alignment </span>=
      <span class="s9">&#39;right&#39;</span>; <span class="s6">var </span
      ><span class="s7">b </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;button&#39;</span
      >); <span class="s7">b.alignment </span>=
      <span class="s9">&#39;fill&#39;</span>;
    </p>
    <p
      class="s7"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Vertical alignments are <span class="h4">top</span>,
      <span class="h4">center</span>, <span class="h4">bottom</span>, and
      <span class="h4">fill</span>.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog {preferredSize: [&quot;&quot;, 150], orientation:
        &quot;row&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span>);
      <span class="s7">b.alignment </span>= [<span class="s9">&quot;&quot;</span
      ><span class="s7">, </span><span class="s9">&#39;top&#39;</span>];
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span>);
      <span class="s7">b.alignment </span>= [<span class="s9">&quot;&quot;</span
      ><span class="s7">, </span><span class="s9">&#39;center&#39;</span>];
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span>);
      <span class="s7">b.alignment </span>= [<span class="s9">&quot;&quot;</span
      ><span class="s7">, </span><span class="s9">&#39;bottom&#39;</span>];
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;button&#39;</span>);
      <span class="s7">b.alignment </span>= [<span class="s9">&quot;&quot;</span
      ><span class="s7">, </span><span class="s9">&#39;fill&#39;</span>];
      <span class="s7">w.show</span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 27pt;
        "
      >
      </span
      ><span
        ><img width="330" height="156" alt="image" src="Image_166.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      Notice that vertical alignment is set by using the second element of the
      alignment array. If you want to set just the vertical alignment, leave the
      horizontal alignment – the first element – undefined, as in this example.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a119">alignChildren</a>
    </h3>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="266" height="222" alt="image" src="Image_167.jpg"
      /></span>
    </p>
    <p style="text-indent: 0pt; text-align: left">
      <span
        ><img width="266" height="222" alt="image" src="Image_168.jpg"
      /></span>
    </p>
    <h4
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      alignment
      <span class="p"
        >sets the alignment of a single control. To set the alignment of all
        children in a container (a window, group, or panel), use </span
      >alignChildren<span class="p"
        >. This is useful, for instance, to make all buttons in a group the same
        width, as in the following script.</span
      >
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&#39;dialog {orientation: &quot;row&quot;, alignChildren:
        [&quot;&quot;, &quot;top&quot;]}&#39;</span
      >); <span class="s7">w.add </span>(<span class="s9"
        >&#39;panel {preferredSize: [150, 200]}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">g </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;group {orientation: &quot;column&quot;}&#39;</span
      >); <span class="s7">g.</span><span class="s12">alignChildren </span>=
      <span class="s9">&quot;fill&quot;</span>;
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;Auto&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;Instant preview&quot;}&#39;</span
      >); <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;OK&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 15pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;Cancel&quot;}&#39;</span
      >); <span class="s7">w.show</span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Instead of setting each button’s horizontal alignment to
      <span class="h4">fill</span>, here we set the group’s
      <span class="h4">alignChildren </span>value, which transfers the alignment
      to all the group’s children.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As with <span class="h4">alignment</span>, to set a horizontal value for
      <span class="h4">alignChildren </span>we can simply give that value as a
      string (&#39;left&#39;, &#39;center&#39;, &#39;right&#39;,
      &#39;fill&#39;), as in the above example; and again, to set just a
      vertical value for alignChildren we need to use the second element in an
      array, as in
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 30pt; text-indent: 0pt; text-align: left"
    >
      Without <span class="s32">g.alignChildren = &#39;fill&#39; </span>With
      <span class="s32">g.alignChildren = &#39;fill&#39;</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      g.alignChildren <b>= [ </b
      ><span style="color: #cd1719">&quot;&quot;</span>,
      <span style="color: #cd1719">&quot;fill&quot;</span><b>];</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 8pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a120">Resizing windows</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Moving a window is easy: just grab the window’s title bar and drag it to
      somewhere else on the screen. This is useful when the window covers what
      you were looking at.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      It can also be useful to make windows resizable, but that’s a bit more
      complicated. The script below shows a simple window which can be resized.
      It draws a window with an edit field and a group with three buttons in it.
      The user can resize the window in the usual way by clicking on a corner or
      a side of the window’s frame and dragging it left, right, up, or down.
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      The window has two main alements, the edittext control and the group with
      three buttons. The size of the button group not specified, and by setting
      the alignment of the edittext control to
      <span class="h4">[&quot;fill&quot;, &quot;fill&quot;] </span>we say in
      effect that it should always take up all the available space of the window
      – that is, the space in the window minus the space taken by the button
      group.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first thing to do to make a window resizeable is to include the
      creation property <span class="h4">{resizeable: true}</span>. In addition,
      the script needs the callback <span class="h4">onResizing</span>, which
      monitors whether the window is being resized; if it is, the window is
      redrawn. (Marc Autret reports that on a Mac you need onResize as well.)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>w <b>= </b><span class="s6">new </span>Window
      <b>(</b><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Resize&quot;</span>, undefined, <b>{</b
      ><span style="color: #007e2f">resizeable</span><span class="s16">: </span
      ><span class="s18">true</span><b>});</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 34pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.orientation </span>=
      <span class="s9">&quot;row&quot;</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 120%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">e </span>=
      <span class="s7">w.add </span>(<span class="s9">&#39;edittext&#39;</span>)
      <span class="s7">e.alignment </span>= [<span class="s9"
        >&quot;fill&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;fill&quot;</span>];
      <span class="s7">e.minimumSize </span>= [<span class="s7">300, 200</span
      >];
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: -5pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">g </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;group {orientation: &quot;column&quot;}&#39;</span
      >); <span class="s7">g.alignment </span>= [<span class="s9"
        >&#39;right&#39;</span
      ><span class="s7">, </span><span class="s9">&#39;top&#39;</span>];
    </p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">g.alignChildren </span>=
      <span class="s9">&#39;fill&#39;</span>;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 40pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;This&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;That&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">g.add </span>(<span class="s9"
        >&#39;button {text: &quot;And the other&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s12"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      // onResize needed on Mac OS X
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s16"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s12">w.onResizing </span>=
      <span class="s12">w.onResize </span>= <span class="s18">function </span>()
      {<span class="s18">this</span><span class="s12">.layout.resize </span>();}
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.minimumSize <b>= </b>w.size<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show <b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="376" height="220" alt="image" src="Image_169.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another important step is the calculation of the minimum size of the
      window. We do this in the <span class="h4">onShow </span>callback.
      <span class="h4">onShow </span>determines the layout by calculating it,
      and at that point we can say that the window’s minumum size is the size it
      has when it was first drawn.
    </p>
    <h4
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p"
        >: resizing appears not to work too well using the above script in CS6
        on Windows 8.1. A remedy was suggested by Lukas Sommer, which works fine
        on Windows 7 too. The change is a different formulation of the onShow
        callback:</span
      >
    </h4>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.minimumSize <b>= </b>w.size<b>; </b
      ><span style="color: #007e2f"
        >// define the initial standard size as minimum size</span
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">w.children.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.children<b>[</b>i<b>]</b>.minimumSize
      <b>= </b>w.children<b>[</b>i<b>]</b>.size<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      It amounts to setting the minimum size not only of the container but also
      of all its children.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The orientation of a window (or group, panel) can be changed dynamically
      when a window is resized. The following script arranges the two defined
      buttons horizontally or vertically depending on the shape of the window:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w <b>= </b><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&#39;dialog&#39;</span>,
      <span style="color: #cd1719">&#39;Test&#39;</span>, undefined,
      <b>{</b>resizeable<b>: </b><span class="s6">true</span><b>})</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.alignChildren </span>= [<span class="s9"
        >&#39;fill&#39;</span
      ><span class="s7">, </span><span class="s9">&#39;fill&#39;</span>];
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Button 1&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Button 2&quot;}&#39;</span
      >);
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.onResizing </span>=
      <span class="s7">w.onResize </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">w.orientation </span>=
      <span class="s7">w.size.width </span>&gt;
      <span class="s7">w.size.height </span>?
      <span class="s9">&#39;row&#39; </span>:
      <span class="s9">&#39;column&#39;</span>;
      <span class="s7">w.layout.resize </span>();
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">w.onShow </span>= <span class="s6">function </span>() {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.layout.resize <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p
      class="s22"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      <span
        ><img width="127" height="178" alt="image" src="Image_170.jpg" /></span
      ><span
        style="
          color: black;
          font-family: 'Myriad Pro', serif;
          font-style: normal;
          font-weight: normal;
          text-decoration: none;
          font-size: 10pt;
          vertical-align: 81pt;
        "
      >
      </span
      ><span
        ><img width="257" height="112" alt="image" src="Image_171.jpg"
      /></span>
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      All that’s needed is to check the shape of the container and change its
      orientation accordingly.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      For a flowchart and a draft outline of ScriptUI’s layout manager, see Marc
      Autret’s <span style="color: #0080c7">outline</span>.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h2 style="padding-left: 7pt; text-indent: 0pt; text-align: left">
      <a name="a121">Coding styles: resource string and code based</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The coding style in the examples given so far is sometimes called code
      based. This is the style I use most of the time because I think it’s the
      more convenient one. There are however two other, distinct, styles, and
      the choice between them appears to be informed mainly by taste.
    </p>
    <h3
      style="
        padding-top: 4pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a122">Resource string</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first alternative is the so-called resource string, in which the whole
      window is presented as a single string that defines the window’s
      characteristics as an object. The script below is the script in p. 8
      recast using a resource string.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Proponents of this style make the point that using resource strings
      encourages the coder to separate the window’s design from its functional
      component.
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This is clear in the example: the resource string states only how the
      window looks, not what happens when you press a button or type something
      in a field. Whether this is a valid point is a matter of taste. A clear
      advantage, however, is that resource strings make for very compact code
      (though in this example that’s not entirely clear).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A disadvantage of resource strings is that they can be very hard to debug
      if you make an error, mainly because the ESTK’s error messages aren’t
      particularly helpful. In addition, I find it easier to change a window’s
      layout using the code- based style.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As mentioned earlier, which style you choose is determined mainly by
      taste. Here is our previous example using the resource-based style:
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 13pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      function <span class="s7">myInput </span><span class="s8">() {</span>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 15pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      var <span class="s7">winResource </span><span class="s8">=</span>
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: center;
      "
    >
      &quot;dialog {text: &#39;Form&#39;, \ myInput: Group {\
    </p>
    <p
      class="s9"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      n: StaticText {text: &#39;Name:&#39;},\
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      myText: EditText {text: &#39;John&#39;, characters: 20, active: true}\
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      },\
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      myButtonGroup: Group {alignment: &#39;right&#39;,\ b1: Button {text:
      &#39;OK&#39;},\
    </p>
    <p
      class="s9"
      style="
        padding-left: 56pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      b2: Button {text: &#39;Cancel&#39;}\
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }\
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }&quot;<span class="s8">;</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>myWindow <b>= </b
      ><span class="s6">new </span>Window <b>(</b>winResource<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">myWindow.show </span>() ==
      <span class="s7">1</span>) {
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">myWindow.myInput.myText.text</span
      ><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Since the resource string defines a complex object, you refer to any
      property as you would any JavaScript property, as in this line:
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">myWindow.myInput.myText.text</span
      ><span class="s8">;</span>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note that capitalisation is slightly different: use
      <span class="h4">Button </span>and <span class="h4">StaticText</span>, not
      <span class="h4">button </span>and <span class="h4">statictext </span>–
      the names of controls and properties are case-sensitive in different ways
      depending on the coding style.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a123">Code-based object</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The second alternative, which I dub ‘object code’ for lack of a better
      term, is in a way a mix of the two other styles: it doesn’t use a resource
      code, but it does define the window as a complex object. This is
      illustrated in the following example, which is again the script on p. 8,
      with just the variable names
    </p>
    <p
      style="
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      abbreviated to keep things manageable. And this is the main reason why I
      don’t use this style: it can get terribly verbose. An advantage of this
      style may be that you use just one variable, namely, the one to create the
      window.
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">myInput </span><span class="s8">() {</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: -8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">win </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      ><span class="s7">, </span><span class="s9">&quot;Form&quot;</span>);
      <span class="s7">win.inpGrp </span>=
      <span class="s7">win.add </span>(<span class="s9">&quot;group&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      win.inpGrp.add <b>(</b
      ><span style="color: #cd1719">&quot;statictext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Name:&quot;</span
      ><b>); </b>win.inpGrp.txt <b>= </b>win.inpGrp.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span
      ><b>); </b>win.inpGrp.txt.characters <b>= </b>20<b>;</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      <span class="s7">win.inpGrp.active </span>= <span class="s6">true</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: -8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">win.btnGrp </span>=
      <span class="s7">win.add </span>(<span class="s9">&quot;group&quot;</span
      >); <span class="s7">win.btnGrp.alignment </span>=
      <span class="s9">&quot;right&quot;</span>;
      <span class="s7">win.btnGrp.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;OK&quot;</span>);
      <span class="s7">win.btnGrp.add </span>(<span class="s9"
        >&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Cancel&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">win.show </span>() ==
      <span class="s7">1</span>) {
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      return <span class="s7">win.inpGrp.txt.text</span
      ><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      exit <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      If you want to refer to very deeply embedded controls, you can set their
      name property and use <span class="h4">findElement() </span>to get a quick
      reference. For instance, if you change the edittext control in the above
      script as follows:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      win.inpGrp.txt <b>= </b>win.inpGrp.add <b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;John&quot;</span>, <b>{</b>name<b>: </b
      ><span style="color: #cd1719">&quot;personname&quot;</span><b>});</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      you can then get a quick reference to that control with this line:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">bloke </span>=
      <span class="s7">win.findElement </span>(<span class="s9"
        >&quot;personname&quot;</span
      >);
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      An alternative to this style is to use with statements, as in the
      forrowing example:
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">myInput </span><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>win <b>= </b
      ><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&#39;dialog&#39;</span>,
      <span style="color: #cd1719">&#39;Form&#39;</span><b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">with </span>(<span class="s7">win</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">with </span>(<span class="s7">add </span>(<span
        class="s9"
        >&#39;group&#39;</span
      >)) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">add </span>(<span class="s9"
        >&#39;statictext {text: &quot;Name:&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 21pt;
        text-indent: 34pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">add </span>(<span class="s9"
        >&#39;edittext {text: &quot;John&quot;, characters: 20, active: true,
        properties: {name: &quot;person&quot;}}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">with </span>(<span class="s7">add </span>(<span
        class="s9"
        >&quot;group&quot;</span
      >)) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">add </span>(<span class="s9"
        >&#39;button {text: &quot;OK&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 56pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">add </span>(<span class="s9"
        >&#39;button {text: &quot;Cancel&quot;}&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">win.show </span>() ==
      <span class="s7">1</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">return </span
      ><span class="s7">win.findElement</span>(<span class="s9"
        >&#39;person&#39;</span
      >)<span class="s7">.text</span>;
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      exit <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3
      style="
        padding-top: 5pt;
        padding-left: 19pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a124">Mixing styles</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The two styles can be mixed. The following example is still the same
      script, but this incarnation is essentially code-based with a few resource
      strings thrown in:
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      function <span class="s7">myInput </span><span class="s8">() {</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>win <b>= </b
      ><span class="s6">new </span>Window <b>(</b
      ><span style="color: #cd1719">&quot;dialog&quot;</span>,
      <span style="color: #cd1719">&quot;Form&quot;</span><b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">inpGrp </span>=
      <span class="s7">win.add </span>(<span class="s9">&quot;group&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">inpGrp.add </span>(<span class="s9"
        >&quot;statictext {text: &#39;Name:&#39;}&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 8pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">myText </span>=
      <span class="s7">inpGrp.add </span>(<span class="s9"
        >&quot;edittext {text: &#39;John&#39;, characters: 20, active:
        true}&quot;</span
      >); <span class="s7">win.btnGrp </span>=
      <span class="s7">win.add </span>(<span class="s9"
        >&quot;group {alignment: &#39;right&#39;}&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">win.btnGrp.add </span>(<span class="s9"
        >&quot;button {text: &#39;OK&#39;}&quot;</span
      >); <span class="s7">win.btnGrp.add </span>(<span class="s9"
        >&quot;button {text: &#39;Cancel&#39;}&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="text-indent: 0pt; line-height: 12pt; text-align: right"
    >
      <span class="s6">if </span>(<span class="s7">win.show </span>() ==
      <span class="s7">1</span>) {
    </p>
    <p
      class="s6"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      return <span class="s7">myText.text</span><span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      exit <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      I find myself using this hybrid form more and more because it is compact
      and the code is still easy to debug. In some cases the mixed method is
      easier to read. For example, in a code-based approach the properties of a
      slider are set as follows:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>slider <b>= </b>w.add <b>(</b
      ><span style="color: #cd1719">&quot;slider&quot;</span>, undefined, 50, 0,
      100<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You have to remember the order in which the start, minimum, and maximum
      values are given (50, 0, and 100, respectively, in the example). An much
      clearer alternative to this is the following, still code-based, version:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">slider </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;slider&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      slider.minvalue <b>= </b>0<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      slider.maxvalue <b>= </b>100<b>;</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      slider.value <b>= </b>50<b>;</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: -1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The mixed style, on the other hand, is more compact and just as easy to
      understand:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">slider </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&quot;slider {value: 50, minvalue: 0, maxvalue: 100}&quot;</span
      >);
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      As with all JavaScript objects, the order in which the properties are
      given is immaterial.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      What has eluded me a long time is how to set a single preferred size in a
      resource string. You can’t do any of the following:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">e </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize.width: 150}&#39;</span
      >) <span class="s12">// All these are wrong </span
      ><span class="s7">e </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize[0]: 150}&#39;</span
      >)
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">e </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize {width: 150}}&#39;</span
      >)
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      By chance I found that -1 can be used as the default value for a control.
      In the following example the control’s width is set to 150, the height is
      set to the default:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">e </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&#39;edittext {preferredSize: [150, -1]}&#39;</span
      >)
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Other controls allow &#39;undefined&#39; (see &quot;Setting the size of
      controls&quot; on page 110); <span class="h4">edittext </span>allows just
      -1.
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <a name="a125">Creation properties</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In code-based styles, creation properties are included in the line that
      creates an object, other properties are stated after the control’s
      creation (see &quot;Creation properties and other properties&quot; on page
      10 for further details). Example:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;button&quot;</span
      ><span class="s7">, undefined, </span
      ><span class="s9">&quot;Continue&quot;</span
      ><span class="s7">, </span>{<span class="s7">name</span>:
      <span class="s9">&quot;ok&quot;</span>});
      <span class="s7">b.alignment </span>=
      <span class="s9">&quot;fill&quot;</span>;
    </p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      In mixed style, the button could be defined as follows:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">b </span>=
      <span class="s7">w.add </span>(<span class="s9"
        >&#39;button {text: &quot;Continue&quot;, alignment: &quot;fill&quot;,
        properties: {name: &quot;ok&quot;}}&#39;</span
      >); <span class="s7">w.show</span>();
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s14"
      style="
        padding-top: 5pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a126">Setting the size of controls</a>
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Sometimes you want to set just one dimension of a control. To set a
      control’s width, for example, and let its height be determined by
      ScriptUI’s layout manager, you would use
      <span class="h4">myControl.preferredSize.width = 200</span>, as in the
      following script:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <span class="s6">var </span><span class="s7">panel </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;panel&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 8pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s12">panel.preferredSize.width </span
      ><span style="color: #007e2f">= </span><span class="s12">200</span>;
      <span class="s7">panel.add </span>(<span class="s9">&#39;button&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      <span class="s7">panel.add </span>(<span class="s9">&#39;button&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      In a mixed style, however, you can’t use <span class="h4">.width</span>,
      and you have to use the array notation and leave one element unspecified.
      In our example we want to set the width, which is the first element in the
      two-element array, so we leave the second element, which defined the
      height, undefined (we could have used -1 here, too, or leave it out
      altogether):
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      // All three variants work:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">panel </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;panel {</span
      ><span class="s12">preferredSize: [200, undefined]</span
      ><span class="s9">}&quot;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">panel </span>=
      <span class="s7">w.add </span>(<span class="s9">&quot;panel {</span
      ><span class="s12">preferredSize: [200, -1]</span
      ><span class="s9">}&quot;</span>); <span class="s6">var </span
      ><span class="s7">panel </span>= <span class="s7">w.add </span>(<span
        class="s9"
        >&quot;panel {</span
      ><span class="s12">preferredSize: [200, ]</span
      ><span class="s9">}&quot;</span>);
      <span class="s7">panel.add </span>(<span class="s9">&#39;button&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="padding-left: 31pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">panel.add </span>(<span class="s9">&#39;button&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 8pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a127">Displaying properties and methods</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The properties and methods associated with all controls are listed in the
      Tools Guide but the guide has not always been accurate, presumably because
      of changes to ScriptUI after the Guides had been finished. In addition,
      ScriptUI has its own entry in the ESTK’s object-model viewer – press F1 in
      the ESTK to access it. This is more reliable than the PDF.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      For a convenient way to get a quick overview of which properties and
      methods are available for a particular control, you can use the two
      functions in the following script. The first few lines of the script
      define a simple dialog with
    </p>
    <p
      style="
        padding-top: 4pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      just one edittext control. A call to <span class="h4">prop() </span>prints
      all properties and their current values. A call to
      <span class="h4">meth() prints </span>a similar list for all methods (bold
      added).
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s6">var </span>e <b>= </b>w.add<b>(</b
      ><span style="color: #cd1719">&quot;edittext&quot;</span>, undefined,
      <span style="color: #cd1719">&quot;Cats&quot;</span
      ><b>); </b>prop<b>(</b>e<b>);</b>
    </p>
    <p
      class="s7"
      style="padding-left: 17pt; text-indent: 0pt; text-align: center"
    >
      meth<b>(</b>e<b>);</b>
    </p>
    <p
      class="s12"
      style="
        padding-top: 2pt;
        padding-left: 17pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      //~ w.show ();
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>prop <b>(</b>f<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      $.writeln <b>(</b>f.reflect.name<b>);</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>props <b>= </b>f.reflect.properties<b>;</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">array </span><span class="s8">= [];</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">props.length</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">try </span>{<span class="s7">array.push </span>(<span
        class="s7"
        >props</span
      >[<span class="s7">i</span>]<span class="s7">.name </span>+
      <span class="s9">&quot;: &quot; </span>+ <span class="s7">f</span>[<span
        class="s7"
        >props</span
      >[<span class="s7">i</span>]<span class="s7">.name</span>])}
      <span class="s7">catch </span>(<span class="s7">_</span>){}
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      array.sort <b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s7">array.join </span
      >(<span class="s9">&quot;\r&quot;</span>));
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s7"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">function </span>meth <b>(</b>m<b>)</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      {
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span>props <b>= </b>m.reflect.methods.sort<b
        >();</b
      >
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">$.writeln </span>(<span class="s9"
        >&quot;\rMethods&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">props.length</span>;
      <span class="s7">i</span>++)
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      $.writeln <b>(</b>props<b>[</b>i<b>]</b>.name<b>);</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      class="s11"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      EditText
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      active: false alignment: undefined bounds: undefined characters: undefined
      children:
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      enabled: true
    </p>
    <p
      class="s11"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      graphics: [object ScriptUIGraphics]
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      helpTip:
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      indent: undefined justify: left location: undefined
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      maximumSize: 3790,1150
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      minimumSize: 0,0 parent: [object Window] preferredSize: 35,20 properties:
      undefined shortcutKey: undefined size: undefined
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      text: Cats textselection:
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      type: edittext visible: true
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      window: [object Window] windowBounds: 0,0,100,30
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      Methods addEventListener dispatchEvent hide
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      notify removeEventListener show
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      It’s a simple list without any clarification. Nevertheless, I find it
      useful to print a quick overview of a control’s properties (you can use
      the script to display
    </p>
    <p
      class="s11"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      ScriptUIGraphics
      <span class="s10"
        >BrushType: [object Object] PenType: [object Object]</span
      >
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      backgroundColor: undefined currentPath: [object ScriptUIPath]
      currentPoint: undefined disabledBackgroundColor: undefined
      disabledForegroundColor: undefined font: Tahoma:12.0
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      foregroundColor: undefined
    </p>
    <p style="text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      properties and methods in the object models of all CS and CC applications,
      not just ScriptUI).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Some of the properties are objects themselves, and these can be displayed,
      too.
    </p>
    <p
      style="
        padding-top: 1pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      For example, change <span class="h4">prop(e) </span>in the third line of
      the script as follows to print a list of just the ScriptUIGraphics object:
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      prop <b>(</b>e.graphics<b>);</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <h2
      style="
        padding-top: 8pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a128">Resources</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Virtually the only real comprehensive ScriptUI resource is the dedicated
      chapter in the Tools Guide that comes with the ESTK; you can find it in
      the ESTK’s Help menu. This is a PDF file called
      <span class="h4">JavaScript Tools Guide CSx/CC.pdf</span>.
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a href="http://www.jongware.com/idjshelp.html)" class="a" target="_blank"
        >Using the ESTK’s object-model viewer you can browse the ScriptUI object
        model. And Jongware’s fabulous CS object browsers include a version for
        ScriptUI (see </a
      >http://www.jongware.com/idjshelp.html). A more recent alternative (based
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a href="http://www.indesignjs.de/" class="a" target="_blank"
        >on JongWare’s browser) is Georg Fellenz’s browser
        (https://www.indesignjs</a
      >.de/ extendscriptAPI/indesign14/#about.html). These are versioned:
      <span class="s1">indesign14 </span>is CC2019; to access a different
      version, change 14 to the appropriate number.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Another source of information is the collection of sample scripts that
      comes with the ESTK, and which are listed on the first page of the
      ScriptUI chapter in the Tools Guide. To find these scripts, search your
      hard disk for a file with the name one of them (e.g. ColorPicker.jsx):
      their location depends on your operating system and CS version.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      A more interesting collection of scripts are those that can be found in
      the ESTK’s <span class="h4">Required </span>subdirectory. The scripts
      there form the basis of the ESTK’s interface and use ScriptUI for their
      dialogs and other windows. This is a fascinating collection, with many
      instructive techniques. Do <span class="h4">not </span>on any account
      change these scripts. The location of the scripts depends on your OS and
      CS/CC version. To find the folder, search your disk for a script called
      35OMVui.jsx.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a href="http://www/" class="a" target="_blank"
        >Bob Stucky has collected a number of educational scripts here: </a
      >http://www. creativescripting.net/freeStuff/ScriptUI_Validation.zip.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a href="http://forums.adobe.com/community/" class="a" target="_blank"
        >For help, go to Adobe’s scripting forum </a
      ><a href="http://forums.scriptui/" class="a" target="_blank"
        >(http://forums.adobe.com/community/ indesign/indesign_scripting), where
        there’s always someone at hand to help with problems. There is also a
        dedicated ScriptUI forum at </a
      >http://forums.scriptui. com/.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Apart from that (and the present text), information can be found in some
      blogs and forums, some of which I list below (If you know of any useful
      blogs and links, please let me know).
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a129">Blogs</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The following blogs feature several items and script examples dealing with
      ScriptUI:
    </p>
    <ul id="l4">
      <li data-list-text="–">
        <p
          style="
            padding-left: 35pt;
            text-indent: -7pt;
            line-height: 13pt;
            text-align: left;
          "
        >
          Marc Autret’s <span class="h4">Indiscript</span
          ><a href="http://www.indiscripts.com/" class="a" target="_blank">: </a
          ><a href="http://www.indiscripts.com/" class="s20" target="_blank"
            >http://www.indiscripts.com/</a
          >
        </p>
      </li>
      <li data-list-text="–">
        <p
          class="s2"
          style="
            padding-top: 1pt;
            padding-left: 39pt;
            text-indent: -11pt;
            line-height: 113%;
            text-align: left;
          "
        >
          <span style="color: #000">Loïc Aigon’s </span
          ><span class="h4">Scriptopedia </span
          ><a href="http://www.scriptopedia.org/" class="a" target="_blank"
            >at </a
          >http://www.scriptopedia.org/
          <a href="http://www.loicaigon.com/blog/" class="a" target="_blank"
            >and his more personal </a
          >http://www.loicaigon.com/blog/
          <span style="color: #000"
            >(both are in French and English and cover InDesign, Illustrator,
            Photoshop, and Acrobat).</span
          >
        </p>
      </li>
      <li data-list-text="–">
        <p
          class="s2"
          style="
            padding-left: 39pt;
            text-indent: -11pt;
            line-height: 113%;
            text-align: left;
          "
        >
          <span style="color: #000"
            >Davide Barranca writes about Photoshop and Bridge. See especially </span
          ><a
            href="http://www.davidebarranca.com/2012/10/scriptui-window-in-photoshop-palette-"
            class="s20"
            target="_blank"
            >http:// </a
          >www.davidebarranca.com/2012/10/scriptui-window-in-photoshop-palette-
          vs-dialog/
          <a
            href="http://www.davidebarranca.com/2012/11/scriptui-bridgetalk-"
            class="a"
            target="_blank"
            >and </a
          >http://www.davidebarranca.com/2012/11/scriptui-bridgetalk-
          persistent-window-examples/
          <span style="color: #000"
            >for persistent windows in Photoshop and</span
          >
        </p>
        <p
          class="s2"
          style="
            padding-top: 3pt;
            padding-left: 39pt;
            text-indent: 0pt;
            line-height: 113%;
            text-align: left;
          "
        >
          <a
            href="http://www.davidebarranca.com/2015/06/html-panel-"
            class="a"
            target="_blank"
            >Bridge, respectively. </a
          >http://www.davidebarranca.com/2015/06/html-panel-
          tips-17-cc2015-survival-guide/
          <span style="color: #000"
            >is basically about HTML panels, but has some comments about
            ScriptUI as well (see especially point 8).</span
          >
        </p>
      </li>
      <li data-list-text="–">
        <p
          style="
            padding-left: 39pt;
            text-indent: -11pt;
            line-height: 113%;
            text-align: justify;
          "
        >
          Joonas Pääkkö (who created a dialog builder, see
          &quot;Resources&quot;), has what is in effect a blog on GitHub (<span
            style="color: #0080c7"
            >https://github.com/joonaspaakko/ScriptUI-Dialog-
            Builder-Joonas</span
          >). He’ll take feature requests there as well.
        </p>
      </li>
      <li data-list-text="–">
        <p
          style="
            padding-left: 39pt;
            text-indent: -11pt;
            line-height: 113%;
            text-align: left;
          "
        >
          <a href="http://indesign-faq.de/" class="a" target="_blank"
            >Gerald Singelmann’s site at </a
          ><a href="http://indesign-faq.de/" class="s20" target="_blank"
            >http://indesign-faq.de/</a
          >, a blog with several interesting scripts with ScriptUI solutions.
        </p>
      </li>
      <li data-list-text="–">
        <p
          style="
            padding-left: 39pt;
            text-indent: -11pt;
            line-height: 113%;
            text-align: left;
          "
        >
          Marijan Tompa’s <span class="h4">InDesign Snippets</span
          ><a href="http://indisnip.wordpress.com/" class="a" target="_blank"
            >: </a
          ><span style="color: #0080c7">http://indisnip.wordpress.com/ </span
          >(last updated years ago, but still useful).
        </p>
      </li>
    </ul>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 19pt; text-indent: 0pt; text-align: left">
      <a name="a130">Useful forum topics</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a
        href="http://forums.adobe.com/community/indesign/indesign_"
        class="a"
        target="_blank"
        >Some useful topics are floating around here and there, many of them in
        Adobe’s scripting forum </a
      >(http://forums.adobe.com/community/indesign/indesign_ scripting), but
      Marc Autret’s blog (www.indiscripts.com) has a growing number of
      instructive articles on ScriptUI. In the list below I&#39;ve grouped a
      number of ScriptUI topics dealt with in the forums. (Though the list is
      out of date by now in 2019, it’s still useful.)
    </p>
    <p
      class="s37"
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Differences between Mac OS and Windows: palettes and windows
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a href="http://forums.adobe.com/thread/1103569?tstart=0"
        >http://forums.adobe.com/thread/1103569?tstart=0</a
      >
    </p>
    <p
      class="s37"
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Change the colour of the background of buttons
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a href="http://forums.adobe.com/message/2335096#2335096"
        >http://forums.adobe.com/message/2335096#2335096</a
      >
    </p>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a
        href="http://forums.adobe.com/message/2280793#2280793"
        style="
          color: #cd1719;
          font-family: Arial, sans-serif;
          font-style: normal;
          font-weight: bold;
          text-decoration: none;
          font-size: 11pt;
        "
        target="_blank"
        >Resize windows </a
      ><a
        href="http://forums.adobe.com/message/2741942#2741942"
        class="a"
        target="_blank"
        >http://forums.adobe.com/message/2280793#2280793 </a
      ><a
        href="http://forums.adobe.com/thread/858153?tstart=0"
        class="a"
        target="_blank"
        >http://forums.adobe.com/message/2741942#2741942 </a
      ><a
        href="http://forums.adobe.com/thread/957816?tstart=0"
        class="a"
        target="_blank"
        >http://forums.adobe.com/thread/858153?tstart=0 </a
      ><a
        href="http://www.hilfdirselbst.ch/gforum/gforum.cgi?post=540693&amp;540693"
        class="a"
        target="_blank"
        >http://forums.adobe.com/thread/957816?tstart=0 </a
      ><a
        href="http://www.hilfdirselbst.ch/gforum/gforum.cgi?post=540693&amp;540693"
        target="_blank"
        >http://www.hilfdirselbst.ch/gforum/gforum.cgi?post=540693#540693</a
      >
    </p>
    <p
      style="
        padding-top: 7pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 114%;
        text-align: left;
      "
    >
      <a
        href="http://forums.adobe.com/message/1111746#1111746"
        style="
          color: #cd1719;
          font-family: Arial, sans-serif;
          font-style: normal;
          font-weight: bold;
          text-decoration: none;
          font-size: 11pt;
        "
        target="_blank"
        >Icon buttons (see also Appendix 1 in this guide) </a
      ><a
        href="http://forums.adobe.com/message/2326630#2326630"
        class="a"
        target="_blank"
        >http://forums.adobe.com/message/1111746#1111746 </a
      ><a
        href="http://forums.adobe.com/message/2899148#2899148"
        class="a"
        target="_blank"
        >http://forums.adobe.com/message/2326630#2326630 </a
      ><a href="http://forums.adobe.com/message/2899148#2899148" target="_blank"
        >http://forums.adobe.com/message/2899148#2899148</a
      >
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 115%;
        text-align: left;
      "
    >
      <a
        href="http://forums.adobe.com/message/2899148#2899148"
        style="
          color: #cd1719;
          font-family: Arial, sans-serif;
          font-style: normal;
          font-weight: bold;
          text-decoration: none;
          font-size: 11pt;
        "
        target="_blank"
        >Scrollable panels </a
      ><a
        href="http://indesign-faq.de/de/ScriptUI_scrollbar"
        class="a"
        target="_blank"
        >http://forums.adobe.com/message/2899148#2899148 </a
      ><a href="http://indesign-faq.de/de/ScriptUI_scrollbar" target="_blank"
        >http://indesign-faq.de/de/ScriptUI_scrollbar</a
      >
    </p>
    <p
      class="s37"
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Progress bar
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      https://forums.adobe.com/thread/2089372
    </p>
    <p
      style="
        padding-top: 3pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      http://forums.adobe.com/message/3152162#3152162
      https://gist.github.com/966103
    </p>
    <p
      class="s37"
      style="
        padding-top: 7pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      edittext
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a href="http://forums.adobe.com/thread/964339?tstart=0"
        >http://forums.adobe.com/thread/964339?tstart=0</a
      >
    </p>
    <p
      class="s37"
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      fonts
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a href="http://www.indiscripts.com/post/2012/05/scriptui-fonts-facts"
        >http://www.indiscripts.com/post/2012/05/scriptui-fonts-facts</a
      >
    </p>
    <p
      class="s37"
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      colour
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      https://forums.adobe.com/thread/2159810
    </p>
    <p
      class="s37"
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Miscellaneous
    </p>
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a href="http://forums.adobe.com/thread/1260079?tstart=0"
        >http://forums.adobe.com/thread/1260079?tstart=0</a
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <h3 style="padding-left: 15pt; text-indent: 0pt; text-align: center">
      <a name="a131">Interactive dialog builders</a>
    </h3>
    <p
      style="
        padding-top: 9pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Interactive dialog builders are applications that allow you to construct a
      ScriptUI window without any knowledge of ScriptUI. The best one is Joonas
      Pääkkö’s.
    </p>
    <p
      style="
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      You can find it at
      <span style="color: #0080c7">https://scriptui.joonas.me/</span>. The link
      is to the on-line version, an off-line version can be downloaded from
      <span style="color: #0080c7"
        >https://github.com/joonaspaakko/ ScriptUI-Dialog-Builder-Joonas</span
      >. You can contact Joonas on that GitHub address, and he’ll discuss
      feature requests. The dialog builder is easy to use, is very capable, and
      is really the application of choice.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Slava Boyko’s DialogBuilder is available at
      <span style="color: #0080c7"
        >https://github.com/SlavaBuck/ DialogBuilder</span
      >. It was last updated in August 2014, and seems available only inRussian
      (I thought there was an English version as well, but I can’t find it).
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      <a
        href="http://omino.com/pixelblog/2008/09/21/35/"
        class="a"
        target="_blank"
        >A slightly different approach is David Van Brink’s Omino dialog
        builder. This is not an interactive dialog builder like the two apps
        mentioned above, but rather a kind of interface for ScriptUI. See </a
      ><a
        href="http://omino.com/pixelblog/2008/09/21/35/"
        class="s20"
        target="_blank"
        >http://omino.com/pixelblog/2008/09/21/35/</a
      >
    </p>
    <h2
      style="
        padding-top: 4pt;
        padding-left: 15pt;
        text-indent: 0pt;
        text-align: center;
      "
    >
      <a name="a132">Acknowledgements</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      I would like to thank Mark Francis of Adobe for sharing his knowledge of
      ScriptUI and also the following people, most of whom are (or have been)
      regulars in Adobe’s scripting forum: Marc Autret, Dirk Becker, Gabe Harbs,
      Mikhail Ivanyushin, Uwe Laubender, Kasyan Servetsky, Bob Stucky, Marijan
      Tompa, Vlad Vladila, and Ariel Walden for providing ScriptUI details and
      examples.
    </p>
    <h2
      style="
        padding-top: 4pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a133">Appendix: Embedding graphic files in a script</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Earlier we saw that the following line adds an icon from a file to an
      iconbutton in a window <span class="h4">w</span>:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">w.add </span>(<span class="s9"
        >&quot;iconbutton&quot;</span
      ><span class="s7">, undefined, </span><span class="s6">File </span>(<span
        class="s9"
        >&quot;/d/test/icon.png&quot;</span
      >));
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: justify;
      "
    >
      In itself this is convenient, but you should really check if the icon file
      is present and provide some alternative just in case the file can’t be
      found. So it would be convenient if we could embed those icons in the
      script – and we can.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The method outlined here was first described (to my knowledge) by Bob
      Stucky in Adobe’s scripting forum; see
      <span class="s17">Some useful forum topics</span>, below. The method works
      for png, idrc, and jpg files; possibly for other formats as well, but I
      haven’t tried them.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To embed a graphic in a script file we must convert the contents of the
      binary file to a string. The following script does that:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 117%;
        text-align: justify;
      "
    >
      <span class="s6">var </span><span class="s7">infile </span>=
      <span class="s6">File </span>(<span class="s9"
        >&quot;/d/test_jpg/icon.png&quot;</span
      >); <span class="s6">var </span><span class="s7">outfile </span>=
      <span class="s6">File </span>(<span class="s9"
        >&quot;/d/test_jpg/icon.txt&quot;</span
      >); <span class="s7">infile.open </span>(<span class="s9"
        >&quot;r&quot;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 24pt;
        text-indent: 0pt;
        line-height: 119%;
        text-align: left;
      "
    >
      <span class="s7">infile.encoding </span>=
      <span class="s9">&quot;binary&quot;</span>; <span class="s6">var </span
      ><span class="s7">temp </span>= <span class="s7">infile.read</span>();
      <span class="s7">infile.close</span>();
    </p>
    <p
      class="s8"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      <span class="s7">outfile.open </span>(<span class="s9">&quot;w&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      outfile.write <b>(</b>temp.toSource <b>());</b>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      outfile.close <b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: -1pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This results in a text file with a single, usually very long, line, which
      has the following form:
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      (<span class="s6">new </span><span class="s9">String</span>(<span
        class="s9"
        >&quot;. . .&quot;</span
      >))
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      To use the string in a script, open the file in a plain text editor and
      strip <span class="s17">(new String( </span>from the beginning and
      <span class="s17">)) </span>from the end. Copy the string (including the
      quote marks) and paste it into the script, declaring it as a variable.
      This variable is used in the script instead of a reference to a file
      object. Our earlier code would then look as follows:
    </p>
    <p
      class="s9"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span style="color: #000">myIcon </span
      ><span class="s8">= </span>&quot;<span style="color: #007e2f"
        >/* very long string */</span
      >&quot;<span class="s8">;</span>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">var </span><span class="s7">w </span>=
      <span class="s6">new </span><span class="s7">Window </span>(<span
        class="s9"
        >&quot;dialog&quot;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 7pt;
        line-height: 122%;
        text-align: left;
      "
    >
      w.add <b>(</b><span style="color: #cd1719">&quot;iconbutton&quot;</span>,
      undefined, myIcon<b>); </b>w.show<b>();</b>
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 3pt;
        padding-bottom: 4pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      That’s basically all there’s to it. But the conversion script, above, is a
      bit unwieldy, and I started using the following script, which is flexible
      in its input and strips the unwanted overhead away from the converted
      string.
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">function </span>graphic_to_text <b>(</b>infiles
      <span style="color: #007e2f">/*array of file objects*/ </span><b>) {</b>
    </p>
    <p
      class="s6"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      var <span class="s7">outfile, s,</span>
    </p>
    <p
      class="s7"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      re1 = /^\(new String\(/, re2 = /\)\)$/;
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      <span class="s6">for </span>(<span class="s6">var </span
      ><span class="s7">i </span>= <span class="s7">0</span>;
      <span class="s7">i </span>&lt; <span class="s7">infiles.length</span>;
      <span class="s7">i</span>++) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 40pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s6">if </span>(<span class="s7">infiles</span>[<span
        class="s7"
        >i</span
      >]<span class="s7">.exists</span>) {
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 118%;
        text-align: left;
      "
    >
      <span class="s7">outfile </span>= <span class="s6">File </span>(<span
        class="s7"
        >infiles</span
      >[<span class="s7">i</span>]<span class="s7">.fullName.replace </span
      >(<span class="s22">/\.(png|idrc)$</span><span class="s7">/, </span
      ><span class="s9">&#39;.txt&#39;</span>));
      <span class="s7">outfile.open </span>(<span class="s9">&#39;w&#39;</span
      >);
    </p>
    <p
      class="s8"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">infiles</span>[<span class="s7">i</span>]<span class="s7"
        >.encoding </span
      >= <span class="s9">&#39;BINARY&#39;</span>;
      <span class="s7">infiles</span>[<span class="s7">i</span>]<span class="s7"
        >.open</span
      >(<span class="s9">&#39;r&#39;</span>);
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      s <b>= </b>infiles<b>[</b>i<b>]</b>.read<b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">outfile.write</span>(<span class="s9"
        >&#39;var &#39; </span
      >+ <span class="s7">outfile.name.replace </span>(<span class="s9"
        >&#39;.txt&#39;</span
      ><span class="s7">, </span><span class="s9">&#39;&#39;</span>) +
      <span class="s9">&#39; = &#39;</span>);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      <span class="s7">outfile.write</span>(<span class="s7">s.toSource</span
      >()<span class="s7">.replace</span>(<span class="s7">re1, </span
      ><span class="s9">&#39;&#39;</span>)<span class="s7">.replace</span>(<span
        class="s7"
        >re2, </span
      ><span class="s9">&#39;&#39;</span>));
      <span class="s7">outfile.write</span>(<span class="s9">&#39;;&#39;</span
      >);
    </p>
    <p
      class="s7"
      style="
        padding-left: 48pt;
        text-indent: 0pt;
        line-height: 122%;
        text-align: left;
      "
    >
      infiles<b>[</b>i<b>]</b>.close<b>(); </b>outfile.close<b>();</b>
    </p>
    <p
      class="s8"
      style="
        padding-left: 40pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 32pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      }
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 30pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      The function’s input is an array of file objects. Here are some examples:
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">graphic_to_text </span>(<span class="s6">Folder </span
      >(<span class="s9">&quot;/d/test/&quot;</span>)<span class="s7"
        >.getFiles </span
      >(<span class="s9">&quot;*.png&quot;</span>));
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">graphic_to_text </span>([<span class="s6">File </span
      >(<span class="s9">&quot;/d/test/iconA.png&quot;</span>)<span class="s7"
        >, </span
      ><span class="s6">File </span>(<span class="s9"
        >&quot;/d/test/iconB.jpg&quot;</span
      >)]);
    </p>
    <p
      class="s8"
      style="
        padding-top: 2pt;
        padding-left: 24pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <span class="s7">graphic_to_text </span>([<span class="s6">File </span
      >(<span class="s9">&quot;/d/test/iconC.idrc&quot;</span>)]);
    </p>
    <p style="padding-left: 7pt; text-indent: 0pt; text-align: left" />
    <p
      style="
        padding-top: 2pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The first example is correct since
      <span class="h4">getFiles() </span>returns an array of file objects. In
      the second example, we name two files ; in the third example we want to
      convert just one file, so we pass that in the form of a one-element array.
    </p>
    <p
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      The converted graphics are written to files that use the same name as the
      graphics, but with the extention <span class="h4">.txt</span>. Each output
      file consists of a single line.
    </p>
    <h4
      style="
        padding-top: 6pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      Note<span class="p"
        >: when you paste those long strings into a script file in the ESTK
        you’ll notice that the ESTK isn’t particularly good at handling them. It
        may look as if part of the string has disappeared in the ESTK, but don’t
        let that worry you, it’s just a display problem.</span
      >
    </h4>
    <h2
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a134">Revision details – version 2.16</a>
    </h2>
    <p
      style="
        padding-top: 8pt;
        padding-left: 31pt;
        text-indent: 0pt;
        line-height: 113%;
        text-align: left;
      "
    >
      This revision is more a maintenance update than anything else. The only
      new item is mentioning Joonas Pääkkö’s dialog builder, which is an
      extremely useful tool. For the rest I checked the links and refreshed the
      text here and there.
    </p>
    <h2
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      <a name="a135">Index</a>
    </h2>
    <p
      class="s38"
      style="
        padding-top: 10pt;
        padding-left: 19pt;
        text-indent: -12pt;
        text-align: left;
      "
    >
      Note<span class="s10"
        >: Blue page numbers refer to text in a sidenote</span
      >
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: -12pt; text-align: left"
    >
      ActionScript and Flash 67
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      active <span class="s10">5–6</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      AfterEffects <span style="color: #0b4697">2</span>, 9
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 0pt; text-align: left"
    >
      .addEventListener() <span style="color: #0b4697">22</span>
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      CC <span style="color: #0b4697">22</span>
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      Aigon, Loïc 67, 112 alert()
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      native 12
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      scripted, scrollable 12
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      alignChildren <span class="s10">19, 103</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      alignment <span class="s10">102</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      in edittext controls 12, 64
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      in a group 7 in a window 7
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      anonymous function 3
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      application icons 17–18
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      ExtendScript Toolkit 18
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      file formats 18
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      InDesign 18–19
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 12pt; text-align: left"
    >
      Photoshop 17 Autret, Marc
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      blog 112, 113
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      on fixing listbox display problems 41 on font names
      <span style="color: #0b4697">78</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      on image resizing 63
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      on the layout manager 105 on mouse events 87
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      on onResize 104
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      on sprites 93
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      on progress bars 61 on scrollbars 64
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      Barranca, Davide 3, 67, 112–13
    </p>
    <p
      class="s39"
      style="
        padding-top: 2pt;
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 79%;
        text-align: left;
      "
    >
      <span class="s10">Becker, Dirk 18, 81 </span>borderless
      <span class="s38">See </span>window bounds <span class="s10">99</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Boyko, Slava 114
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Bridge 112
    </p>
    <p
      class="s39"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      button
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      default action 14
    </p>
    <p
      class="s41"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      style <span class="s10">16</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      toggle <span class="s10">16</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      toolbutton <span class="s10">16</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      callback 14–15
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      combining 15
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      and event handler 85 in a loop 84
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      CC2017 67
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      characters <span class="s10">11</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      checkbox
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: left;
      "
    >
      three-state 93–7
    </p>
    <p
      class="s39"
      style="
        padding-left: 7pt;
        text-indent: 11pt;
        line-height: 91%;
        text-align: left;
      "
    >
      value <span class="s10">19 checkmark</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      on list items 34
    </p>
    <p
      class="s39"
      style="
        padding-top: 1pt;
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 75%;
        text-align: left;
      "
    >
      children <span class="s38">See </span>group<span class="s10">; </span
      >panel clientX <span class="s10">86</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      clientY <span class="s10">86</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      closeButton <span class="s38">See </span>Window
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: left;
      "
    >
      colour 80–1
    </p>
    <p
      class="s39"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 91%;
        text-align: left;
      "
    >
      columnWidths <span class="s10">35 control</span>
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      add/remove dynamically 72–3
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      finding 76–7
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      labelling 73–4
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      measurement 67–9
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      text alignment 102
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      title 71–2
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      visibility 58
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      creation properties 10
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 11pt; text-align: left"
    >
      in resource strings 109 custom properties 45
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: -11pt; text-align: left"
    >
      dialog builders DialogBuilder 114
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      Omino 114
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      Rapid ScriptUI 114
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      ScriptUI Builder 114
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      dropdown
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: justify;
      "
    >
      combine with edit field 42–5
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: justify"
    >
      create on the fly 44–5 and event handlers
      <span style="color: #0b4697">91 </span>images 42
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: justify;
      "
    >
      select as you type 89–92
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      selection <span class="s10">41</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      separator <span class="s10">42</span>
    </p>
    <p
      class="s39"
      style="
        padding-top: 7pt;
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 14pt;
        text-align: left;
      "
    >
      edittext <span class="s10">4, 92</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: justify;
      "
    >
      activating 5
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      alignment <span class="s10">12</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      characters <span class="s10">5</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      copy/paste 11
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      display problem in Windows 11 in dropdowns 43
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      Enter/Return key 11
    </p>
    <p
      class="s10"
      style="padding-left: 17pt; text-indent: 1pt; text-align: left"
    >
      in ExtendScript ToolKit 11 incrementing numeric values 88
      <span class="s41">justify </span>64
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      limitations 11, 88
    </p>
    <p
      class="s39"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      multiline <span class="s10">11</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      noecho <span class="s10">12</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: justify;
      "
    >
      numerical input 88
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      numeric input 88
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      onChange 83
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      in PhotoShop 11
    </p>
    <p
      class="s41"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      readonly <span class="s10">12</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      scrollbar 11, 64
    </p>
    <p
      class="s39"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      scrolling <span class="s10">11</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      size <span class="s10">5</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: left;
      "
    >
      validation 92–7
    </p>
    <p
      class="s39"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      wantReturn <span class="s10">11</span>
    </p>
    <p
      class="s41"
      style="
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      enterKeySignalsOnChange <span class="s40">38</span>
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      ESTK <span class="s38">See </span>ExtendScript ToolKit event handler
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      and callback 85 Mac vs. Windows 90
    </p>
    <p
      class="s10"
      style="padding-left: 32pt; text-indent: -12pt; text-align: left"
    >
      problem with event handler on Macs <span style="color: #0b4697">91</span>
    </p>
    <p
      class="s10"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      event listener 73
    </p>
    <p
      class="s10"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      keydown 87
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 12pt; text-align: left"
    >
      target 87 ExtendScript ToolKit
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      application icons 18
    </p>
    <p
      class="s39"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 14pt;
        text-align: left;
      "
    >
      edittext <span class="s10">11</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      Fellenz, Georg 112
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      .find()
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      listbox 26
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      Window 74–84
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      .findElement() 77, 107 finding a control 77
      <span class="s41">flashplayer </span>67
    </p>
    <p
      class="s10"
      style="
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      fonts 78–80
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      default type size 78 names 78–9
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      style names 79
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      substitutes 79
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      type size 78
    </p>
    <p
      class="s39"
      style="text-indent: 0pt; line-height: 14pt; text-align: right"
    >
      frameBounds <span class="s10">99</span>
    </p>
    <p
      class="s39"
      style="
        padding-top: 7pt;
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      group
    </p>
    <p
      class="s39"
      style="text-indent: 0pt; line-height: 12pt; text-align: right"
    >
      children <span class="s10">20</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      scrolling 66
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Harbs, Gabe 43, 57
    </p>
    <p
      class="s39"
      style="
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 14pt;
        text-align: left;
      "
    >
      helpTip <span class="s10">84</span>
    </p>
    <p
      class="s39"
      style="
        padding-top: 7pt;
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      iconbutton <span class="s10">16–19</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      image <span class="s10">16</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      state-sensitive 17
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      style 16
    </p>
    <p
      class="s39"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      toggle <span class="s10">16</span>
    </p>
    <p
      class="s38"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      See also <span class="s39">button</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      icons
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      application icons 17–18 embedding in script 115–16 file formats 16
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      in treeviews 46
    </p>
    <p
      class="s38"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      See also <span class="s39">image</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      .idrc 18, 115
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      idrc 18 Illustrator
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      .addEventListener() <span style="color: #0b4697">22</span>
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      CC <span style="color: #0b4697">22</span>
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      panel appearance 9
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 13pt;
        line-height: 91%;
        text-align: left;
      "
    >
      target engine <span style="color: #0b4697">2 </span>Illy
      <span class="s38">See </span>Illustrator <span class="s39">image</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      in icon buttons 16
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      scaling 62
    </p>
    <p
      class="s39"
      style="
        padding-top: 1pt;
        padding-left: 32pt;
        text-indent: -12pt;
        line-height: 75%;
        text-align: left;
      "
    >
      <span class="s38">See also </span>dropdown<span class="s10"
        >; icons; </span
      >listbox<span class="s10">; Photoshop; </span>treeview
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      Jongware 112
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      .jpg 115
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 82%;
        text-align: left;
      "
    >
      jumpdelta <span class="s38">See </span>scrollbar justification
      <span class="s38">See </span>alignment <span class="s41">justify </span
      ><span class="s10">11</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      keyboard 87–92
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      arrow keys 88–9
    </p>
    <p
      class="s41"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      keydown <span class="s10">87</span>
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      type-ahead functions 89–92
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      keyboard event 87
    </p>
    <p
      class="s41"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      keydown <span class="s38">See </span><span class="s10">keyboard</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      label
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      see control 73
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      .layout 12, 104
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      .layout() 12
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      layout manager 97, 98, 105 lines <span class="s38">See </span>rules
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      listbox
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      adding items 22, 27
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      avoid duplicate items 27 create on the fly 44–5 determine selection 23, 25
      display problem in CS6/
    </p>
    <p
      class="s10"
      style="
        padding-left: 32pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      Windows 10 22
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      display problems in CC 40–1 filtering 37–9
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      finding items 26 fitting on screen 99 handling long lists 40 images 34
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      index 24
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s39"
      style="text-indent: 0pt; line-height: 14pt; text-align: right"
    >
      listItem <span class="s10">24</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      move items 29
    </p>
    <p
      class="s10"
      style="padding-left: 32pt; text-indent: -12pt; text-align: left"
    >
      multi-column 35–6 display problem in CS6/
    </p>
    <p
      class="s10"
      style="
        padding-left: 44pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      Windows 10 35
    </p>
    <p
      class="s10"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      Illustrator problem 35
    </p>
    <p
      class="s10"
      style="padding-left: 32pt; text-indent: 0pt; text-align: left"
    >
      table 36
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      multi-select 22–3, 25, 31, 62
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      multiselection 22
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      onChange 83
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      processing long lists 39–40 processing selection 26
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      remove item 31
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      scrollbar 64
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      selected item 23–4
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      selection 25, 26
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      separator 42
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      sorting 27–8
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      type-ahead 37–9
    </p>
    <p
      class="s10"
      style="padding-left: 32pt; text-indent: -12pt; text-align: left"
    >
      Windows 10 display problem with CS6 35
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 75%;
        text-align: left;
      "
    >
      listItem <span class="s38">See </span>listbox location
      <span class="s10">98</span>
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      Mac OS
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      dropdown list 91
    </p>
    <p
      class="s10"
      style="padding-left: 20pt; text-indent: 0pt; text-align: left"
    >
      event handlers 90, <span style="color: #0b4697">91 </span>location of
      icons 18 OS differences 3, 113
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      resizable windows 104
    </p>
    <p
      class="s39"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      stack <span class="s10">order 43, 101</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      vertical scrollbar 60
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      vertical slider 64
    </p>
    <p
      class="s39"
      style="text-indent: 0pt; line-height: 13pt; text-align: right"
    >
      margins <span class="s10">10, 101</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      ordered array 101
    </p>
    <p
      class="s41"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      maximumSize <span class="s10">99, 100</span>
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      measurement input 13, 67–9, 88–9
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      &#39;milligram&#39; 81
    </p>
    <p
      class="s41"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      minimumSize <span class="s10">101 modal vs. non-modal 1</span>
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      Mondo rendering engine <span style="color: #0b4697">67 </span>mouse
    </p>
    <p
      class="s10"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      click detection 86–7
    </p>
    <p
      class="s10"
      style="
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      mouse events 86
    </p>
    <p
      class="s39"
      style="
        padding-top: 1pt;
        padding-left: 20pt;
        text-indent: -11pt;
        line-height: 75%;
        text-align: left;
      "
    >
      multiline edittext <span class="s10">11</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 20pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      statictext <span class="s10">10</span>
    </p>
    <p
      class="s39"
      style="
        padding-top: 7pt;
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 14pt;
        text-align: left;
      "
    >
      node <span class="s38">See </span>treeview
    </p>
    <p
      class="s10"
      style="
        padding-left: 8pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      no-echo text field 12
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      .notify() 70
    </p>
    <p
      class="s10"
      style="padding-left: 8pt; text-indent: 0pt; text-align: left"
    >
      numeric input 13
    </p>
    <p
      class="s10"
      style="
        padding-top: 4pt;
        padding-left: 7pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      Omino dialog builder 114 onChange 23, 24, 38, 43, 83
    </p>
    <p
      class="s38"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      See also <span class="s39">edittext</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      onChanging 38, 63
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      onClick 14, 15, 70, 82
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      onDoubleClick 84
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      onResize 104
    </p>
    <p
      class="s10"
      style="padding-left: 235pt; text-indent: 0pt; text-align: center"
    >
      Mac 104
    </p>
    <p
      class="s10"
      style="padding-left: 236pt; text-indent: 0pt; text-align: center"
    >
      onResizing 104
    </p>
    <p
      class="s10"
      style="
        padding-left: 235pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: center;
      "
    >
      onShow 15, <span style="color: #0b4697">32</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      orientation <span class="s10">101</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      change dynamically 105
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      group 6
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      panel 6
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      window 5
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      Pääkkö, Joonas i, 114 palette
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      inside a function 2–3
    </p>
    <p
      class="s39"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      panel
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      border style 9
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      children 20
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      scrolling 66 used for rules 81
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      password
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      masked 12
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      Perplies, Werner 22
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      persistent engine 77 persistent windows
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      in Bridge 112
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      in PhotoShop 112
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      Photoshop 9, 112
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      application icons 17
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      edittext 11
    </p>
    <p
      class="s10"
      style="padding-left: 30pt; text-indent: -11pt; text-align: left"
    >
      image format restrictions in CC 2015
      <span style="color: #0b4697">67</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      palette 2, 3
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      persistent windows 112 problems with PNG files 18 sliders 64
    </p>
    <p
      class="s10"
      style="
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      .png 18, 115
    </p>
    <p
      class="s41"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      preferredSize <span class="s10">98, 101, 110</span>
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      formats 97
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      single value in resource strings 109
    </p>
    <p
      class="s39"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      progressbar
    </p>
    <p
      class="s10"
      style="
        padding-left: 31pt;
        text-indent: -11pt;
        line-height: 75%;
        text-align: left;
      "
    >
      and <span class="s39">app.scriptPreferences. enableRedraw </span
      ><span style="color: #0b4697">60</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      lists 61
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      orientation 60
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 11pt; text-align: left"
    >
      vertical 60 progress indicator
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 12pt; text-align: left"
    >
      display counters 62 prompt <span class="s38">See </span>control title
    </p>
    <p
      class="s39"
      style="
        padding-top: 1pt;
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 14pt;
        text-align: left;
      "
    >
      radiobutton
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      finding the selected button 20
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      multiple groups 21
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      scope 21, 21–2 select as child 20 vs. checkbox 19
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: justify"
    >
      read-only text field 12 regular expression 39 resize
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: justify"
    >
      columns in multi-select lists 35 images 63
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: justify;
      "
    >
      problem in Windows 8.1 104
    </p>
    <p
      class="s10"
      style="
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: justify;
      "
    >
      .resize() 104
    </p>
    <p
      class="s39"
      style="
        padding-left: 270pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: center;
      "
    >
      resizeable <span class="s40">85</span><span class="s10">, 104</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      resource string 10, 106
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      creation properties 109
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      revealItem() 32–3
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: justify"
    >
      in CC <span style="color: #0b4697">32</span>
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      rules 81–2
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      $.screens 100
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      screen size <span class="s38">See </span>$.screens
    </p>
    <p
      class="s39"
      style="
        padding-top: 1pt;
        padding-left: 17pt;
        text-indent: -10pt;
        line-height: 75%;
        text-align: left;
      "
    >
      scrollbar jumpdelta <span class="s10">66</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: justify;
      "
    >
      orientation 65
    </p>
    <p
      class="s39"
      style="
        padding-left: 272pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: center;
      "
    >
      stepdelta <span class="s10">66</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: justify;
      "
    >
      value 65
    </p>
    <p
      class="s38"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      See also <span class="s39">edittext</span>
    </p>
    <p
      class="s10"
      style="text-indent: 0pt; line-height: 10pt; text-align: right"
    >
      scrolling 11
    </p>
    <p
      class="s10"
      style="padding-left: 24pt; text-indent: 0pt; text-align: left"
    >
      alert 12
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: justify;
      "
    >
      panels 66
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      selection <span class="s38">See </span><span class="s39">listbox</span>;
      <span class="s39">dropdown</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Servetsky, Kasyan 47
    </p>
    <p
      class="s10"
      style="padding-left: 7pt; text-indent: 0pt; text-align: left"
    >
      shortcut keys 70–1
    </p>
    <p
      class="s10"
      style="padding-left: 5pt; text-indent: 0pt; text-align: left"
    >
      .show() 7
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Singelmann, Gerald 72, 113
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      size <span class="s10">98</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: justify;
      "
    >
      different format 98
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      SlavaBuck <span class="s38">See </span>Boyko, Slava
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      slider
    </p>
    <p
      class="s39"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      maxvalue <span class="s10">109</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      minvalue <span class="s10">109</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      negative values 64
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      value 109
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      vertical orientation 64
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      spacing <span class="s10">101</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 9pt;
        text-align: left;
      "
    >
      sprite 41
    </p>
    <p
      class="s38"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      See also <span class="s39">checkbox</span
      ><span class="s10">, three-state</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      stack <span class="s10">101</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 7pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      stack alignment 43, 44, 58
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Mac vs Windows 43, 101
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      statictext <span class="s10">4, 10–11</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 19pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      alignment 11
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      justify 11
    </p>
    <p
      class="s10"
      style="padding-left: 19pt; text-indent: 0pt; text-align: left"
    >
      multiline 10
    </p>
    <p
      class="s39"
      style="
        padding-top: 2pt;
        padding-left: 6pt;
        text-indent: 0pt;
        text-align: left;
      "
    >
      stepdata <span class="s38">See </span>scrollbar
      <span class="s10">Stucky, Bob 13, 64, 92, 112 style groups</span>
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      in list boxes 45 in treeviews 48
    </p>
    <p
      class="s39"
      style="
        padding-top: 8pt;
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 14pt;
        text-align: left;
      "
    >
      tabbedpanel
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      preselect 58
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 11pt; text-align: left"
    >
      vertically aligned tabs 58 table 36
    </p>
    <p
      class="s38"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      See also <span class="s39">listbox</span
      ><span class="s10">, multi-column</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      #targetengine 77
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      AfterEffects <span style="color: #0b4697">2</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Illustrator <span style="color: #0b4697">2</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 82%;
        text-align: left;
      "
    >
      3-state checkbox <span class="s38">See </span
      ><span class="s39">checkbox </span>three-state checkbox
      <span class="s38">See </span><span class="s39">checkbox </span
      ><span class="s41">titleLayout </span>71
    </p>
    <p
      class="s39"
      style="
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      toggle <span class="s38">See </span>button
    </p>
    <p
      class="s39"
      style="
        padding-top: 1pt;
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 78%;
        text-align: left;
      "
    >
      <span class="s10">Tompa, Marijan 113 </span>toolbutton
      <span class="s38">See </span>button treeview
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      adding items 54–5 create on the fly 48–9 expand all nodes 46–7
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      expanded <span class="s10">45, 46, 55</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      expand non-terminal node after
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 11pt; text-align: left"
    >
      inserting an item <span style="color: #0b4697">55 </span>export tree 56
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      find items 49 highlighting an item 49 move nodes 51–3
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      remove items 53 traversing a tree 49
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      type-ahead <span class="s38">See </span>keyboard;
      <span class="s39">listbox</span>
    </p>
    <p
      class="s10"
      style="
        padding-top: 7pt;
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 13pt;
        text-align: left;
      "
    >
      validation <span class="s38">See </span><span class="s39">edittext</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: -12pt;
        line-height: 75%;
        text-align: left;
      "
    >
      value <span class="s38">See </span>radiobutton<span class="s10">; </span
      >scrollbar<span class="s10">; </span>checkbox
    </p>
    <p
      class="s10"
      style="padding-left: 6pt; text-indent: 0pt; text-align: left"
    >
      Van Brink, David 114 viewport 66, 94
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      visible <span class="s10">58</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Vladila, Vlad 25, 66
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 78%;
        text-align: left;
      "
    >
      <span class="s10">Walden, Ariel 60 </span>wantReturn
      <span class="s38">See </span>edittext width <span class="s10">110</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 6pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Window
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      borderless <span class="s10">9</span>
    </p>
    <p
      class="s39"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      closeButton <span class="s10">8</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      frame 8–9
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      margins 9
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      orientation 5, 105
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      OS differences 3 position of title 4
    </p>
    <p
      class="s10"
      style="
        padding-top: 4pt;
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      resize dynamically 105
    </p>
    <p
      class="s10"
      style="
        padding-left: 5pt;
        text-indent: 12pt;
        line-height: 91%;
        text-align: left;
      "
    >
      type <span class="s39">window </span
      ><span style="color: #0b4697">1 </span>Windows
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 11pt;
        text-align: left;
      "
    >
      appearance of <span class="s39">dialog </span>and
    </p>
    <p
      class="s39"
      style="
        padding-left: 30pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      palette <span class="s10">2</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 18pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      icon location 18
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      lack of vertical progress bar 60 resize problem in Windows 8.1 104
    </p>
    <p
      class="s39"
      style="
        padding-left: 17pt;
        text-indent: 0pt;
        line-height: 12pt;
        text-align: left;
      "
    >
      stack <span class="s10">order 43, 101</span>
    </p>
    <p
      class="s10"
      style="
        padding-left: 5pt;
        text-indent: 0pt;
        line-height: 10pt;
        text-align: left;
      "
    >
      Windows 10
    </p>
    <p
      class="s10"
      style="padding-left: 18pt; text-indent: 0pt; text-align: left"
    >
      listbox display in CS6 22
    </p>
    <p
      class="s10"
      style="padding-left: 30pt; text-indent: -11pt; text-align: left"
    >
      multi-column listbox display in CS6 35
    </p>
    <p style="text-indent: 0pt; text-align: left"><br /></p>
    <p
      class="s10"
      style="padding-left: 5pt; text-indent: 0pt; text-align: left"
    >
      Xavier 81
    </p>
  </body>
</html>
